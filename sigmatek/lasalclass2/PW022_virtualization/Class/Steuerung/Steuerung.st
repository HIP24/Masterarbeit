//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "Steuerung"
	Revision           = "0.0"
	GUID               = "{5A37DF6F-1726-41AC-9D0F-CF0CA69532D1}"
	RealtimeTask       = "true"
	DefRealtime        = "1000 ms"
	CyclicTask         = "false"
	DefCyclictime      = "10 ms"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(428,120)">
	<Channels>
		<Server Name="ClassSvr" GUID="{B2A37DC4-7F50-4B95-A297-24ECB2B73760}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Start" GUID="{C497E0B3-4CDB-43CD-82A5-058BE8691E9E}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Stop" GUID="{9DDE3BE4-F38F-48C4-9CDC-26AFB44B36FE}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Client Name="cPeriodeDuration_ch1" Required="true" Internal="false"/>
		<Client Name="cPeriodeDuration_ch2" Required="true" Internal="false"/>
		<Client Name="cPeriodeDuration_ch3" Required="true" Internal="false"/>
		<Client Name="cPeriodeDuration_ch4" Required="true" Internal="false"/>
		<Client Name="cPeriodeDuration_ch5" Required="true" Internal="false"/>
		<Client Name="cPeriodeDuration_ch6" Required="true" Internal="false"/>
		<Client Name="cPWMOnTime_ch1" Required="true" Internal="false"/>
		<Client Name="cPWMOnTime_ch2" Required="true" Internal="false"/>
		<Client Name="cPWMOnTime_ch3" Required="true" Internal="false"/>
		<Client Name="cPWMOnTime_ch4" Required="true" Internal="false"/>
		<Client Name="cPWMOnTime_ch5" Required="true" Internal="false"/>
		<Client Name="cPWMOnTime_ch6" Required="true" Internal="false"/>
	</Channels>
</Class>
*)
Steuerung : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
	Stop 	: SvrCh_DINT;
	Start 	: SvrCh_DINT;
  //Clients:
	cPeriodeDuration_ch1 	: CltCh_DINT;
	cPWMOnTime_ch1 	: CltCh_DINT;
	cPeriodeDuration_ch2 	: CltCh_DINT;
	cPWMOnTime_ch2 	: CltCh_DINT;
	cPeriodeDuration_ch3 	: CltCh_DINT;
	cPWMOnTime_ch3 	: CltCh_DINT;
	cPeriodeDuration_ch4 	: CltCh_DINT;
	cPWMOnTime_ch4 	: CltCh_DINT;
	cPeriodeDuration_ch5 	: CltCh_DINT;
	cPWMOnTime_ch5 	: CltCh_DINT;
	cPeriodeDuration_ch6 	: CltCh_DINT;
	cPWMOnTime_ch6 	: CltCh_DINT;
  //Variables:
		Timemark1 	: UDINT;
		Timemark2 	: UDINT;
		ActualValue 	: REAL;
		AverageLatency_raw 	: REAL;
		AverageLatency_us 	: REAL;
		AverageLatency_ns 	: REAL;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
	
	FUNCTION VIRTUAL GLOBAL RtWork
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB Steuerung::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_STEUERUNG
0$UINT, 0$UINT, (SIZEOF(::Steuerung))$UINT, 
3$UINT, 12$UINT, 0$UINT, 
TO_UDINT(736632136), "Steuerung", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::Steuerung.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
(::Steuerung.Stop.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2411985666), "Stop", 
(::Steuerung.Start.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1747818303), "Start", 
//Clients:
(::Steuerung.cPeriodeDuration_ch1.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(1093206185), "cPeriodeDuration_ch1", 
(::Steuerung.cPWMOnTime_ch1.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(1657869576), "cPWMOnTime_ch1", 
(::Steuerung.cPeriodeDuration_ch2.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(3625996563), "cPeriodeDuration_ch2", 
(::Steuerung.cPWMOnTime_ch2.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(4225254578), "cPWMOnTime_ch2", 
(::Steuerung.cPeriodeDuration_ch3.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(2938593669), "cPeriodeDuration_ch3", 
(::Steuerung.cPWMOnTime_ch3.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(2363454500), "cPWMOnTime_ch3", 
(::Steuerung.cPeriodeDuration_ch4.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(826536998), "cPeriodeDuration_ch4", 
(::Steuerung.cPWMOnTime_ch4.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(314302855), "cPWMOnTime_ch4", 
(::Steuerung.cPeriodeDuration_ch5.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(1178911920), "cPeriodeDuration_ch5", 
(::Steuerung.cPWMOnTime_ch5.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(1706873105), "cPWMOnTime_ch5", 
(::Steuerung.cPeriodeDuration_ch6.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(3746403594), "cPeriodeDuration_ch6", 
(::Steuerung.cPWMOnTime_ch6.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(4239753387), "cPWMOnTime_ch6", 
END_FUNCTION


#define USER_CNT_Steuerung 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_Steuerung] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION Steuerung::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_Steuerung, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Init		:= #Init();
	vmt.CmdTable.RtWork		:= #RtWork();
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Stop.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Stop.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Start.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Start.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION
FUNCTION VIRTUAL GLOBAL Steuerung::Init
    if _FirstScan = TRUE then
        cPeriodeDuration_ch1.Write(20000);
        cPeriodeDuration_ch2.Write(20000);
        cPeriodeDuration_ch3.Write(20000);
        cPeriodeDuration_ch4.Write(20000);
        cPeriodeDuration_ch5.Write(20000);
        cPeriodeDuration_ch6.Write(20000);
    end_if;
END_FUNCTION

FUNCTION VIRTUAL GLOBAL Steuerung::RtWork
    VAR_INPUT
        EAX : UDINT;
    END_VAR
    VAR_OUTPUT
        state (EAX) : UDINT;
    END_VAR
    VAR
  	  i : DINT;
    END_VAR

    // Record the start time
    Timemark1 := OS_READMICROSEC();
    
    // Loop to send commands and measure latency
    for i := 0 to 999 do
        cPWMOnTime_ch1.Write(700);
        cPWMOnTime_ch2.Write(200);
        cPWMOnTime_ch3.Write(300);
        cPWMOnTime_ch4.Write(400);
        cPWMOnTime_ch5.Write(500);
        cPWMOnTime_ch6.Write(600);
    end_for;
    
    // Record the end time
    Timemark2 := OS_READMICROSEC();
    
    // Calculate average latency per operation
    AverageLatency_raw := (Timemark2 - Timemark1);
    AverageLatency_us := AverageLatency_raw / 1000;
    AverageLatency_ns := AverageLatency_us * 1000;
  
    state := READY;
END_FUNCTION
