@inproceedings{abediRTNFPredictableLatency2019,
  title = {{{RTNF}}: {{Predictable Latency}} for {{Network Function Virtualization}}},
  shorttitle = {{{RTNF}}},
  booktitle = {2019 {{IEEE Real-Time}} and {{Embedded Technology}} and {{Applications Symposium}} ({{RTAS}})},
  author = {Abedi, Saeed and Gandhi, Neeraj and Demoulin, Henri Maxime and Li, Yang and Wu, Yang and Phan, Linh Thi Xuan},
  date = {2019-04},
  pages = {368--379},
  publisher = {IEEE},
  location = {Montreal, QC, Canada},
  doi = {10.1109/RTAS.2019.00038},
  url = {https://ieeexplore.ieee.org/document/8743247/},
  urldate = {2024-03-25},
  abstract = {A key challenge with network function virtualization is to provide stable latencies, so that the network functions can be treated simply as “bumps in the wire.” In this paper, we present RTNF, a scalable framework for the online resource allocation and scheduling of NFV applications that provides predictable end-to-end latency guarantees. RTNF is based on a novel time-aware abstraction algorithm that transforms complex NFV graphs and their performance requirements into sets of scheduling interfaces; these can then be used by the resource manager and the scheduler on each node to efficiently allocate resources and to schedule NFV requests at runtime. We provide a complexity analysis of our algorithm and the design of a concrete implementation of our framework. Our evaluation, based on simulations and an experimental prototype, shows that RTNF can schedule DAG-based NFV applications with solid timing guarantees while incurring only a small overhead, and that it substantially outperforms existing techniques.},
  eventtitle = {2019 {{IEEE Real-Time}} and {{Embedded Technology}} and {{Applications Symposium}} ({{RTAS}})},
  isbn = {978-1-72810-678-6},
  langid = {english},
  file = {/home/sigma_ibo/Zotero/storage/Z5PB3E2L/Abedi et al. - 2019 - RTNF Predictable Latency for Network Function Vir.pdf}
}

@inproceedings{casiniLatencyAnalysisVirtualization2021,
  title = {Latency {{Analysis}} of {{I}}/{{O Virtualization Techniques}} in {{Hypervisor-Based Real-Time Systems}}},
  booktitle = {2021 {{IEEE}} 27th {{Real-Time}} and {{Embedded Technology}} and {{Applications Symposium}} ({{RTAS}})},
  author = {Casini, Daniel and Biondi, Alessandro and Cicero, Giorgiomaria and Buttazzo, Giorgio},
  date = {2021-05},
  pages = {306--319},
  publisher = {IEEE},
  location = {Nashville, TN, USA},
  doi = {10.1109/RTAS52030.2021.00032},
  url = {https://ieeexplore.ieee.org/document/9470472/},
  urldate = {2024-03-25},
  abstract = {Nowadays, hypervisors are the standard solution to integrate different domains into a shared hardware platform, while providing safety, security, and predictability. To this end, a hypervisor virtualizes the physical platform and orchestrates the access to each component. When the system needs to comply with certification requirements for safety-critical systems, virtualization latencies need to be analytically bounded for providing off-line guarantees. This paper presents a detailed modeling of three I/O virtualization techniques, providing analytical bounds for each of them under different metrics. Experimental results compare the bounds for a case study and quantify the contribution due to different sources of delay.},
  eventtitle = {2021 {{IEEE}} 27th {{Real-Time}} and {{Embedded Technology}} and {{Applications Symposium}} ({{RTAS}})},
  isbn = {978-1-66540-386-3},
  langid = {english},
  file = {/home/sigma_ibo/Zotero/storage/8DBKV8Y6/Casini et al. - 2021 - Latency Analysis of IO Virtualization Techniques .pdf}
}

@article{ChenResearchRealTimeOperating2019,
  title = {Research on Real-Time Operating System Virtualization Technology for Industrial Internet},
  author = {陈, 文兵},
  date = {2019},
  journaltitle = {Software Engineering and Applications},
  shortjournal = {SEA},
  volume = {08},
  number = {05},
  pages = {238--244},
  issn = {2325-2286, 2325-2278},
  doi = {10.12677/SEA.2019.85029},
  url = {https://www.HansPub.org/journal/doi.aspx?DOI=10.12677/SEA.2019.85029},
  urldate = {2024-03-25},
  abstract = {Industrial Internet uses cloud computing technology to provide enterprises with high-reliability and low-cost information services, which is an indispensable part of the industrial information revolution. However, the existing operating systems cannot support the smooth migration of the core logic of industrial control to the Internet for processing. The core reason is that the existing industrial Internet does not provide complete real-time support for sensing, transmission, processing and control processes, so it cannot guarantee the real-time performance of all links and systems as a whole. Real-time operation system is one of the important links to guarantee the whole real-time performance of the system. This paper improves the real-time performance of Linux system, including process scheduling, interrupt processing, high-precision clock, real-time lock and so on. It reduces the average delay of Linux system under pressure test to less than 20 μs. It can support virtualization environment, so that industrial control applications can be guaranteed real-time in virtualization environment.},
  langid = {chinese},
  file = {/home/sigma_ibo/Zotero/storage/PHQ7MKNK/陈 - 2019 - Research on Real-Time Operating System Virtualizat.pdf}
}

@article{cinqueVirtualizingMixedCriticalitySystems2022,
  title = {Virtualizing {{Mixed-Criticality Systems}}: {{A Survey}} on {{Industrial Trends}} and {{Issues}}},
  shorttitle = {Virtualizing {{Mixed-Criticality Systems}}},
  author = {Cinque, Marcello and Cotroneo, Domenico and De Simone, Luigi and Rosiello, Stefano},
  date = {2022-04},
  journaltitle = {Future Generation Computer Systems},
  shortjournal = {Future Generation Computer Systems},
  volume = {129},
  eprint = {2112.06875},
  eprinttype = {arxiv},
  eprintclass = {cs},
  pages = {315--330},
  issn = {0167739X},
  doi = {10.1016/j.future.2021.12.002},
  url = {http://arxiv.org/abs/2112.06875},
  urldate = {2024-03-25},
  abstract = {Virtualization is gaining attraction in the industry as it promises a flexible way to integrate, manage, and re-use heterogeneous software components with mixed-criticality levels, on a shared hardware platform, while obtaining isolation guarantees. This work surveys the state-of-the-practice of real-time virtualization technologies by discussing common issues in the industry. In particular, we analyze how different virtualization approaches and solutions can impact isolation guarantees and testing/certification activities, and how they deal with dependability challenges. The aim is to highlight current industry trends and support industrial practitioners to choose the most suitable solution according to their application domains.},
  langid = {english},
  keywords = {Computer Science - Operating Systems,Computer Science - Software Engineering},
  file = {/home/sigma_ibo/Zotero/storage/59VQ9ZYN/Cinque et al. - 2022 - Virtualizing Mixed-Criticality Systems A Survey o.pdf}
}

@article{garcia-vallsChallengesRealtimeVirtualization2014,
  title = {Challenges in Real-Time Virtualization and Predictable Cloud Computing},
  author = {García-Valls, Marisol and Cucinotta, Tommaso and Lu, Chenyang},
  date = {2014-10},
  journaltitle = {Journal of Systems Architecture},
  shortjournal = {Journal of Systems Architecture},
  volume = {60},
  number = {9},
  pages = {726--740},
  issn = {13837621},
  doi = {10.1016/j.sysarc.2014.07.004},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S1383762114001015},
  urldate = {2024-03-25},
  abstract = {Cloud computing and virtualization technology have revolutionized general-purpose computing applications in the past decade. The cloud paradigm offers advantages through reduction of operation costs, server consolidation, flexible system configuration and elastic resource provisioning. However, despite the success of cloud computing for general-purpose computing, existing cloud computing and virtualization technology face tremendous challenges in supporting emerging soft real-time applications such as online video streaming, cloud-based gaming, and telecommunication management. These applications demand real-time performance in open, shared and virtualized computing environments. This paper identifies the technical challenges in supporting real-time applications in the cloud, surveys recent advancement in real-time virtualization and cloud computing technology, and offers research directions to enable cloud-based real-time applications in the future.},
  langid = {english},
  file = {/home/sigma_ibo/Zotero/storage/IEHBZD67/García-Valls et al. - 2014 - Challenges in real-time virtualization and predict.pdf}
}

@article{guStateoftheArtSurveyRealTime2012,
  title = {A {{State-of-the-Art Survey}} on {{Real-Time Issues}} in {{Embedded Systems Virtualization}}},
  author = {Gu, Zonghua and Zhao, Qingling},
  date = {2012},
  journaltitle = {Journal of Software Engineering and Applications},
  shortjournal = {JSEA},
  volume = {05},
  number = {04},
  pages = {277--290},
  issn = {1945-3116, 1945-3124},
  doi = {10.4236/jsea.2012.54033},
  url = {http://www.scirp.org/journal/doi.aspx?DOI=10.4236/jsea.2012.54033},
  urldate = {2024-03-25},
  abstract = {Virtualization has gained great acceptance in the server and cloud computing arena. In recent years, it has also been widely applied to real-time embedded systems with stringent timing constraints. We present a comprehensive survey on real-time issues in virtualization for embedded systems, covering popular virtualization systems including KVM, Xen, L4 and others.},
  langid = {english},
  file = {/home/sigma_ibo/Zotero/storage/582LDH83/Gu and Zhao - 2012 - A State-of-the-Art Survey on Real-Time Issues in E.pdf}
}

@inproceedings{javierperezHowRealTime2022,
  title = {How {{Real}} ({{Time}}) {{Are Virtual PLCs}}?},
  booktitle = {2022 {{IEEE}} 27th {{International Conference}} on {{Emerging Technologies}} and {{Factory Automation}} ({{ETFA}})},
  author = {Javier Perez, Diogenes and Waltl, Josef and Prenzel, Laurin and Steinhorst, Sebastian},
  date = {2022-09-06},
  pages = {1--8},
  publisher = {IEEE},
  location = {Stuttgart, Germany},
  doi = {10.1109/ETFA52439.2022.9921545},
  url = {https://ieeexplore.ieee.org/document/9921545/},
  urldate = {2024-03-25},
  abstract = {Production systems continuously need to become more cost-efficient and flexible. Hardware-based programmable logic controllers, while widely used in the industry, do not offer the level of flexibility and scalability required for future applications. Each hardware-based PLC entails costs for maintenance and they cannot keep up with resource-intensive loads, such as artificial intelligence. The virtualization of PLCs promises to solve these issues. A Virtual PLC at the local edge level between cloud and industrial assets provides the flexibility and resource capacity needed for modern control applications. In this paper, the concept of virtual PLCs in a COTS server is outlined as a SoftPLC that is running within a virtual machine managed by a hypervisor. In addition, the virtual PLC is implemented and evaluated to determine whether virtual PLCs can satisfy the requirements for specific domains of industrial automation. We compare multiple virtual PLC configurations to a SoftPLC without a hypervisor. Our results indicate that the virtual PLC implementation is on par in terms of switching and response time for applications requiring response times below 10 ms and deterministic behavior is achievable. While further work is necessary, virtual PLCs may offer tremendous advantages for future industrial systems.},
  eventtitle = {2022 {{IEEE}} 27th {{International Conference}} on {{Emerging Technologies}} and {{Factory Automation}} ({{ETFA}})},
  isbn = {978-1-66549-996-5},
  langid = {english},
  file = {/home/sigma_ibo/Zotero/storage/MCY4LBUZ/Javier Perez et al. - 2022 - How Real (Time) Are Virtual PLCs.pdf}
}

@online{KernelShark,
  title = {{{KernelShark}}},
  url = {https://kernelshark.org/},
  urldate = {2024-03-25},
  file = {/home/sigma_ibo/Zotero/storage/CW2UYGAF/kernelshark.org.html}
}

@article{kirovaImpactModernVirtualization2019,
  title = {Impact of {{Modern Virtualization Methods}} on {{Timing Precision}} and {{Performance}} of {{High-Speed Applications}}},
  author = {Kirova, Veronika and Karpov, Kirill and Siemens, Eduard and Zander, Irina and Vasylenko, Oksana and Kachan, Dmitry and Maksymov, Sergii},
  date = {2019-08-16},
  journaltitle = {Future Internet},
  shortjournal = {Future Internet},
  volume = {11},
  number = {8},
  pages = {179},
  issn = {1999-5903},
  doi = {10.3390/fi11080179},
  url = {https://www.mdpi.com/1999-5903/11/8/179},
  urldate = {2024-03-25},
  abstract = {The presented work is a result of extended research and analysis on timing methods precision, their efficiency in different virtual environments and the impact of timing precision on the performance of high-speed networks applications. We investigated how timer hardware is shared among heavily CPU- and I/O-bound tasks on a virtualized OS as well as on bare OS. By replacing the invoked timing methods within a well-known application for estimation of available path bandwidth, we provide the analysis of their impact on estimation accuracy. We show that timer overhead and precision are crucial for high-performance network applications, and low-precision timing methods usage, e.g., the delays and overheads issued by virtualization result in the degradation of the virtual environment. Furthermore, in this paper, we provide confirmation that, by using the methods we intentionally developed for both precise timing operations and AvB estimation, it is possible to overcome the inefficiency of standard time-related operations and overhead that comes with the virtualization. The impacts of negative virtualization factors were investigated in five different environments to define the most optimal virtual environment for high-speed network applications.},
  langid = {english},
  file = {/home/sigma_ibo/Zotero/storage/JAUGT6Z8/Kirova et al. - 2019 - Impact of Modern Virtualization Methods on Timing .pdf}
}

@article{linPerformanceEvaluationXenomai,
  title = {Performance {{Evaluation}} of {{Xenomai}} 3},
  author = {Lin, Chan-Hsiang and Wu, Che-Kang},
  abstract = {Xenomai 3 is the new architecture of the Linux real-time framework that runs seamlessly side-by-side Linux as a dual-kernel system like Xenomai 2, or natively over mainline Linux kernels. The mainline Linux kernels in the latter condition can be supplemented by the PREEMPT RT efforts to meet stricter response time requirements than standard kernel preemption would bring. In this presentation, we will evaluate the performances of Xenomai 3 running with dual-kernel configuration and analyze the various benchmarks for ARM Cortex-A series. Xenomai 3 introduces some optimizations over RTOS API emulation, thread-to-thread communications, and significantly lower overhead with dual-kernel configurations. The comprehensive performance comparisons illustrate the major evolution of Xenomai 3 along with the revised Real-Time Driver Model (RTDM) which provides a unified interface over both PREEMPT RT and dual-kernel.},
  langid = {english},
  file = {/home/sigma_ibo/Zotero/storage/UR2A5ZUD/Lin and Wu - Performance Evaluation of Xenomai 3.pdf}
}

@book{lutsykPipelinedMulticoreMachine2020,
  title = {A Pipelined Multi-Core Machine with Operating System Support: Hardware Implementation and Correctness Proof},
  shorttitle = {A Pipelined Multi-Core Machine with Operating System Support},
  author = {Lutsyk, Petro and Oberhauser, Jonas and Paul, Wolfgang J.},
  date = {2020},
  series = {Lecture Notes in Computer Science {{Theoretical Computer Science}} and {{General Issues}}},
  number = {9999},
  publisher = {Springer},
  location = {Cham},
  isbn = {978-3-030-43242-3},
  langid = {english},
  pagetotal = {628},
  file = {/home/sigma_ibo/Zotero/storage/X4W2SRNS/Lutsyk et al. - 2020 - A pipelined multi-core machine with operating syst.pdf}
}

@article{malallahComprehensiveStudyKernel2021,
  title = {A {{Comprehensive Study}} of {{Kernel}} ({{Issues}} and {{Concepts}}) in {{Different Operating Systems}}},
  author = {Malallah, HayfaaSubhi and Zeebaree, Subhi R. M. and Zebari, Rizgar R. and Sadeeq, Mohammed A. M. and Ageed, Zainab Salih and Ibrahim, Ibrahim Mahmood and Yasin, Hajar Maseeh and Merceedi, Karwan Jameel},
  date = {2021-05-08},
  journaltitle = {Asian Journal of Research in Computer Science},
  shortjournal = {AJRCoS},
  pages = {16--31},
  issn = {2581-8260},
  doi = {10.9734/ajrcos/2021/v8i330201},
  url = {https://journalajrcos.com/index.php/AJRCOS/article/view/156},
  urldate = {2024-03-25},
  abstract = {Various operating systems (OS) with numerous functions and features have appeared over time. As a result, they know how each OS has been implemented guides users' decisions on configuring the OS on their machines. Consequently, a comparative study of different operating systems is needed to provide specifics on the same and variance in novel types of OS to address their flaws. This paper's center of attention is the visual operating system based on the OS features and their limitations and strengths by contrasting iOS, Android, Mac, Windows, and Linux operating systems. Linux, Android, and Windows 10 are more stable, more compatible, and more reliable operating systems. Linux, Android, and Windows are popular enough to become user-friendly, unlike other OSs, and make more application programs. The firewalls in Mac OS X and Windows 10 are built-in. The most popular platforms are Android and Windows, specifically the novelist versions. It is because they are low-cost, dependable, compatible, safe, and easy to use. Furthermore, modern developments in issues resulting from the advent of emerging technology and the growth of the cell phone introduced many features such as high-speed processors, massive memory, multitasking, high-resolution displays, functional telecommunication hardware, and so on.},
  langid = {english},
  file = {/home/sigma_ibo/Zotero/storage/INXY9DY4/Malallah et al. - 2021 - A Comprehensive Study of Kernel (Issues and Concep.pdf}
}

@inproceedings{masrurVMBasedRealTimeServices2010,
  title = {{{VM-Based Real-Time Services}} for {{Automotive Control Applications}}},
  booktitle = {2010 {{IEEE}} 16th {{International Conference}} on {{Embedded}} and {{Real-Time Computing Systems}} and {{Applications}}},
  author = {Masrur, Alejandro and Drossler, Sebastian and Pfeuffer, Thomas and Chakraborty, Samarjit},
  date = {2010-08},
  pages = {218--223},
  publisher = {IEEE},
  location = {Macau, China},
  doi = {10.1109/RTCSA.2010.38},
  url = {http://ieeexplore.ieee.org/document/5591645/},
  urldate = {2024-03-25},
  abstract = {Techniques for hardware virtualization have been successfully used to provide hardware-independent services and increase isolation between applications in the desktop domain. However, these characteristics make hardware virtualization also interesting for other domains like those involving control tasks. Since these techniques were initially not conceived for this kind of environments where, in particular, timing constraints must be guaranteed, it is necessary to analyze their behavior and investigate the viability of possible solutions based on them. In this paper, we are concerned with using VMs (Virtual Machines) to provide real-time services in the context of automotive control applications. For this purpose, we make use of the Xen hypervisor to design a real-time control loop on the top of a virtualization layer. We first analyze a typical Xen configuration and identify problems that arise when it is used for real-time applications. We show that the worst-case performance of Xen’s standard SEDF scheduler (Simple Earliest Deadline First) can be improved by incorporating some minimal modifications. In addition, in order to reduce latency and jitter in a real-time control loop, we propose a new scheduler for the Xen hypervisor that uses the concept of a real-time VM. Real-time VMs are then scheduled before any other VM and under a fixed-priority policy. The proposed VM-based solution is shown to guarantee timing constraints typically encountered in automotive control applications. We further illustrate this through an extensive set of experiments.},
  eventtitle = {2010 {{IEEE}} 16th {{International Conference}} on {{Embedded}} and {{Real-Time Computing Systems}} and {{Applications}} ({{RTCSA}})},
  isbn = {978-1-4244-8480-5},
  langid = {english},
  file = {/home/sigma_ibo/Zotero/storage/4RMXKZ3L/Masrur et al. - 2010 - VM-Based Real-Time Services for Automotive Control.pdf}
}

@online{pixelartSIGMATEKKompletteAutomatisierungssysteme,
  title = {SIGMATEK - Komplette Automatisierungssysteme},
  author = {{pixelart}},
  url = {https://www.sigmatek-automation.com/de/},
  urldate = {2024-03-27},
  abstract = {Sigmatek ist Ihr Partner für Industrie Automatisierung und Steuerungen wie SPS Automation oder HMI zur Visualisierung und Steuerung, sowie I/O Systeme.},
  langid = {ngerman},
  file = {/home/sigma_ibo/Zotero/storage/KVEG83TI/de.html}
}

@online{QEMU,
  title = {{{QEMU}}},
  url = {https://www.qemu.org/},
  urldate = {2024-03-27},
  file = {/home/sigma_ibo/Zotero/storage/HJPPIRE5/www.qemu.org.html}
}

@article{queirozTestingLimitsGeneralpurpose2023,
  title = {Testing the Limits of General-Purpose Hypervisors for Real-Time Control Systems},
  author = {Queiroz, Rui and Cruz, Tiago and Simões, Paulo},
  date = {2023-06},
  journaltitle = {Microprocessors and Microsystems},
  shortjournal = {Microprocessors and Microsystems},
  volume = {99},
  pages = {104848},
  issn = {01419331},
  doi = {10.1016/j.micpro.2023.104848},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0141933123000947},
  urldate = {2024-03-25},
  abstract = {With the emergence of the Industry 4.0 paradigm, there is a need to introduce a significant degree of flexibility, security and resilience in automation infrastructures, while keeping up with real-time requirements that are characteristic of such domains. Interestingly, many of these driving principles are the same that encouraged the adoption of virtualization technologies on the IT domain, somehow suggesting that the same benefits could be realisable for Industrial and Automation Control Systems, allowing to virtualise servers and cyber–physical system control devices. However, the suitability of using off-the-shelf hypervisor technologies to address the specific real-time requirements of automation infrastructures remains unclear, due to their focus on maximising systems throughput and capacity, often at the expense of determinism and increased latency.},
  langid = {english},
  file = {/home/sigma_ibo/Zotero/storage/TCYSDY3I/Queiroz et al. - 2023 - Testing the limits of general-purpose hypervisors .pdf}
}

@article{reghenzaniRealTimeLinuxKernel2020,
  title = {The {{Real-Time Linux Kernel}}: {{A Survey}} on {{PREEMPT}}\_{{RT}}},
  shorttitle = {The {{Real-Time Linux Kernel}}},
  author = {Reghenzani, Federico and Massari, Giuseppe and Fornaciari, William},
  date = {2020-01-31},
  journaltitle = {ACM Computing Surveys},
  shortjournal = {ACM Comput. Surv.},
  volume = {52},
  number = {1},
  pages = {1--36},
  issn = {0360-0300, 1557-7341},
  doi = {10.1145/3297714},
  url = {https://dl.acm.org/doi/10.1145/3297714},
  urldate = {2024-03-25},
  abstract = {The increasing functional and nonfunctional requirements of real-time applications, the advent of mixed criticality computing, and the necessity of reducing costs are leading to an increase in the interest for employing COTS hardware in real-time domains. In this scenario, the Linux kernel is emerging as a valuable solution on the software side, thanks to the rich support for hardware devices and peripherals, along with a well-established programming environment. However, Linux has been developed as a general-purpose operating system, followed by several approaches to introduce actual real-time capabilities in the kernel. Among these, the PREEMPT\_RT patch, developed by the kernel maintainers, has the goal to increase the predictability and reduce the latencies of the kernel directly modifying the existent kernel code. This article aims at providing a survey of the state-of-the-art approaches for building real-time Linux-based systems, with a focus on PREEMPT\_RT, its evolution, and the challenges that should be addressed in order to move PREEMPT\_RT one step ahead. Finally, we present some applications and use cases that have already benefited from the introduction of this patch.},
  langid = {english},
  file = {/home/sigma_ibo/Zotero/storage/JLZ6ULAA/Reghenzani et al. - 2020 - The Real-Time Linux Kernel A Survey on PREEMPT_RT.pdf;/home/sigma_ibo/Zotero/storage/MWS3H9XP/Reghenzani et al. - 2020 - The Real-Time Linux Kernel A Survey on PREEMPT_RT.pdf}
}

@online{Tracecmd,
  title = {Trace-Cmd},
  url = {https://trace-cmd.org/},
  urldate = {2024-03-25},
  file = {/home/sigma_ibo/Zotero/storage/PBM3XJ2X/trace-cmd.org.html}
}

@online{WelcomeYoctoProject,
  title = {Welcome to the {{Yocto Project Documentation}} — {{The Yocto Project}} ® 4.3.999 Documentation},
  url = {https://docs.yoctoproject.org/},
  urldate = {2024-03-27},
  file = {/home/sigma_ibo/Zotero/storage/43U9EAPA/docs.yoctoproject.org.html}
}

@online{XenomaiXenomai,
  title = {Xenomai :: {{Xenomai}}},
  url = {https://xenomai.org/},
  urldate = {2024-03-21},
  file = {/home/sigma_ibo/Zotero/storage/HXDK75NC/xenomai.org.html}
}

@article{zotero-5,
  entrysubtype = {newspaper}
}
