{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#thema-masterarbeit","title":"Thema Masterarbeit","text":"<p>Virtualisierung eines Echtzeit-Betriebssystems zur Steuerung eines Roboters mit Schwerpunkt auf die  Einhaltung der Echtzeit </p>"},{"location":"#kurze-umschreibung","title":"Kurze Umschreibung","text":"<p>Erstellung einer Echtzeit-Robotersteuerungsplattform unter Verwendung von Salamander OS, Xenomai, QEMU  und PCV-521 in der Yocto-Umgebung. Die Plattform basiert auf Salamander OS und nutzt Xenomai f\u00fcr Echtzeit- Funktionen. Dazu muss im ersten Schritt die Virtualisierungsplattform evaluiert werden. (QEMU, Hyper-V, Virtual  Box, etc.) Als weiterer Schritt folgt die Anbindung eines Roboters \u00fcber eine VARAN-Bus Schnittstelle. Das  gesamte System wird in der Yocto-Umgebung erstellt und konfiguriert.  Das Hauptziel der Arbeit ist es, herauszufinden, wie die Integration von Echtzeit-Funktionen und effizienten  Kommunikationssystemen in eine Robotersteuerungsplattform die Reaktionszeit und Zuverl\u00e4ssigkeit von  Roboteranwendungen verbessern kann. </p>"},{"location":"#masterarbeit","title":"Masterarbeit","text":"<p>Hier ist die Masterarbeit.</p> <p>Info</p> <p>Diese Masterarbeit wird t\u00e4glich aktualisiert. Zu einem sp\u00e4teren Zeitpunkt kann mehr Inhalt vorhanden sein.</p> Fortschritt  der Masterarbeit: Anfangsphase"},{"location":"#overview","title":"Overview","text":"File Description BS Virtualisierungsprojekt.xlsx Masterthesis progress"},{"location":"#pdfs","title":"PDFs","text":"File Description MA_Pamuk.pdf Masterthesis description MA_guide.pdf Masterthesis writing guide MA_precision.pdf Master thesis Robotics degree precision MA_deadlines.pdf Master thesis deadlines PCV 522.pdf PCV 522 module handbook LasalClass2_eng.pdf Lasal Class 2 documentation"},{"location":"#markdown-files","title":"Markdown files","text":""},{"location":"#general","title":"General","text":"File Description protocol.md Protocol of the process timeline.md Timeline view of the process components.md Components of the process documentations.md Documentations checklist.md Checklist of the process"},{"location":"#workflow","title":"Workflow","text":"File Description useful.md Useful stuff in the process useful_notneeded.md Useful stuff that is not needed in the process useful_links.md Useful stuff that is not needed in the process most_popular_paths.md Most used paths in the process"},{"location":"#sigmatek","title":"Sigmatek","text":"File Description bash_commands.md How to set up for yocto build build_LRT.md How to build LRT - Salamander 3 Terminal build_with_yocto.md How to bitbake a yocto salamander-image"},{"location":"#yocto","title":"Yocto","text":"File Description fix.md Fix Yocto build 0001.patch after_bitbake.md Commands after bitbake"},{"location":"#xenomai","title":"Xenomai","text":"File Description xenomai-system-tools.md Xenomai System Tools latency.md Xenomai: latency tool clocktest.md Xenomai: clocktest tool switchtest.md Xenomai: switchtest tool"},{"location":"#trace-cmd-and-kernelshark","title":"trace-cmd and kernelshark","text":"File Description info.md Info about trace-cmd kernelshark.md Kernelshark commands for host and guest"},{"location":"#scripts","title":"Scripts","text":""},{"location":"#yocto_1","title":"Yocto","text":"File Description after_bitbake_1.sh Script after bitbake 1 after_bitbake_2.sh Script after bitbake 2"},{"location":"#qemu-config","title":"QEMU config","text":"File Description nmbridge.md Steps to configure nmbridge qemu_def_1default.sh default qemu_def.sh qemu_def_2nmbridge.sh qemu_def.sh with nm bridge qemu_def_3vsock.sh qemu_def.sh with vsock qemu_def_4schedstats.sh qemu_def.sh with schedstats qemu_def_5taskset.sh qemu_def.sh with taskset start_qemu.sh Script for starting QEMU"},{"location":"#resources","title":"Resources","text":"File Description startup_console.sh Startup script for console startup_konsole.sh Startup script for konsole"},{"location":"#trace-cmd-and-kernelshark_1","title":"trace-cmd and kernelshark","text":"File Description start_kernelshark.sh Script for starting kernelshark with host and guest trace.dat start_kernelshark_convert.sh Script for starting kernelshark with converted v6 host and guest trace.dat"},{"location":"#python","title":"Python","text":"File Description kvm_exit_number.py Count kvm_exit events latency_no_taskset.py Plot latency of Slamander 4 with no taskset latency_taskset.py Plot latency of Slamander 4 with taskset print_numbers.py Print numbers of specified range search_for_x.py Search for lines that contain x compare_2_files.py Compare two config files line by line"},{"location":"#git","title":"GIT","text":""},{"location":"#sigmatek_1","title":"Sigmatek","text":"File Description LRT.git LRT.git SalamanderTools.git SalamanderTools.git u-boot.git u-boot.git ipipe.git ipipe.git xenomai xenomai salamander.git salamander.git"},{"location":"#trace-cmd-and-kernelshark_2","title":"trace-cmd and kernelshark","text":"File Description kernel-shark kernel-shark git libtraceevent libtraceevent git libtracefs libtracefs git trace-cmd trace-cmd git"},{"location":"test/","title":"Test","text":""},{"location":"test/#checkliste","title":"Checkliste","text":"<ul> <li> Lorem ipsum dolor sit amet, consectetur adipiscing elit</li> <li> Vestibulum convallis sit amet nisi a tincidunt<ul> <li> In hac habitasse platea dictumst</li> <li> In scelerisque nibh non dolor mollis congue sed et metus</li> <li> Praesent sed risus massa</li> </ul> </li> <li> Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque</li> </ul>"},{"location":"test/#admonition","title":"Admonition","text":"<p>Test</p> <p>This is a note admonition.</p>"},{"location":"test/#definition-lists","title":"Definition Lists","text":"Term 1 Definition 1 Term 2 Definition 2a Definition 2b"},{"location":"test/#footnotes","title":"Footnotes","text":"Here is a footnote reference. <p>Here is the footnote.</p>"},{"location":"test/#tables","title":"Tables","text":"Column 1 Column 2 Cell 1 Cell 2"},{"location":"test/#abbreviations","title":"Abbreviations","text":"<p>The HTML specification is maintained by the W3C.</p>"},{"location":"test/#markdown-in-html","title":"Markdown in HTML","text":"<pre><code>This is *true* markdown text.\n</code></pre>"},{"location":"test/#pymdownxarithmatex","title":"pymdownx.arithmatex","text":"\\[ E(\\mathbf{v}, \\mathbf{h}) = -\\sum_{i,j}w_{ij}v_i h_j - \\sum_i b_i v_i - \\sum_j c_j h_j \\]"},{"location":"test/#pymdownxbetterem","title":"pymdownx.betterem","text":"<p>bold text italic text</p>"},{"location":"test/#pymdownxcaret","title":"pymdownx.caret","text":"<p>highlighted text</p>"},{"location":"test/#pymdownxmark","title":"pymdownx.mark","text":"<p>marked text</p>"},{"location":"test/#pymdownxtilde","title":"pymdownx.tilde","text":"<p>H<sub>2</sub>O</p>"},{"location":"test/#pymdownxcritic","title":"pymdownx.critic","text":"<p>This is old text a sentence.</p>"},{"location":"test/#pymdownxdetails","title":"pymdownx.details","text":"Title <p>This is the content.</p>"},{"location":"test/#pymdownxemoji","title":"pymdownx.emoji","text":""},{"location":"test/#pymdownxhighlight","title":"pymdownx.highlight","text":"<pre><code>print(\"Hello, world!\")\n</code></pre>"},{"location":"general/checklist/","title":"Checklist","text":""},{"location":"general/checklist/#done","title":"Done","text":"<ul> <li> Install Ubuntu 22.04.3 LTS</li> <li> Local Yocto Build: Salamander4 </li> <li> Linux Kernel Configuration with Xenomai</li> <li> Boot Salamander4 in QEMU under native Ubuntu </li> <li> Configured bridge for QEMU</li> <li> Connected LasalClass2 with [Salamander 4]</li> <li> Enabled access to the vsocket for guest</li> <li> trace-cmd and kernelshark worked for Ubuntu VM</li> <li> trace-cmd and kernelshark with Salamander4 as guest </li> <li> Used the Xenomai test suite: latency -T 60` </li> <li> Isolated host CPU for guest</li> <li> Latency got better after isolation</li> </ul>"},{"location":"general/checklist/#missing","title":"Missing","text":"<ul> <li> Salamander4 \u00fcber QEMU unter native Windows booten</li> <li> Salamander4 \u00fcber QEMU unter WSL in native Windows booten</li> <li> Compare Ubuntu, Windows and WSL</li> <li> Preempt_RT vs Xenomai</li> </ul>"},{"location":"general/checklist/#richard-meeting-11032024","title":"Richard Meeting 11.03.2024","text":"<p>Boot QEMU with realtime priority <code>chrt</code> but little priority 1-99  </p> <p>Test latency  </p> <ul> <li> Out-of-of-the-box<ul> <li> Inspect Kernelshark</li> </ul> </li> <li> CPU isolated on user space<ul> <li> Inspect Kernelshark</li> </ul> </li> <li> Realtime priority experiment<ul> <li> Inspect Kernelshark</li> </ul> </li> <li> CPU Shall not process interrupts -&gt; select which cpu?<ul> <li> Inspect Kernelshark</li> </ul> </li> <li> Turn off Hyprerthreading so that CPU cores are not divided<ul> <li> Inspect Kernelshark</li> </ul> </li> </ul>"},{"location":"general/components/","title":"Components","text":""},{"location":"general/components/#angabe","title":"Angabe","text":"<p>Virtualisierung eines Echtzeit-Betriebssystems zur Steuerung eines Roboters mit Schwerpunkt auf die Einhaltung der Echtzeit</p>"},{"location":"general/components/#setup","title":"Setup","text":"<p>Bash commands</p>"},{"location":"general/components/#yocto-umgebung","title":"Yocto-Umgebung","text":"<p>Build with Yocto</p>"},{"location":"general/components/#salamander-os","title":"Salamander OS","text":"<p>Skript Michi Build LRT</p>"},{"location":"general/components/#xenomai","title":"Xenomai","text":"<p>Preempt_rt.png Xenomai.png</p>"},{"location":"general/components/#lasal-class","title":"Lasal CLass","text":"<p>Lasal Class 2 english Lasal Class 2 deutsch</p>"},{"location":"general/components/#qemu","title":"QEMU","text":"<p>QEMU documentation</p>"},{"location":"general/components/#pcv-521","title":"PCV-521","text":"<p>PCI-Einsteckmodul, das als Schnittstelle zwischen einem PC und dem VARAN-Bus dient PCV 522.pdf </p> <p>Evaluierung Virtualisierungsplattform (QEMU, Hyper-V, Virtual Box, etc.) - QEMU</p> <ul> <li> <p>HYPER-V</p> </li> <li> <p>Virtual Box </p> </li> <li> <p>WSL</p> </li> </ul>"},{"location":"general/documentations/","title":"Documentations","text":"<ul> <li>Yocto Project</li> <li>QEMU</li> <li>Xenomai</li> <li>Trace-cmd</li> <li>KernelShark</li> <li>Kernelconfig</li> <li>Sigmatek <ul> <li>Build with Yocto</li> <li>Build LRT</li> </ul> </li> </ul>"},{"location":"general/protocol/","title":"Protocol","text":""},{"location":"general/protocol/#dual-boot","title":"Dual Boot","text":"<p>1) Flash SSD by installing etcher 2) Ubuntu and Windows on same machine</p>"},{"location":"general/protocol/#install-salamander4-os","title":"Install Salamander4 OS","text":"<p>1) Install Ubuntu 22.04.3 LTS 2) Do everything in build_with_yocto.md</p>"},{"location":"general/protocol/#ssh-to-device","title":"SSH to device","text":"<p>Connect to device with <code>ssh -oHostKeyAlgorithms=+ssh-rsa root@10.10.1.229</code> or <code>ssh -p 22 root@192.168.1.x</code> (changes often)</p>"},{"location":"general/protocol/#lasalclass2-to-device","title":"LasalClass2 to device","text":"<p>Connect LasalClass2 with Salamander 4, IP of Salamander4 device</p>"},{"location":"general/protocol/#configure-bridge-for-qemu","title":"Configure bridge for QEMU","text":"<p>This setup allows the virtual machines to communicate with the outside network through the Ethernet connection provided by either the laptop or the docking station.</p> name device enp0s31f6 Laptop's Ethernet port enx4cd717733f80 Docking station's Ethernet port <ul> <li>Disable ipv4 and ipv6</li> <li>Enter nmtui</li> <li>Edit Connection and \\&lt;Add&gt;. Select Bridge.</li> <li>Edit and \\&lt;Add&gt; Ethernet.</li> <li>Copy name enx4cd717733f80 (4C:D7:17:73:3F:80) of Wired connection 2</li> <li>Edit Connection of Ethernet connection 1 so that it automatically connects.</li> <li>Activate Connection.</li> <li>Result should look like this and this.</li> <li>More info in nmbridge.md. </li> </ul>"},{"location":"general/protocol/#reduce-latency","title":"Reduce latency","text":"<p>We test the system using the Xenomai test suite - <code>latency -T 60</code> - <code>clocktest -D -T 60</code> </p>"},{"location":"general/protocol/#out-of-the-box","title":"Out-of-the-box","text":"<p>Before taskset with <code>qemu_def_4schedstats.sh</code> <pre><code>sigma_ibo@pamhal:$ ps -eo pid,psr,comm | grep qemu\n   7295  10 start_qemu.sh\n   7298  17 qemu-system-x86\n</code></pre> <code>latency -s -T 60</code> <pre><code>root@sigmatek-core2:~# latency -s -T 60\n== Sampling period: 100 us\n== Test mode: periodic user-mode task\n== All results in microseconds\nwarming up...\nRTT|  00:00:01  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      1.393|      2.908|     21.765|       0|     0|      1.393|     21.765\nRTD|      1.740|      2.933|     12.989|       0|     0|      1.393|     21.765\nRTD|      1.603|      2.954|     22.063|       0|     0|      1.393|     22.063\nRTD|      1.361|      2.988|     22.156|       0|     0|      1.361|     22.156\nRTD|      1.839|      3.059|    119.253|       2|     0|      1.361|    119.253\nRTD|      1.665|      2.955|     47.442|       2|     0|      1.361|    119.253\nRTD|      1.603|      2.869|     12.336|       2|     0|      1.361|    119.253\nRTD|      1.649|      2.953|     17.917|       2|     0|      1.361|    119.253\nRTD|      1.359|      2.990|     15.286|       2|     0|      1.359|    119.253\nRTD|      1.584|      2.959|     15.387|       2|     0|      1.359|    119.253\nRTD|      1.910|      2.997|     84.273|       2|     0|      1.359|    119.253\nRTD|      1.799|      4.133|    112.034|       3|     0|      1.359|    119.253\nRTD|      2.388|      4.397|     27.953|       3|     0|      1.359|    119.253\nRTD|      1.263|      3.331|    374.075|      12|     0|      1.263|    374.075\nRTD|      1.842|      2.900|    154.898|      14|     0|      1.263|    374.075\nRTD|      2.170|      2.876|     14.770|      14|     0|      1.263|    374.075\nRTD|      1.742|      2.952|     23.002|      14|     0|      1.263|    374.075\nRTD|      2.149|      2.903|    207.981|      17|     0|      1.263|    374.075\nRTD|      1.275|      2.884|    234.734|      21|     0|      1.263|    374.075\nRTD|      1.456|      3.018|    190.368|      25|     0|      1.263|    374.075\nRTD|      1.301|      2.855|    255.438|      27|     0|      1.263|    374.075\nRTT|  00:00:22  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      1.442|      2.847|     16.121|      27|     0|      1.263|    374.075\nRTD|      1.609|      2.886|     54.156|      27|     0|      1.263|    374.075\nRTD|      1.193|      2.838|     13.409|      27|     0|      1.193|    374.075\nRTD|      1.175|      2.835|      9.749|      27|     0|      1.175|    374.075\nRTD|      2.120|      2.833|      9.886|      27|     0|      1.175|    374.075\nRTD|      1.205|      2.830|      9.281|      27|     0|      1.175|    374.075\nRTD|      1.288|      2.836|     15.243|      27|     0|      1.175|    374.075\nRTD|      1.358|      2.865|     24.674|      27|     0|      1.175|    374.075\nRTD|      1.369|      2.852|     95.134|      27|     0|      1.175|    374.075\nRTD|      1.198|      2.853|    122.350|      28|     0|      1.175|    374.075\nRTD|      1.883|      2.861|    119.295|      29|     0|      1.175|    374.075\nRTD|      1.479|      2.840|     16.134|      29|     0|      1.175|    374.075\nRTD|      1.389|      2.853|     13.289|      29|     0|      1.175|    374.075\nRTD|      1.779|      2.887|     22.949|      29|     0|      1.175|    374.075\nRTD|      1.592|      2.847|     82.516|    with\nRTD|      2.293|      2.843|     40.522|      29|     0|      1.175|    374.075\nRTD|      1.207|      2.888|    138.783|      30|     0|      1.175|    374.075\nRTD|      1.405|      2.862|     21.464|      30|     0|      1.175|    374.075\nRTD|      1.218|      2.853|     13.491|      30|     0|      1.175|    374.075\nRTT|  00:00:43  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      1.269|      2.865|      9.891|      30|     0|      1.175|    374.075\nRTD|      1.343|      2.866|     52.299|      30|     0|      1.175|    374.075\nRTD|      1.303|      2.868|     27.312|      30|     0|      1.175|    374.075\nRTD|      1.544|      2.904|     30.962|      30|     0|      1.175|    374.075\nRTD|      1.310|      2.939|    193.024|      31|     0|      1.175|    374.075\nRTD|      1.416|      2.917|    206.245|      34|     0|      1.175|    374.075\nRTD|      1.384|      2.871|     10.043|      34|     0|      1.175|    374.075\nRTD|      1.462|      2.863|    150.257|      35|     0|      1.175|    374.075\nRTD|      1.570|      2.917|    152.735|      37|     0|&gt; lat worst reduced from 374.075 to 87.379\n      1.175|    374.075\nRTD|      1.626|      2.983|    149.424|      40|     0|      1.175|    374.075\nRTD|      1.247|      2.999|     24.876|      40|     0|      1.175|    374.075\nRTD|      1.637|      2.999|     13.527|      40|     0|      1.175|    374.075\nHSH|--param|--samples-|--average--|---stddev--\nHSS|    min|        59|      1.085|      0.281\nHSS|    avg|    599943|      2.200|      1.460\nHSS|    max|        59|     68.847|     77.257\n---|-----------|-----------|-----------|--------|------|-------------------------\nRTS|      1.175|      2.955|    374.075|      40|     0|    00:01:00/00:01:00\n</code></pre></p>"},{"location":"general/protocol/#isolate-cpus-on-host","title":"Isolate CPUs on host","text":"<p>To isolate CPUs on your host system (Ubuntu), you can add the <code>isolcpus</code> option to the kernel boot configuration. Here are the steps you can follow:</p> <ol> <li>Open the GRUB configuration file with a text editor. You can use the <code>nano</code> editor for this. Execute the following command in your terminal:     <pre><code>sudo nano /etc/default/grub\n</code></pre></li> <li>Search for the entry <code>GRUB_CMDLINE_LINUX</code> and add <code>isolcpus=0,1,2,3,4</code> (or the corresponding CPU numbers you want to isolate). It should then look like this:     <pre><code>GRUB_CMDLINE_LINUX=\"isolcpus=0,1,2,3,4\"\n</code></pre></li> <li> <p>Save the changes and close the editor. If you are using <code>nano</code>, you can do this by pressing <code>Ctrl+X</code>, then typing <code>Y</code> to save the changes, and finally pressing <code>Enter</code> to close the editor.</p> </li> <li> <p>Update GRUB with the following command:     <pre><code>sudo update-grub\n</code></pre></p> </li> <li>Reboot your system for the changes to take effect.</li> </ol> <p>Check with: <code>cat /sys/devices/system/cpu/isolated</code></p> <pre><code>sigma_ibo@pamhal:~$ cat /sys/devices/system/cpu/online \n0-19\nsigma_ibo@pamhal:~$ cat /sys/devices/system/cpu/isolated\n0-4\n</code></pre> <p>After taskset on CPU4 with <code>qemu_def_5taskset.sh</code> <pre><code>sigma_ibo@pamhal:$ ps -eo pid,psr,comm | grep qemu\n   8752   0 start_qemu.sh\n   8755   4 qemu-system-x86\n</code></pre> <pre><code>root@sigmatek-core2:~# latency -s -T 60\n== Sampling period: 100 us\n== Test mode: periodic user-mode task\n== All results in microseconds\nwarming up...\nRTT|  00:00:01  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      1.518|      2.994|     60.423|       0|     0|      1.518|     60.423\nRTD|      1.245|      2.787|     50.589|       0|     0|      1.245|     60.423\nRTD|      1.925|      2.845|     82.861|       0|     0|      1.245|     82.861\nRTD|      1.237|      2.963|     83.906|       0|     0|      1.237|     83.906\nRTD|      1.167|      2.777|     19.388|       0|     0|      1.167|     83.906\nRTD|      1.333|      2.779|     33.484|       0|     0|      1.167|     83.906\nRTD|      1.330|      2.921|     31.062|       0|     0|      1.167|     83.906\nRTD|      1.567|      2.777|     15.960|       0|     0|      1.167|     83.906\nRTD|      1.900|      2.902|     17.630|       0|     0|      1.167|     83.906\nRTD|      1.230|      3.012|     55.056|       0|     0|      1.167|     83.906\nRTD|      1.480|      2.822|     50.378|       0|     0|      1.167|     83.906\nRTD|      1.197|      2.770|     16.093|       0|     0|      1.167|     83.906\nRTD|      1.525|      2.879|     79.003|       0|     0|      1.167|     83.906\nRTD|      1.417|      2.788|     39.852|       0|     0|      1.167|     83.906\nRTD|      1.468|      3.857|     60.830|       0|     0|      1.167|     83.906\nRTD|      2.305|      4.212|     55.658|       0|     0|      1.167|     83.906\nRTD|      1.882|      4.158|     43.550|       0|     0|      1.167|     83.906\nRTD|      2.059|      4.144|     49.666|       0|     0|      1.167|     83.906\nRTD|      2.439|      4.157|     87.379|       0|     0|      1.167|     87.379\nRTD|      2.067|      4.178|     73.607|       0|     0|      1.167|     87.379\nRTD|      1.772|      3.334|     54.281|       0|     0|      1.167|     87.379\nRTT|  00:00:22  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      1.605|      2.794|     57.324|       0|     0|      1.167|     87.379\nRTD|      1.196|      2.763|      7.132|       0|     0|      1.167|     87.379\nRTD|      2.285|      3.849|     51.351|       0|     0|      1.167|     87.379\nRTD|      2.001|      4.221|     56.\n502|       0|     0|      1.167|     87.379\nRTD|      1.507|      2.787|     30.784|       0|     0|      1.167|     87.379\nRTD|      1.277|      2.782|     28.294|       0|     0|      1.167|     87.379\nRTD|      2.193|      2.797|     28.698|       0|     0|      1.167|     87.379\nRTD|      1.899|      2.772|     23.894|       0|     0|      1.167|     87.379\nRTD|      1.325|      2.831|     22.687|       0|     0|      1.167|     87.379\nRTD|      1.195|      2.928|     36.321|       0|     0|      1.167|     87.379\nRTD|      1.644|      2.812|     31.942|       0|     0|      1.167|     87.379\nRTD|      1.544|      2.780|     33.094|       0|     0|      1.167|     87.379\nRTD|      1.650|      2.889|     18.863|       0|     0|      1.167|     87.379\nRTD|      1.271|      2.792|     38.819|       0|     0|      1.167|     87.379\nRTD|      1.902|      2.981|     59.703|       0|     0|      1.167|     87.379\nRTD|      1.802|      3.091|     56.189|       0|     0|      1.167|     87.379\nRTD|      1.304|      2.818|     38.355|       0|     0|      1.167|     87.379\nRTD|      1.571|      2.827|     52.074|       0|     0|      1.167|     87.379\nRTT|  00:00:43  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      1.465|      2.949|     49.229|       0|     0|      1.167|     87.379\nRTD|      1.765|      2.800|     42.433|       0|     0|      1.167|     87.379\nRTD|      1.220|      2.967|     45.561|       0|     0|      1.167|     87.379\nRTD|      1.874|      3.020|     74.500|       0|     0|      1.167|     87.379\nRTD|      1.304|      2.881|     43.092|       0|     0|      1.167|     87.379\nRTD|      1.231|      2.836|     10.778|       0|     0|      1.167|     87.379\nRTD|      1.901|      2.944|     59.756|       0|     0|      1.167|     87.379\nRTD|      1.316|      2.820|     32.074|       0|     0|      1.167|     87.379\nRTD|      1.235|      2.896|     55.582|       0|     0|      1.167|     87.379\nRTD|      1.171|      2.824|     68.296|       0|     0|      1.167|     87.379\nRTD|      1.384|      2.832|     49.778|       0|     0|      1.167|     87.379\nRTD|      1.935|      2.770|     47.123|       0|     0|      1.167|     87.379\nRTD|      1.154|      2.821|     41.895|       0|     0|      1.154|     87.379\nRTD|      1.315|      2.803|     36.721|       0|     0|      1.154|     87.379\nRTD|      1.881|      2.983|     76.927|       0|     0|      1.154|     87.379\nRTD|      1.619|      2.999|     68.384|       0|     0|      1.154|     87.379\nRTD|      1.388|      2.797|     58.660|       0|     0|      1.154|     87.379\nHSH|--param|--samples-|--average--|---stddev--\nHSS|    min|        59|      1.119|      0.326\nHSS|    avg|    599984|      2.428|      1.112\nHSS|    max|        59|     46.746|     19.462\n---|-----------|-----------|-----------|--------|------|-------------------------\nRTS|      1.154|      3.078|     87.379|       0|     0|    00:01:00/00:01:00\n</code></pre></p> <p>lat worst reduced from 374.075 to 87.379</p>"},{"location":"general/protocol/#enable-preempt_rt-kernel","title":"Enable Preempt_RT Kernel","text":"<p>Do everything in kernel-patch.md to patch the kernel and enable Fully Preemptible Kernel (RT).</p> <p>Info</p> <p>Before the isolation of CPU 4, both kernel threads and user processes were running on this CPU. The user processes included various applications such as msedge, code, bash and qemu-system-x86.</p> <p>After isolating CPU 4, only kernel threads and the qemu-system-x86 process appear to be running on this CPU. There do not appear to be any other user processes running on this CPU.</p> <p>The isolcpus option prevents the kernel from scheduling normal (non-real-time) processes on the isolated CPUs. However, there are some exceptions:</p> <ul> <li>If a process is explicitly set to run on an isolated CPU (for example with taskset), it will run on that CPU even if it is isolated.</li> <li>Some kernel threads can run on isolated CPUs because they are not controlled by the normal scheduler. These include the threads you see in your output, such as kthreadd, migration/4, ksoftirqd/4, kworker/4:0-events and others.</li> <li>Interrupts can be handled on isolated CPUs unless they are explicitly redirected with the irqaffinity option.</li> </ul> <pre><code>sigma_ibo@pamhal:$ ps -e -o pid,psr,comm | awk '$2 == 4'\n      2   4 kthreadd\n     18   4 pr/legacy\n     35   4 cpuhp/4\n     36   4 idle_inject/4\n     37   4 irq_work/4\n     38   4 migration/4\n     39   4 rcuc/4\n     40   4 ktimers/4\n     41   4 ksoftirqd/4\n     42   4 kworker/4:0-events\n     43   4 kworker/4:0H-kblockd\n    198   4 kdevtmpfs\n    201   4 kauditd\n    207   4 kcompactd0\n    208   4 ksmd\n    237   4 irq/124-PCIe PME\n    252   4 hwrng\n    268   4 kworker/4:1-events\n    372   4 irq/138-rtsx_pci\n    416   4 irq/178-nvme1q5\n    483   4 jbd2/nvme1n1p2-8\n    866   4 irq/230-iwlwifi:queue_14\n    867   4 irq/230-s-iwlwifi:queue_14\n    913   4 kworker/R-ttm\n    914   4 card0-crtc0\n    915   4 card0-crtc1\n    916   4 card0-crtc2\n    917   4 card0-crtc3\n   1677   4 krfcommd\n   3184   4 kworker/4:1H-kblockd\n   3370   4 qemu-system-x86\n   3387   4 kvm-nx-lpage-recovery-3370\n   3776   4 kvm-pit/3370\n</code></pre> <p>The latency is way too unreliable and not realtime. <pre><code>root@sigmatek-core2:~# latency -s -T 60\n== Sampling period: 100 us\n== Test mode: periodic user-mode task\n== All results in microseconds\nwarming up...\nRTT|  00:00:01  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      0.995|      2.722|   4154.694|      47|     0|      0.995|   4154.694\nRTD|      0.916|      2.406|    303.367|      58|     0|      0.916|   4154.694\nRTD|      0.723|      2.305|    295.200|      68|     0|      0.723|   4154.694\nRTD|      0.901|      2.330|    244.994|      76|     0|      0.723|   4154.694\nRTD|      0.950|      2.247|    220.734|      80|     0|      0.723|   4154.694\nRTD|      0.725|      2.130|     53.888|      80|     0|      0.723|   4154.694\nRTD|      0.794|      2.270|    117.382|      81|     0|      0.723|   4154.694\nRTD|      0.691|      2.748|   4907.415|     133|     0|      0.691|   4907.415\nRTD|      0.982|      2.253|     67.471|     133|     0|      0.691|   4907.415\nRTD|      0.748|      2.221|     90.370|     133|     0|      0.691|   4907.415\nRTD|      0.818|      2.230|     63.722|     133|     0|      0.691|   4907.415\nRTD|      1.045|      2.193|     50.296|     133|     0|      0.691|   4907.415\nRTD|      1.216|      2.213|     37.887|     133|     0|      0.691|   4907.415\nRTD|      1.040|      2.211|     46.584|     133|     0|      0.691|   4907.415\nRTD|      0.676|      2.283|    716.719|     142|     0|      0.676|   4907.415\nRTD|      0.590|      2.240|    148.979|     143|     0|      0.590|   4907.415\nRTD|      0.700|      2.218|    144.958|     148|     0|      0.590|   4907.415\nRTD|      0.598|      2.818|    161.812|     153|     0|      0.590|   4907.415\nRTD|      0.852|      2.202|    127.750|     157|     0|      0.590|   4907.415\nRTD|      1.118|      2.705|   4493.786|     205|     0|      0.590|   4907.415\nRTD|      0.630|      2.226|    189.791|     207|     0|      0.590|   4907.415\nRTT|  00:00:22  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      1.043|      3.102|   4843.394|     287|     0|      0.590|   4907.415\nRTD|      0.981|      2.579|   2054.323|     312|     0|      0.590|   4907.415\nRTD|      1.006|      2.346|    203.226|     318|     0|      0.590|   4907.415\nRTD|      0.946|      2.333|    173.532|     323|     0|      0.590|   4907.415\nRTD|      0.741|      2.413|    195.747|     328|     0|      0.590|   4907.415\nRTD|      0.695|      2.369|    224.494|     334|     0|      0.590|   4907.415\nRTD|      0.921|      2.385|    477.227|     343|     0|      0.590|   4907.415\nRTD|      1.263|      2.616|   3155.684|     378|     0|      0.590|   4907.415\nRTD|      0.775|      2.252|    179.318|     380|     0|      0.590|   4907.415\nRTD|      0.721|      2.226|     25.904|     380|     0|      0.590|   4907.415\nRTD|      0.810|      2.200|    189.302|     382|     0|      0.590|   4907.415\nRTD|      0.619|      2.295|    211.109|     387|     0|      0.590|   4907.415\nRTD|      0.681|      2.716|   4740.773|     436|     0|      0.590|   4907.415\nRTD|      0.745|      2.244|    184.998|     439|     0|      0.590|   4907.415\nRTD|      0.806|      2.259|    184.789|     443|     0|      0.590|   4907.415\nRTD|      0.577|      2.320|    259.109|     450|     0|      0.577|   4907.415\nRTD|      0.927|      2.595|   1453.449|     474|     0|      0.577|   4907.415\nRTD|      0.824|      2.710|   3261.857|     514|     0|      0.577|   4907.415\nRTD|      0.718|      2.450|    229.777|     522|     0|      0.577|   4907.415\nRTD|      0.773|      2.382|    238.656|     531|     0|      0.577|   4907.415\nRTD|      0.815|      2.470|    268.511|     538|     0|      0.577|   4907.415\nRTT|  00:00:43  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      1.500|      2.560|    384.558|     554|     0|      0.577|   4907.415\nRTD|      1.371|      2.475|    243.396|     562|     0|      0.577|   4907.415\nRTD|      0.624|      2.573|    511.409|     576|     0|      0.577|   4907.415\nRTD|      0.899|      3.044|   4593.851|     648|     0|      0.577|   4907.415\nRTD|      1.090|      2.827|   3403.441|     688|     0|      0.577|   4907.415\nRTD|      0.900|      2.549|    337.856|     701|     0|      0.577|   4907.415\nRTD|      0.979|      2.323|    282.412|     711|     0|      0.577|   4907.415\nRTD|      0.768|      2.298|    236.064|     718|     0|      0.577|   4907.415\nRTD|      0.846|      2.243|    202.747|     723|     0|      0.577|   4907.415\nRTD|      0.732|      3.081|   4731.553|     810|     0|      0.577|   4907.415\nRTD|      1.630|      2.339|    264.409|     818|     0|      0.577|   4907.415\nRTD|      0.820|      2.417|    305.139|     829|     0|      0.577|   4907.415\nRTD|      0.857|      2.954|   5926.355|     899|     0|      0.577|   5926.355\nRTD|      0.752|      2.234|    273.349|     906|     0|      0.577|   5926.355\nRTD|      0.630|      2.290|    225.216|     914|     0|      0.577|   5926.355\nRTD|      1.323|      2.322|    226.582|     920|     0|      0.577|   5926.355\nRTD|      1.181|      2.296|    224.922|     928|     0|      0.577|   5926.355\nHSH|--param|--samples-|--average--|---stddev--\nHSS|    min|        59|      0.220|      0.418\nHSS|    avg|    598956|      1.996|      4.444\nHSS|    max|        59|    219.780|     84.249\n---|-----------|-----------|-----------|--------|------|-------------------------\nRTS|      0.577|      2.428|   5926.355|     928|     0|    00:01:00/00:01:00\n</code></pre></p>"},{"location":"general/protocol/#realtime-priority","title":"Realtime priority","text":"<p>Danger</p> <p>Setting a real-time priority of 99 for a process means that this process has the highest priority in the system and is executed before all other processes. This can result in other processes, including important system processes, not receiving the CPU time they need to function properly. This can lead to system instability and, in the worst case, to the system becoming unresponsive or \"crashing\".</p> <p>It is important to be careful when using real-time priorities and ensure that other important processes still get the CPU time they need. It might be helpful to gradually increase the real-time priority and observe the effects on the system instead of jumping straight to the highest priority.</p> <p>To see the real-time priorities of all running processes, you can use this command: <pre><code>ps -eo pid,comm,ni,rtprio,cls\n</code></pre></p>"},{"location":"general/protocol/#trace-cmd","title":"Trace-cmd","text":""},{"location":"general/protocol/#problems-trace-cmd","title":"Problems trace-cmd","text":"<p>After following Rostedt Tutorial, I had following problems when using:  <pre><code>sudo trace-cmd record -e kvm:kvm_entry -e kvm:kvm_exit -A @3:823 --name Salamander4 -e all\n</code></pre></p>"},{"location":"general/protocol/#problem-1","title":"Problem 1","text":"<p>\"Failed to negotiate timestamps synchronization with the host\" timestamp_error.png</p>"},{"location":"general/protocol/#problem-2","title":"Problem 2","text":"<ol> <li>\"Cannot find host / guest tracing into the loaded streams\" kvm_combo_error.png</li> </ol>"},{"location":"general/protocol/#solution-to-trace-cmd-problems","title":"Solution to trace-cmd problems","text":"<p>The problem was the trace-cmd version. Set both host and guest to v3.2.0 by copying the files from host to guest: <pre><code>scp /usr/local/bin/trace-cmd root@\"$ip_address\":/usr/bin\nscp /usr/local/lib64/libtracefs.so.1 root@\"$ip_address\":/lib64\nscp /usr/local/lib64/libtraceevent.so.1 root@\"$ip_address\":/lib64\n</code></pre> Now, trace-cmd version 3.2.0 is active and tracing the guest finally works with <code>trace-cmd agent</code> on the guest.</p> <p>Using kernelshark with <code>kernelshark trace.dat -a trace-Salamander4.dat</code> or simply <code>./start_kernelshark.sh</code>, we get the expected visualization. Events of the guest happen between kvm_entry and kvm_exit of the host.</p>"},{"location":"general/protocol/#ubuntu-vm-on-virtual-machine-manager","title":"Ubuntu VM on virtual machine manager","text":"<p>After giving the VM access to the vsocket, and installing trace-cmd along with dependancies, run <code>trace-cmd agent</code>. Now, the guest is able to negotiate with host about timestamp synchronization. After running <code>./start_kernelshark.sh</code>, we can view KVM Combo plots</p>"},{"location":"general/protocol/#connect-to-hardware-salamander-4","title":"Connect to hardware Salamander 4","text":"<p>ssh root@192.168.1.244</p>"},{"location":"general/timeline/","title":"Timeline","text":"Date Log 08.02.2024 Dual boot Windows and Ubuntu 09.02.2024 Booted Salamander 4 on Ubuntu 12.02.2024 Connected Salamander 4 with SSH 13.02.2024 Connected Salamander 4 with Lasal Class 2 (Christian) after configuring bridge 14.02.2024 Installed Windows VM on Ubuntu, installed Lasal Class 2 on Windows VM, connected with Salamander 4 15.02.2024 Run pumpcontrol example successfully 16.02.2024 Increased virtual CPU in Windows 19.02.2024 Xenomai-system-tools 20.02.2024 KernelShark 21.02.2024 Local Yocto Build finally done 22.02.2024 trace-cmd agent on guest communicates with host 23.02.2024 Teammeeting and Germany 26.02.2024 after_bitbake, kernelshark, paths 27.02.2024 Isolate CPUs on host system and let guest run on it 28.02.2024 Host-Guest timestamp sync works with VM, can view KVM Combo plots, does still not work with Salamander4 29.02.2024 useful_links and search_for_x.py 01.03.2024 checklist.md, nmbridge.md, understand nmbridge 04.03.2024 Finally: Negotiated kvm time sync protocol with guest Salamander4 05.03.2024 lat worst reduced from 374.075 to 87.379 06.03.2024 Add documentation local server 07.03.2024 Start Salamander4 CPU with icecc 08.03.2024 Merge master and readme 11.03.2024 Kernel patch, richard meeting and settings.json 12.03.2024 real time priorities with chrt -f 50, no success 13.03.2024 Preventing kernel tasks from being scheduled on CPU4 14.03.2024 irq.md 15.03.2024 Timer 1000Hz 18.03.2024 kernel_processes.md, kernelshark, start thesis 19.03.2024 Added Zotero, Ubuntu Pro and Ubuntu PREEMPT_RT 20.03.2024 kvm_exit reasons plot 21.03.2024 gitlfs and settings.json, plot with and without taskset, write more thesis 22.03.2024 Literature paper search"},{"location":"kernel-patch/irq/","title":"Irq","text":""},{"location":"kernel-patch/irq/#select-best-cpu-for-qemu","title":"Select best CPU for QEMU","text":"<pre><code>sigma_ibo@pamhal:$ cat /sys/devices/system/cpu/cpu*/cpufreq/cpuinfo_max_freq\n5000000\n5000000\n5000000\n4000000\n4000000\n4000000\n4000000\n4000000\n4000000\n4000000\n4000000\n5000000\n5000000\n5000000\n5200000\n5200000\n5200000\n5200000 -&gt; 17\n5000000\n5000000\n</code></pre>"},{"location":"kernel-patch/irq/#check-which-irqs-use-cpu-17","title":"Check which IRQs use CPU 17","text":"<p>CPU17 is being used by IRQs with check_smp_activity.sh: <pre><code>0\n10\n11\n13\n138\n15\n191\n194\n2\n208\n214\n3\n4\n5\n6\n7\n</code></pre></p>"},{"location":"kernel-patch/irq/#check-the-mask-of-irq","title":"Check the mask of IRQ","text":"<p>The mask for IRQ0 for example would be:  <pre><code>cat /proc/irq/0/smp_affinity\nfffff\n</code></pre></p>"},{"location":"kernel-patch/irq/#change-permissions-for-the-irqs","title":"Change permissions for the IRQs","text":"<p>In order to change the mask, first give permissions: <pre><code>chmod 777 /proc/irq/*/smp_affinity\n</code></pre></p>"},{"location":"kernel-patch/irq/#change-mask-of-irq","title":"Change Mask of IRQ","text":"<p>Then change the mask with  <pre><code>sudo echo dffff &gt; /proc/irq/0/smp_affinity\n</code></pre></p>"},{"location":"kernel-patch/irq/#check-again-the-changed-mask-of-irq","title":"Check again the changed mask of IRQ","text":"<pre><code>cat /proc/irq/0/smp_affinity\ndffff\n</code></pre>"},{"location":"kernel-patch/irq/#check-again-which-irqs-use-cpu-17","title":"Check again which IRQs use CPU 17","text":"<p>CPU17 is being used by IRQs with check_smp_activity.sh (IRQ0 is not listed anymore):  <pre><code>10\n11\n13\n138\n15\n191\n194\n2\n208\n214\n3\n4\n5\n6\n7\n</code></pre></p>"},{"location":"kernel-patch/irq/#batch-change-permissions","title":"Batch change permissions","text":"<pre><code>sudo chmod 777 /proc/irq/10/smp_affinity\nsudo chmod 777 /proc/irq/11/smp_affinity\nsudo chmod 777 /proc/irq/13/smp_affinity\nsudo chmod 777 /proc/irq/138/smp_affinity\nsudo chmod 777 /proc/irq/15/smp_affinity\nsudo chmod 777 /proc/irq/191/smp_affinity\nsudo chmod 777 /proc/irq/194/smp_affinity\nsudo chmod 777 /proc/irq/2/smp_affinity\nsudo chmod 777 /proc/irq/208/smp_affinity\nsudo chmod 777 /proc/irq/214/smp_affinity\nsudo chmod 777 /proc/irq/3/smp_affinity\nsudo chmod 777 /proc/irq/4/smp_affinity\nsudo chmod 777 /proc/irq/5/smp_affinity\nsudo chmod 777 /proc/irq/6/smp_affinity\nsudo chmod 777 /proc/irq/7/smp_affinity\n</code></pre>"},{"location":"kernel-patch/irq/#batch-cat-irq-smp_affinity","title":"Batch cat IRQ smp_affinity","text":"<pre><code>cat /proc/irq/10/smp_affinity  -&gt; fffff\ncat /proc/irq/11/smp_affinity  -&gt; fffff\ncat /proc/irq/13/smp_affinity  -&gt; fffff\ncat /proc/irq/138/smp_affinity -&gt; fffff\ncat /proc/irq/15/smp_affinity  -&gt; fffff\ncat /proc/irq/191/smp_affinity -&gt; 20000\ncat /proc/irq/194/smp_affinity -&gt; fffff\ncat /proc/irq/2/smp_affinity   -&gt; fffff\ncat /proc/irq/208/smp_affinity -&gt; 20000\ncat /proc/irq/214/smp_affinity -&gt; fffff\ncat /proc/irq/3/smp_affinity   -&gt; fffff\ncat /proc/irq/4/smp_affinity   -&gt; fffff\ncat /proc/irq/5/smp_affinity   -&gt; fffff\ncat /proc/irq/6/smp_affinity   -&gt; fffff\ncat /proc/irq/7/smp_affinity   -&gt; fffff\n</code></pre>"},{"location":"kernel-patch/irq/#batch-change-irq-smp_affinity-of-fffff","title":"Batch change IRQ smp_affinity of fffff","text":"<pre><code>sudo echo dffff &gt; /proc/irq/10/smp_affinity\nsudo echo dffff &gt; /proc/irq/11/smp_affinity\nsudo echo dffff &gt; /proc/irq/13/smp_affinity\nsudo echo dffff &gt; /proc/irq/138/smp_affinity\nsudo echo dffff &gt; /proc/irq/15/smp_affinity\nsudo echo dffff &gt; /proc/irq/3/smp_affinity\nsudo echo dffff &gt; /proc/irq/4/smp_affinity\nsudo echo dffff &gt; /proc/irq/5/smp_affinity\nsudo echo dffff &gt; /proc/irq/6/smp_affinity\nsudo echo dffff &gt; /proc/irq/7/smp_affinity\n</code></pre>"},{"location":"kernel-patch/irq/#could-not-be-changed","title":"COULD NOT BE CHANGED","text":"<pre><code>191\n194\n2\n208\n214\n</code></pre>"},{"location":"kernel-patch/irq/#values","title":"VALUES","text":"<pre><code>cat /proc/irq/191/smp_affinity   -&gt; 20000\ncat /proc/irq/194/smp_affinity   -&gt; fffff\ncat /proc/irq/2/smp_affinity   -&gt; fffff\ncat /proc/irq/208/smp_affinity   -&gt; 20000\ncat /proc/irq/214/smp_affinity   -&gt; fffff\n</code></pre>"},{"location":"kernel-patch/irq/#batch-check-permissions","title":"Batch check permissions","text":"<pre><code>ll /proc/irq/0/smp_affinity\nll /proc/irq/10/smp_affinity\nll /proc/irq/11/smp_affinity\nll /proc/irq/13/smp_affinity\nll /proc/irq/138/smp_affinity\nll /proc/irq/15/smp_affinity\nll /proc/irq/191/smp_affinity\nll /proc/irq/194/smp_affinity\nll /proc/irq/2/smp_affinity\nll /proc/irq/208/smp_affinity\nll /proc/irq/214/smp_affinity\nll /proc/irq/3/smp_affinity\nll /proc/irq/4/smp_affinity\nll /proc/irq/5/smp_affinity\nll /proc/irq/6/smp_affinity\nll /proc/irq/7/smp_affinity\n</code></pre>"},{"location":"kernel-patch/irq/#batch-check-values","title":"Batch check values","text":"<pre><code>cat /proc/irq/0/smp_affinity\ncat /proc/irq/10/smp_affinity\ncat /proc/irq/11/smp_affinity\ncat /proc/irq/13/smp_affinity\ncat /proc/irq/138/smp_affinity\ncat /proc/irq/15/smp_affinity\ncat /proc/irq/191/smp_affinity\ncat /proc/irq/194/smp_affinity\ncat /proc/irq/2/smp_affinity\ncat /proc/irq/208/smp_affinity\ncat /proc/irq/214/smp_affinity\ncat /proc/irq/3/smp_affinity\ncat /proc/irq/4/smp_affinity\ncat /proc/irq/5/smp_affinity\ncat /proc/irq/6/smp_affinity\ncat /proc/irq/7/smp_affinity\n</code></pre>"},{"location":"kernel-patch/kernel-patch/","title":"Linux kernel patch","text":"<p>The Linux Kernel Archives Youtube: Applying the Realtime patch to the Linux kernel </p>"},{"location":"kernel-patch/kernel-patch/#proceedure","title":"Proceedure","text":"<p>Download Linux kernel and patch Gunzip the patch <pre><code>gunzip patch-*\n</code></pre> Patch the kernel source code <pre><code>patch -p1 &lt; ../../rt_linux/patch-*\n</code></pre> Customize the configuration <pre><code>sudo make menuconfig\n</code></pre> Compile the kernel by using multiple cores. $(nproc) returns the number of processing units available.  <pre><code>make -j$(nproc)\n</code></pre> Install the kernel and its modules to the appropriate system directories. <pre><code>sudo make modules_install install \n</code></pre> Update the bootloader <pre><code>sudo update-grub\n</code></pre> Reboot the system <pre><code>sudo reboot \n</code></pre> This is the output  <pre><code>$ uname -a\nLinux pamhal 6.8.0-rt7 #1 SMP PREEMPT_RT Mon Mar 11 13:12:31 CET 2024 x86_64 x86_64 x86_64 GNU/Linux\n</code></pre></p>"},{"location":"kernel-patch/kernel-patch/#troubleshooting","title":"Troubleshooting","text":""},{"location":"kernel-patch/kernel-patch/#problem-1","title":"Problem 1","text":"<p>Fully Preemptible Kernel (RT) not showing up in menuconfig </p>"},{"location":"kernel-patch/kernel-patch/#solution-1","title":"Solution 1","text":"<p>1) Run <code>make mrproper</code> 2) Then run <code>make menuconfig</code> </p> <p>This is the output Source</p>"},{"location":"kernel-patch/kernel-patch/#problem-2","title":"Problem 2","text":"<p>No rule to make target 'debian/canonical-certs.pem'</p>"},{"location":"kernel-patch/kernel-patch/#solution-2","title":"Solution 2","text":"<p>If you get the certificate error, execute the following in the root of the kernel source <pre><code>scripts/config --disable SYSTEM_TRUSTED_KEYS\nscripts/config --disable SYSTEM_REVOCATION_KEYS\n</code></pre> Then run make again and it should work! Source</p>"},{"location":"kernel-patch/kernel-patch/#useful-stuff","title":"Useful stuff","text":"<p>qemu-optimization</p>"},{"location":"kernel-patch/kernel_processes/","title":"Kernel processes","text":""},{"location":"kernel-patch/kernel_processes/#events","title":"Events","text":"<p>Events on Host CPU17 hindering execution of Guest Salamander4 CPU0</p> Task Event qemu-system-x86 irq_vectors/local_timer_entry qemu-system-x86 irq_vectors/local_timer_exit qemu-system-x86 timer/hrtimer_start qemu-system-x86 timer/hrtimer_cancel qemu-system-x86 timer/hrtimer_expire_entry qemu-system-x86 timer/hrtimer_expire_exit qemu-system-x86 notifier/notifier_run qemu-system-x86 rcu/rcu_utilization qemu-system-x86 rseq/rseq_update qemu-system-x86 msr/write_msr qemu-system-x86 msr/read_msr qemu-system-x86 sched/shed_stat_runtime qemu-system-x86 sched/shed_switch qemu-system-x86 kvm/kvm_entry qemu-system-x86 kvm/kvm_exit qemu-system-x86 kvm/kvm_apic qemu-system-x86 kvm/kvm_apicv_accept_irq qemu-system-x86 kvm/kvm_apic_accept_irq qemu-system-x86 kvm/kvm_pv_tlb_flush qemu-system-x86 kvm/kvm_hv_timer_state qemu-system-x86 kvm/kvm_wait_lapic_expire qemu-system-x86 kvm/kvm_vcpu_wakeup vhost-12398 kmem/kmem_cache_free vhost-12398 skb/skb_copy_datagram_iovec vhost-12398 skb/consume_skb vhost-12398 sched/sched_waking vhost-12398 sched/sched_wakeup vhost-12398 ipi/ipi_send_cpu vhost-12398 rcu/rcu_utilization vhost-12398 sched/shed_stat_runtime vhost-12398 sched/shed_switch rcuc/17 rcu/rcu_utilization rcuc/17 sched/shed_stat_runtime rcuc/17 sched/shed_switch"},{"location":"kernel-patch/kernel_processes/#pattern-1","title":"Pattern 1","text":"Task Event qemu-system-x86 msr/write_msr qemu-system-x86 kvm/kvm_exit qemu-system-x86 kvm/kvm_apic_accept_irq qemu-system-x86 kvm/kvm_apicv_accept_irq qemu-system-x86 kvm/kvm_entry qemu-system-x86 kvm/kvm_wait_lapic_expire qemu-system-x86 rcu/rcu_utilization qemu-system-x86 rcu/rcu_utilization"},{"location":"kernel-patch/kernel_processes/#pattern-2","title":"Pattern 2","text":"Task Event qemu-system-x86 msr/write_msr qemu-system-x86 kvm/kvm_exit qemu-system-x86 kvm/kvm_apic qemu-system-x86 kvm/kvm_hv_timer_state qemu-system-x86 kvm/kvm_entry qemu-system-x86 rcu/rcu_utilization qemu-system-x86 rcu/rcu_utilization"},{"location":"kernel-patch/kernel_processes/#pattern-3","title":"Pattern 3","text":"Task Event qemu-system-x86 msr/write_msr qemu-system-x86 kvm/kvm_exit qemu-system-x86 timer/hrtimer_start qemu-system-x86 msr/write_msr qemu-system-x86 kvm/kvm_hv_timer_state qemu-system-x86 irq_vectors/local_timer_entry qemu-system-x86 timer/hrtimer_cancel qemu-system-x86 timer/hrtimer_expire_entry qemu-system-x86 timer/hrtimer_expire_exit qemu-system-x86 msr/write_msr qemu-system-x86 irq_vectors/local_timer_exit qemu-system-x86 kvm/kvm_vcpu_wakeup qemu-system-x86 kvm/kvm_apic_accept_irq qemu-system-x86 kvm/kvm_apicv_accept_irq qemu-system-x86 kvm/kvm_entry qemu-system-x86 rcu/rcu_utilization qemu-system-x86 rcu/rcu_utilization"},{"location":"kernel-patch/kernel_processes/#pattern-4","title":"Pattern 4","text":"Task Event qemu-system-x86 msr/write_msr qemu-system-x86 kvm/kvm_exit qemu-system-x86 timer/hrtimer_start qemu-system-x86 kvm/kvm_hv_timer_state qemu-system-x86 irq_vectors/local_timer_entry qemu-system-x86 timer/hrtimer_cancel qemu-system-x86 timer/hrtimer_expire_entry qemu-system-x86 notifier/notifier_run qemu-system-x86 rcu/rcu_utilization qemu-system-x86 rcu/rcu_utilization qemu-system-x86 msr/read_msr qemu-system-x86 msr/read_msr qemu-system-x86 sched/shed_stat_runtime qemu-system-x86 timer/hrtimer_expire_exit qemu-system-x86 timer/hrtimer_start qemu-system-x86 msr/write_msr qemu-system-x86 irq_vectors/local_timer_exit qemu-system-x86 irq_vectors/local_timer_entry qemu-system-x86 timer/hrtimer_cancel qemu-system-x86 timer/hrtimer_expire_entry qemu-system-x86 timer/hrtimer_expire_exit qemu-system-x86 msr/write_msr qemu-system-x86 irq_vectors/local_timer_exit qemu-system-x86 kvm/kvm_vcpu_wakeup qemu-system-x86 kvm/kvm_apic_accept_irq qemu-system-x86 kvm/kvm_apicv_accept_irq qemu-system-x86 kvm/kvm_entry qemu-system-x86 rcu/rcu_utilization qemu-system-x86 rcu/rcu_utilization"},{"location":"sigmatek/QEMU/nmbridge/","title":"Nmbridge","text":"<ul> <li>Both Laptop and Docking connected</li> <li>Laptop connected, Docking not connected</li> <li>Enable bridge and disable both Laptop and Docking Station</li> <li>Connections</li> <li>Bridge Connections</li> </ul>"},{"location":"sigmatek/salamander4/bash_commands/","title":"Bash commands","text":""},{"location":"sigmatek/salamander4/bash_commands/#essential-packages","title":"Essential packages","text":"<p>sudo apt install gcc g++ libelf-dev libssl-dev make pkg-config gawk wget git diffstat unzip texinfo gcc build-essential chrpath socat cpio python3 python3-pip python3-pexpect xz-utils debianutils iputils-ping python3-git python3-jinja2 libegl1-mesa libsdl1.2-dev python3-subunit mesa-common-dev zstd liblz4-tool file locales libacl1</p>"},{"location":"sigmatek/salamander4/bash_commands/#fetch-script-for-yocto","title":"Fetch script for yocto","text":"<p><pre><code>chmod +x fetchsdk.sh  \n./fetchsdk.sh -h  \n./fetchsdk.sh Salamander4_sigmatek-core2  \nchmod +x sigmatek-salamander-glibc-x86_64-salamander-image-core2-64-toolchain-09.07.119_T1701.sh  \n./sigmatek-salamander-glibc-x86_64-salamander-image-core2-64-toolchain-09.07.119_T1701.sh  \n</code></pre> Each time you wish to use the SDK in a new shell session, you need to source the environment setup script e.g. . /opt/salamander/sigmatek-core2/09.07.119_T1701/environment-setup-core2-64-sigmatek-linux . /opt/salamander/sigmatek-core2/09.07.119_T1701/environment-setup-x86-sigmatekmllib32-linux  </p>"},{"location":"sigmatek/salamander4/bash_commands/#mount-storage","title":"Mount storage","text":"<pre><code>sudo blkid  \nsudo nano /etc/fstab  \nsudo mount -a  \nsudo chown -R sigma_ibo /home/sigma_ibo/Develop  \ndf -h ~/Develop  \n</code></pre>"},{"location":"sigmatek/salamander4/bash_commands/#setup","title":"Setup","text":"<pre><code>mkdir ~/Develop  \nmkdir ~/Develop/docker  \nmkdir ~/Develop/jenkins  \nmkdir ~/Develop/jenkins/home  \ncd ~/Develop/jenkins/home  \nssh-keygen -t ed25519 -C \"halil.pamuk@sigmatek.at\"  \ncat ~/.ssh/id_ed25519.pub  \nssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINJ1I5EULqfk9w3uyyWgkWZmrLur+0v6mOEWk2c6GblE halil.pamuk@sigmatek.at  \ngit clone git@git.sigmatek.at:SIG_SW_BS/salamander/LRT.git  \ngit clone git@git.sigmatek.at:SIG_SW_BS/salamander/SalamanderTools.git  \ngit clone git@git.sigmatek.at:SIG_SW_BS/salamander/u-boot.git  \nmkdir kernel  &amp;&amp; cd kernel\ngit clone git@git.sigmatek.at:SIG_SW_BS/salamander/ipipe.git  \ngit clone git@git.sigmatek.at:SIG_SW_BS/salamander/xenomai  \n</code></pre>"},{"location":"sigmatek/salamander4/bash_commands/#yocto-example","title":"Yocto example","text":"<p>Minimal Yocto Linux image</p>"},{"location":"sigmatek/salamander4/build_LRT/","title":"Build LRT - Salamander 3 Terminal","text":""},{"location":"sigmatek/salamander4/build_LRT/#set-sdk","title":"Set SDK","text":"<pre><code>. /opt/poky/1.6.2/environment-setup-cortexa9-vfp-neon-poky-linux-gnueabi \n</code></pre>"},{"location":"sigmatek/salamander4/build_LRT/#open-2-terminals","title":"Open 2 terminals","text":""},{"location":"sigmatek/salamander4/build_LRT/#terminal-1-ssh-remote-connection","title":"Terminal 1: SSH Remote Connection","text":"<ol> <li>Connect to terminal device with <code>ssh -oHostKeyAlgorithms=+ssh-rsa root@10.10.116.13</code></li> <li>Stop init.d with <code>/etc/init.d/lrt stop</code> or <code>killall -9 LRT*</code></li> <li>Do Terminal 2</li> <li>Start init.d with <code>/etc/init.d/lrt start</code> or <code>./LRTConfig.exe</code></li> </ol>"},{"location":"sigmatek/salamander4/build_LRT/#terminal-2-code-make-and-scp","title":"Terminal 2: Code, make and scp","text":"<ol> <li>Navigate to  <code>~/Develop/jenkins/home/LRT</code>.</li> <li>Open VS Code with  <code>. code</code> and edit LRT</li> <li>Run <code>make</code> when finished</li> <li>Copy contents to terminal device after stopping init.d with <code>scp -oHostKeyAlgorithms=+ssh-rsa build-Linux-arm-S3.meson/*/LRT*.exe root@10.10.116.13:</code></li> </ol>"},{"location":"sigmatek/salamander4/build_LRT/#sigmatek-documentation","title":"Sigmatek Documentation","text":"<p>Build LRT</p>"},{"location":"sigmatek/salamander4/build_with_yocto/","title":"Build with Yocto","text":""},{"location":"sigmatek/salamander4/build_with_yocto/#clone-the-repo","title":"Clone the repo","text":"<p>The first step is to clone the yocto4/salamander git repo: NOTE: In order to clone all dependent repositories, clone the repo with \u2013recurse-submodules. <pre><code>git clone --recurse-submodules git@git.sigmatek.at:SIG_SW_BS/salamander/yocto4/salamander.git\n</code></pre></p>"},{"location":"sigmatek/salamander4/build_with_yocto/#initialize","title":"Initialize","text":"<p>Now you should be left with a subdirectory called salamander.</p> <p>Note: It is a good idea to do the actual build inside a subdirectory named after the specific architecture (e.g. aarch64). This way the directory structure can be used for multible builds without losing track of the overall picture. <pre><code>cd salamander\nmkdir core2 &amp;&amp; cd core2\n</code></pre></p> <p>Next we need to initialize the build environment by calling the init.sh script. Example for Salamander: <pre><code>../init.sh -b build -m sigmatek-core2 -d salamander\n</code></pre> Call the init.sh script without parameters to get a full list of options, like how to build Salamander. You can get a full list of options by calling the script without any parameters. There is also stated what to put after -m option for building an arm version. The -b option defines the build output directory (which will be created by the script if it does not exist).</p>"},{"location":"sigmatek/salamander4/build_with_yocto/#build-image","title":"Build image","text":"<p>Now you can run bitbake for building a gecko-image or salamander-image:</p> <p>To continue the build after an error, start bitbake with -k or \u2013continue. <pre><code>bitbake salamander-image -k\n</code></pre> This process can take up to several hours. So you better are not in a hurry.</p> <p>Afterwards you will find a .lbi-file in the deploy-subdir <code>~/Develop/jenkins/home/buildwithyocto/salamander/core2/build/tmp/deploy/resources/images/sigmatek-core2/</code></p> <p>Hopefully everything goes according to plan. If you encounter a build problem and you punch through it, please write some trouble shooting for this ;-)</p>"},{"location":"sigmatek/salamander4/build_with_yocto/#tipps","title":"Tipps","text":""},{"location":"sigmatek/salamander4/build_with_yocto/#using-less-cores","title":"Using less cores","text":"<p>If you build locally, you may run into the problem that you system is loaded heavily by the yocto build. In fact the load can be so heavy that working with your system on other task can become very slow due to lack of responsiveness.</p> <p>One solution is to tell yocto to use less threads for the build by adding the following line to ~/some/path/build/conf/local.conf</p> <p><pre><code>BB_NUMBER_THREADS = \"${@oe.utils.cpu_count()//2}\"\n</code></pre> In this example we set the number of threads to half the number of cpu cores on the system. In addition one can also set the number of parallel compilations done by make: <pre><code>PARALLEL_MAKE = \"-j${@oe.utils.cpu_count()//2}\"\n</code></pre></p>"},{"location":"sigmatek/salamander4/build_with_yocto/#add-other-computers-to-the-mix","title":"Add other computers to the mix","text":"<p>In <code>buildconfs/default.conf</code> <pre><code>INHERIT += \"icecc\"\nICECC_PARALLEL_MAKE = \"-j 88\"\nICECC_CARET_WORKAROUND = \"1\"\nICECC_DISABLED ??= \"0\"\nICECC_RECIPE_DISABLE = \"\"\n</code></pre> Patch <pre><code>cat &lt;&lt;EOF &gt; meta-virtualization/recipes-core/meta/container-dummy-provides.bb\nDUMMYARCH = \"container-dummy-provides\"\nDUMMYPROVIDES = \"\\\n   /bin/sh \\\n   /usr/bin/env \\\n\"\nLICENSE = \"MIT\"\nEOF\n</code></pre></p>"},{"location":"sigmatek/salamander4/build_with_yocto/#using-jenkins-as-download-mirror","title":"Using jenkins as download mirror","text":"<p>Sometimes it happens that servers that hold repos necessary for builds are down. In this case it is possible to use the jenkins as a download mirror.</p> <p>For this you simply add the following two lines to one of the config files, e.g. site.conf</p> <pre><code>SOURCE_MIRROR_URL ?= \"http://osjenkins.lhau.sigaut.org:8080/userContent/downloads/\"\nINHERIT += \"own-mirrors\"\n</code></pre>"},{"location":"sigmatek/salamander4/build_with_yocto/#sigmatek-documentation","title":"Sigmatek Documentation","text":"<p>Build with Yocto</p>"},{"location":"sigmatek/trace-cmd/analysis/info/","title":"Info","text":""},{"location":"sigmatek/trace-cmd/analysis/info/#tools","title":"Tools","text":"<p>trace-cmd.org kernelshark.org </p>"},{"location":"sigmatek/trace-cmd/analysis/info/#documentation","title":"Documentation","text":"<p>trace-cmd/documentation kernelshark/documentation</p>"},{"location":"sigmatek/trace-cmd/analysis/info/#usage-trace-cmd","title":"Usage trace-cmd","text":"<p>trace-cmd [COMMAND] ...</p> Command Description record Record a trace into a trace.dat file set Set a ftrace configuration parameter start Start tracing without recording into a file extract Extract a trace from the kernel stop Stop the kernel from recording trace data restart Restart the kernel trace data recording show Show the contents of the kernel tracing buffer reset Disable all kernel tracing and clear the trace buffers clear Clear the trace buffers report Read out the trace stored in a trace.dat file stream Start tracing and read the output directly profile Start profiling and read the output directly hist Show a histogram of the trace.dat information stat Show the status of the running tracing (ftrace) system split Parse a trace.dat file into smaller file(s) options List the plugin options available for trace-cmd report listen Listen on a network socket for trace clients agent Listen on a vsocket for trace clients setup-guest Create FIFOs for tracing guest VMs list List the available events, plugins, or options restore Restore a crashed record snapshot Take a snapshot of the running trace stack Output, enable, or disable kernel stack tracing check-events Parse trace event formats dump Read out the metadata from a trace file attach Attach a host and guest trace.dat file convert Convert a trace file to a different version"},{"location":"sigmatek/trace-cmd/analysis/info/#usage-kernelshark","title":"Usage kernelshark","text":"<pre><code>kernelshark # host only  \nkernelshark trace.dat -a trace-Salamander4.dat #host with guest\n</code></pre>"},{"location":"sigmatek/trace-cmd/analysis/kernelshark/","title":"Kernelshark","text":""},{"location":"sigmatek/trace-cmd/analysis/kernelshark/#use-kernelshark","title":"Use kernelshark","text":"<p>File trace.dat contains no data</p> <p>Host only <pre><code>sudo trace-cmd record -e kvm:kvm_entry -e kvm:kvm_exit\n</code></pre></p> <p>Host and Guest track all both <pre><code>sudo trace-cmd record -e all -A @3:823 --name Salamander4 -e all\n</code></pre></p> <p>Host and Guest track kvm, sched, irq, irq_vectors <pre><code>sudo trace-cmd record -e kvm -e sched -e irq -e irq_vectors -A @3:823 --name Salamander4 -e all ssh root@192.168.51 'ls -lR . &gt; /dev/null'\n</code></pre></p> <p>Host and Guest track kvm_entry and kvm_exit with ssh to guest <pre><code>sudo trace-cmd record -e kvm:kvm_entry -e kvm:kvm_exit -A @3:823 --name Salamander4 -e all ssh root@192.168.1.7851 'ls -lR . &gt; /dev/null'\n</code></pre></p> <p>Host and Guest track kvm_entry and kvm_exit <pre><code>sudo trace-cmd record -e kvm:kvm_entry -e kvm:kvm_exit -A @3:823 --name Salamander4 -e all\n</code></pre></p> <p>After trace-cmd raw <pre><code>trace-cmd report\n</code></pre></p> <p>After trace-cmd kernelshark <pre><code>sudo trace-cmd convert -i trace.dat -o trace_v6.dat --file-version 6 --compression none\nsudo rm trace.dat\nmv trace_v6.dat trace.dat\nsudo trace-cmd convert -i trace-Salamander4.dat -o trace_v6.dat --file-version 6 --compression none\nsudo rm trace-Salamander4.dat\nmv trace_v6.dat trace-Salamander4.dat\nkernelshark\n</code></pre></p>"},{"location":"sigmatek/trace-cmd/analysis/test/kvm_exit_results/","title":"Kvm exit results","text":""},{"location":"sigmatek/trace-cmd/analysis/test/kvm_exit_results/#kvm_exit","title":"kvm_exit","text":"Exit Reason Description Frequency APIC_WRITE Triggered when the guest writes to its Advanced Programmable Interrupt Controller (APIC). 60178 times EXTERNAL_INTERRUPT Triggered when an external hardware interrupt occurs, usually caused by hardware devices signaling the host\u2019s CPU. 909 times HLT Triggered when the guest executes the HLT instruction, halting the CPU until the next external interrupt is fired. 53640 times EPT_MISCONFIG Triggered due to a misconfiguration in the Extended Page Tables (EPT), a memory management feature in modern CPUs. 3839 times PREEMPTION_TIMER Triggered when the preemption timer of the host expires, related to the host\u2019s scheduling of the guest. 3239 times PAUSE_INSTRUCTION Triggered when the PAUSE instruction is executed, used in spinlock loops to improve performance and reduce power consumption. 20 times EPT_VIOLATION Triggered when a guest access to a page would result in a violation of the EPT permission settings. 48 times IO_INSTRUCTION Triggered when the guest executes an I/O instruction, such as IN or OUT. 565 times EOI_INDUCED Triggered when an end-of-interrupt (EOI) signal is sent to the APIC. 78 times MSR_READ Triggered when the guest reads from a Model-Specific Register (MSR). 2 times CPUID Triggered when the guest executes the CPUID instruction, used to identify the processor. 10 times"},{"location":"sigmatek/xenomai/clocktest/","title":"clocktest","text":""},{"location":"sigmatek/xenomai/clocktest/#name","title":"Name","text":"<p>clocktest - Xenomai Clock Test</p>"},{"location":"sigmatek/xenomai/clocktest/#synopsis","title":"Synopsis","text":"<p>clocktest [OPTIONS]</p>"},{"location":"sigmatek/xenomai/clocktest/#description","title":"Description","text":"<p>clocktest is part of the Xenomai test suite and tests the Clock. For each CPU, it repeatedly prints a time offset (compared to the reference gettimeofday()), a drift value, the number of warps and the maximum warp in microseconds.</p> <p>For this program to work, you need to run a suitable Xenomai enabled kernel with the respective module (xeno_posix).</p>"},{"location":"sigmatek/xenomai/clocktest/#options","title":"Options","text":"Option Description -C  Clock to be tested, default=0 (CLOCK_REALTIME=0, CLOCK_MONOTONIC=1, CLOCK_HOST_REALTIME=42) -T  Default=0 (Never stop, ^C to end) -D Print extra diagnostics for CLOCK_HOST_REALTIME <p>clocktest was written by Jan Kiszka. This man page was written by Roland Stigge.</p>"},{"location":"sigmatek/xenomai/clocktest/#documentation","title":"Documentation","text":"<p>clocktest - Xenomai Clock Test </p>"},{"location":"sigmatek/xenomai/clocktest/#map","title":"Map","text":"Output Description CPU The CPU on which the test was run ToD offset [us] The offset of the Time of Day (ToD) clock in microseconds (us) ToD drift [us/s] The drift of the ToD clock in microseconds per second (us/s) warps The number of \"warps\" or significant jumps in system time max delta [us] The maximum observed difference (delta) in the time, in microseconds (us)"},{"location":"sigmatek/xenomai/clocktest/#output-clocktest-d-t-60","title":"Output: <code>clocktest -D -T 60</code>","text":"<p>root@sigmatek-core2:/usr/sbin# clocktest -D -T 60 == Testing built-in CLOCK_REALTIME (0) | CPU | ToD offset [us] | ToD drift [us/s] | Warps | Max Delta [us] | |-----|------------------|-------------------|-------|-----------------| |   0 |              0.7 |            -0.005 |     0 |             0.0 |</p>"},{"location":"sigmatek/xenomai/clocktest/#explanation","title":"Explanation","text":"<p>The test was run on CPU 0, the ToD offset was 0.7 microseconds, the ToD drift was -0.005 microseconds per second, there were no warps, and the maximum delta was 0.0 microseconds.</p>"},{"location":"sigmatek/xenomai/latency/","title":"latency","text":""},{"location":"sigmatek/xenomai/latency/#name","title":"Name","text":"<p>latency - Xenomai timer latency benchmark</p>"},{"location":"sigmatek/xenomai/latency/#synopsis","title":"Synopsis","text":"<p>latency [ options ]</p>"},{"location":"sigmatek/xenomai/latency/#description","title":"Description","text":"<p>latency is part of the Xenomai test suite. It is a timer latency benchmark program. The system must run a suitable Xenomai enabled kernel with the respective module (xeno_timerbench).</p>"},{"location":"sigmatek/xenomai/latency/#documentation","title":"Documentation","text":"<p>latency - Xenomai timer latency benchmark </p>"},{"location":"sigmatek/xenomai/latency/#options","title":"Options","text":"Option Description -h Print histograms of min, avg, max latencies -g  Dump histogram to  in a format easily readable with gnuplot. -s Print statistics of min, avg, max latencies -H  Default = 200, increase if your last bucket is full -B  Default = 1000ns, decrease for more resolution -p  Sampling period -l  Default=21, 0 to suppress headers -T  Default=0, so ^C to end -q Suppresses RTD, RTH lines if -T is used -D  Number of testing device, default=0 -t  0=user task (default), 1=kernel task, 2=timer IRQ -f Freeze trace for each new max latency -c  Pin measuring task down to given CPU -P  Task priority (test mode 0 and 1 only) -b Break upon mode switch <p>latency was written by Philippe Gerum. This man page was written by Roland Stigge.</p>"},{"location":"sigmatek/xenomai/latency/#map","title":"Map","text":"Output Description RTT Real-Time Tick, shows the time at which the measurement was taken. RTH Real-Time Histogram, shows the distribution of latency values. RTD Real-Time Data, shows the actual latency measurements. RTS Real-Time Statistics, shows the overall statistics after the test is complete. Output Description lat min The minimum latency measured. lat avg The average latency measured. lat max The maximum latency measured. overrun The number of timer overruns (situations where the next period has already arrived before the current period is done). msw The number of mode switches (switches between primary and secondary mode). lat best The best (lowest) latency measured so far. lat worst The worst (highest) latency measured so far."},{"location":"sigmatek/xenomai/latency/#output-latency-t-60","title":"Output: <code>latency -T 60</code>","text":"<p>root@sigmatek-core2:/usr/sbin# latency -T 60 == Sampling period: 100 us == Test mode: periodic user-mode task == All results in microseconds warming up... |RTT|  00:00:01  (periodic user-mode task, 100 us period, priority 99)||||||| |RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst| |---|-----------|-----------|-----------|--------|------|-----------|-----------| |RTD|      1.681|      3.422|     90.929|       0|     0|      1.681|     90.929| |RTD|      2.223|      3.203|     20.304|       0|     0|      1.681|     90.929| |RTD|      2.317|      3.364|     23.173|       0|     0|      1.681|     90.929| |RTD|      1.821|      3.333|    169.908|       1|     0|      1.681|    169.908| |RTD|      1.644|      3.092|     23.484|       1|     0|      1.644|    169.908| |RTD|      1.770|      3.182|    169.126|       2|     0|      1.644|    169.908| |RTD|      1.807|      3.241|    158.419|       4|     0|      1.644|    169.908| |RTD|      1.908|      3.248|    229.944|      11|     0|      1.644|    229.944| |RTD|      2.196|      3.239|    135.810|      11|     0|      1.644|    229.944| |RTD|      1.782|      3.222|    186.953|      13|     0|      1.644|    229.944| |RTD|      2.107|      3.147|    146.794|      14|     0|      1.644|    229.944| |RTD|      1.702|      3.136|     21.972|      14|     0|      1.644|    229.944| |RTD|      1.663|      3.237|    107.455|      15|     0|      1.644|    229.944| |RTD|      1.579|      3.248|    171.420|      17|     0|      1.579|    229.944| |RTD|      1.973|      3.278|     32.868|      17|     0|      1.579|    229.944| |RTD|      2.494|      3.394|    375.502|      26|     0|      1.579|    375.502| |RTD|      2.009|      3.287|     82.024|      26|     0|      1.579|    375.502| |RTD|      2.066|      3.250|    260.630|      28|     0|      1.579|    375.502| |RTD|      2.155|      3.211|    234.989|      31|     0|      1.579|    375.502| |RTD|      1.850|      3.938|    220.307|      36|     0|      1.579|    375.502| |RTD|      1.807|      3.236|    221.417|      39|     0|      1.579|    375.502| |RTT|  00:00:22  (periodic user-mode task, 100 us period, priority 99)||||||| |RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst| |RTD|      2.542|      3.196|     26.265|      39|     0|      1.579|    375.502| |RTD|      1.865|      3.158|    194.683|      40|     0|      1.579|    375.502| |RTD|      1.641|      3.137|     23.661|      40|     0|      1.579|    375.502| |RTD|      1.574|      3.260|     23.995|      40|     0|      1.574|    375.502| |RTD|      2.029|      3.185|     87.024|      40|     0|      1.574|    375.502| |RTD|      2.534|      3.130|    106.408|      41|     0|      1.574|    375.502| |RTD|      1.960|      3.149|     28.831|      41|     0|      1.574|    375.502| |RTD|      1.755|      3.435|     30.206|      41|     0|      1.574|    375.502| |RTD|      2.683|      4.089|    197.988|      42|     0|      1.574|    375.502| |RTD|      1.747|      3.323|    179.669|      44|     0|      1.574|    375.502| |RTD|      2.077|      3.183|     69.423|      44|     0|      1.574|    375.502| |RTD|      1.803|      3.114|     62.567|      44|     0|      1.574|    375.502| |RTD|      1.799|      3.278|     76.858|      44|     0|      1.574|    375.502| |RTD|      1.928|      3.124|     21.726|      44|     0|      1.574|    375.502| |RTD|      2.025|      3.159|     48.561|      44|     0|      1.574|    375.502| |RTD|      2.037|      3.153|     23.673|      44|     0|      1.574|    375.502| |RTD|      1.593|      3.140|     25.701|      44|     0|      1.574|    375.502| |RTD|      1.846|      3.340|    110.855|      45|     0|      1.574|    375.502| |RTD|      2.818|      4.665|    223.871|      50|     0|      1.574|    375.502| |RTD|      2.209|      3.514|    110.917|      51|     0|      1.574|    375.502| |RTD|      1.848|      3.599|    127.239|      52|     0|      1.574|    375.502| |RTT|  00:00:43  (periodic user-mode task, 100 us period, priority 99)||||||| |RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst| |RTD|      2.443|      3.525|     84.411|      52|     0|      1.574|    375.502| |RTD|      2.028|      3.201|    257.087|      55|     0|      1.574|    375.502| |RTD|      1.861|      3.137|    240.561|      58|     0|      1.574|    375.502| |RTD|      1.755|      3.186|    167.924|      59|     0|      1.574|    375.502| |RTD|      1.731|      3.264|    180.382|      62|     0|      1.574|    375.502| |RTD|      1.706|      3.206|    107.250|      63|     0|      1.574|    375.502| |RTD|      1.722|      3.171|     24.803|      63|     0|      1.574|    375.502| |RTD|      1.719|      3.191|    135.390|      65|     0|      1.574|    375.502| |RTD|      1.913|      3.203|    166.808|      66|     0|      1.574|    375.502| |RTD|      1.630|      3.146|     19.869|      66|     0|      1.574|    375.502| |RTD|      2.341|      3.145|     19.776|      66|     0|      1.574|    375.502| |RTD|      2.023|      3.176|     86.029|      66|     0|      1.574|    375.502| |RTD|      1.830|      3.167|     22.296|      66|     0|      1.574|    375.502| |RTD|      1.732|      3.308|    174.504|      70|     0|      1.574|    375.502| |RTD|      1.973|      3.482|    204.055|      79|     0|      1.574|    375.502| |RTD|      1.888|      3.256|    207.476|      80|     0|      1.574|    375.502| |RTD|      1.838|      3.142|    160.382|      81|     0|      1.574|    375.502| |---|-----------|-----------|-----------|--------|------|------------------------- |RTS|      1.574|      3.290|    375.502|      81|     0|    00:01:00/00:01:00||</p>"},{"location":"sigmatek/xenomai/latency/#explanation","title":"Explanation","text":"<p>The test ran for 60 seconds (-T 60). The minimum latency (lat min) was 1.574 microseconds, the average latency (lat avg) was 3.290 microseconds, and the maximum latency (lat max) was 375.502 microseconds. There were 81 overruns and 0 mode switches.</p>"},{"location":"sigmatek/xenomai/switchtest/","title":"switchtest","text":""},{"location":"sigmatek/xenomai/switchtest/#name","title":"Name","text":"<p>switchtest - Xenomai context switch test</p>"},{"location":"sigmatek/xenomai/switchtest/#synopsis","title":"Synopsis","text":"<p>switchtest [options] threadspec threadspec...</p>"},{"location":"sigmatek/xenomai/switchtest/#description","title":"Description","text":"<p>switchtest is part of Xenomai. It can be used to test thread context switches. switchtest creates threads of various types and attempts to switch context between these threads, printing the count of context switches every second. A suitable Xenomai enabled kernel with the respective module (xeno_posix) must be installed.</p>"},{"location":"sigmatek/xenomai/switchtest/#documentation","title":"Documentation","text":"<p>switchtest - Xenomai context switch test </p>"},{"location":"sigmatek/xenomai/switchtest/#options","title":"Options","text":"<p>Each threadspec specifies the characteristics of a thread to be created:</p> <p>threadspec = (rtk|rtup|rtus|rtuo)(_fp|_ufpp|_ufps)*[0-9]*</p> Thread Specification Description rtk Kernel-space real-time thread rtup User-space real-time thread running in primary mode rtus User-space real-time thread running in secondary mode rtuo User-space real-time thread oscillating between modes _fp Thread with XNFPU bit armed (valid for rtk only) _ufpp Thread using FPU in primary mode (invalid for rtus) _ufps Thread using FPU in secondary mode (invalid for rtk, rtup) [0-9] CPU ID where the thread will run (0 if unspecified) <p>Passing no threadspec is equivalent to running:</p> <p>switchtest rtkN rtkN rtk_fpN rtk_fpN rtk_fp_ufppN rtk_fp_ufppN rtupN rtupN rtup_ufppN rtup_ufppN rtusN rtusN rtus_ufpsN rtus_ufpsN rtuoN rtuoN rtuo_ufppN rtuo_ufppN rtuo_ufpsN rtuo_ufpsN rtuo_ufpp_ufpsN rtuo_ufpp_ufpsN</p> <p>with N=1,...,nr_cpus, i.e. occurrences of all the arguments for each CPU</p> <p>Passing only the --nofpu or -n argument is equivalent to running:</p> <p>switchtest rtkN rtkN rtupN rtupN rtusN rtusN rtuoN rtuoN</p> <p>similar to the above.</p> <p>switchtest accepts the following options:</p> Option Description --help, -h Print usage information and exit --lines , -l  Print headers every  lines --quiet, -q Prevent the program from printing context switch count every second --timeout , -T  Limit the test duration to  seconds --nofpu, -n Disable any use of FPU instructions <p>switchtest was written by Philippe Gerum and Gilles Chanteperdrix. This man page was written by Roland Stigge.</p>"},{"location":"sigmatek/xenomai/switchtest/#map","title":"Map","text":"Output Description RTT Real-Time Tick, shows the time at which the measurement was taken. RTH Real-Time Histogram, shows the distribution of latency values. RTD Real-Time Data, shows the actual latency measurements. RTS Real-Time Statistics, shows the overall statistics after the test is complete."},{"location":"sigmatek/xenomai/switchtest/#output-switchtest-t-60","title":"Output: <code>switchtest -T 60</code>","text":""},{"location":"sigmatek/xenomai/xenomai-system-tools/","title":"Xenomai system tools","text":""},{"location":"sigmatek/xenomai/xenomai-system-tools/#xenomai-system-tools","title":"Xenomai System Tools","text":"<p>In traditional IRQ handling, the processor suspends its current activities to service an interrupt, whereas Xenomai's IRQ handling uses an interrupt pipeline mechanism, allowing for simultaneous fetching and preparation of another interrupt while one is being processed, improving performance and reducing latency.  </p> <p>What sets Xenomai4 apart from its predecessor, Xenomai3, is the complete redesign of the high-priority execution stage. This was done for portability and maintainability: I-pipe\u2014the second iteration of the initial Adeos interrupt pipeline\u2014has been fully replaced by Dovetail.  </p> <p>Xenomai System Tools </p> <p>\u2705 Supported by Salamander4</p> Command Description latency Xenomai timer latency benchmark clocktest Xenomai Clock Test switchtest Xenomai context switch test dohell Generate load, in parallel of the latency test rtcanconfig Xenomai tool for configuring the CAN controller rtcansend Xenomai tool for sending CAN messages rtcanrecv Xenomai tool for receiving CAN messages xeno Wrapper for Xenomai executables xeno-config Display Xenomai libraries configuration xeno-test Run latency test under load <p>\u274c Not supported by Salamander4</p> Command Description cyclictest Xenomai high resolution timer test switchbench Xenomai latency test for task switches irqbench Xenomai IRQ benchmark, host control irqloop Xenomai IRQ benchmark, target program klatency Xenomai kernel latency test"},{"location":"sigmatek/xenomai/xenomai-system-tools/#helping-videos","title":"Helping videos","text":"<p>Minimize Jitter: Linux vs. Xenomai </p>"},{"location":"sigmatek/xenomai/no_taskset/latency_no_taskset_10min_gnoplot/","title":"gnuplot no taskset","text":"<pre><code># Calculate statistics\nstats 'latency_no_taskset_10min.txt' using 2 nooutput\n\n# Define labels for the statistics\nset label 1 sprintf(\"Minimum: %.2f\", STATS_min) at graph 0.02, graph 0.9\nset label 2 sprintf(\"Maximum: %.2f\", STATS_max) at graph 0.02, graph 0.85\nset label 3 sprintf(\"Average: %.2f\", STATS_mean) at graph 0.02, graph 0.8\nset label 4 sprintf(\"Standard Deviation: %.2f\", STATS_stddev) at graph 0.02, graph 0.75\n\n# Plot the data\nplot 'latency_no_taskset_10min.txt' using 1:2 with linespoints title 'Latency Histogram'\n</code></pre>"},{"location":"sigmatek/xenomai/no_taskset/latency_no_taskset_10min_log/","title":"Latency no taskset","text":"<pre><code>root@sigmatek-core2:~# latency -h -s -T 600 -g latency_no_taskset_10min.txt\n== Sampling period: 100 us\n== Test mode: periodic user-mode task\n== All results in microseconds\nwarming up...\nRTT|  00:00:01  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      0.984|      2.261|     46.058|       0|     0|      0.984|     46.058\nRTD|      0.605|      2.140|     45.247|       0|     0|      0.605|     46.058\nRTD|      0.611|      2.076|     25.008|       0|     0|      0.605|     46.058\nRTD|      0.962|      2.316|    230.128|       5|     0|      0.605|    230.128\nRTD|      0.653|      2.174|     44.259|       5|     0|      0.605|    230.128\nRTD|      1.608|      2.186|     44.513|       5|     0|      0.605|    230.128\nRTD|      0.965|      2.284|     91.711|       5|     0|      0.605|    230.128\nRTD|      1.369|      2.220|     22.744|       5|     0|      0.605|    230.128\nRTD|      0.744|      2.163|     16.245|       5|     0|      0.605|    230.128\nRTD|      0.983|      2.406|    185.150|       7|     0|      0.605|    230.128\nRTD|      0.827|      2.193|     36.711|       7|     0|      0.605|    230.128\nRTD|      0.495|      2.071|     14.202|       7|     0|      0.495|    230.128\nRTD|      1.001|      2.123|    130.885|       8|     0|      0.495|    230.128\nRTD|      0.532|      2.158|     48.036|       8|     0|      0.495|    230.128\nRTD|      0.780|      2.288|    246.716|      15|     0|      0.495|    246.716\nRTD|      0.679|      2.217|    169.095|      19|     0|      0.495|    246.716\nRTD|      0.682|      2.463|    219.466|      25|     0|      0.495|    246.716\nRTD|      0.983|      2.412|    231.073|      32|     0|      0.495|    246.716\nRTD|      1.303|      2.176|     24.619|      32|     0|      0.495|    246.716\nRTD|      1.523|      2.240|    177.433|      34|     0|      0.495|    246.716\nRTD|      0.573|      2.254|    160.088|      36|     0|      0.495|    246.716\nRTT|  00:00:22  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      0.863|      2.149|     97.343|      36|     0|      0.495|    246.716\nRTD|      0.961|      2.411|     64.062|      36|     0|      0.495|    246.716\nRTD|      1.239|      3.462|    230.267|      46|     0|      0.495|    246.716\nRTD|      1.727|      2.708|     78.874|      46|     0|      0.495|    246.716\nRTD|      0.672|      2.301|    252.809|      49|     0|      0.495|    252.809\nRTD|      0.884|      2.216|    411.265|      55|     0|      0.495|    411.265\nRTD|      0.895|      2.161|     22.515|      55|     0|      0.495|    411.265\nRTD|      0.742|      2.206|     27.148|      55|     0|      0.495|    411.265\nRTD|      1.030|      2.208|    124.784|      56|     0|      0.495|    411.265\nRTD|      0.945|      2.405|    586.676|      66|     0|      0.495|    586.676\nRTD|      1.296|      2.451|    298.173|      74|     0|      0.495|    586.676\nRTD|      0.574|      2.088|    230.910|      76|     0|      0.495|    586.676\nRTD|      0.668|      2.130|     24.141|      76|     0|      0.495|    586.676\nRTD|      0.825|      2.258|    154.979|      77|     0|      0.495|    586.676\nRTD|      0.688|      2.704|    173.566|      78|     0|      0.495|    586.676\nRTD|      1.546|      2.211|     33.357|      78|     0|      0.495|    586.676\nRTD|      0.670|      2.469|    222.388|      83|     0|      0.495|    586.676\nRTD|      0.659|      2.336|    151.711|      84|     0|      0.495|    586.676\nRTD|      1.689|      2.265|     38.451|      84|     0|      0.495|    586.676\nRTD|      0.765|      2.345|     67.466|      84|     0|      0.495|    586.676\nRTD|      0.983|      2.407|    148.420|      85|     0|      0.495|    586.676\nRTT|  00:00:43  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      1.697|      2.389|    404.945|      91|     0|      0.495|    586.676\nRTD|      0.761|      2.465|    343.690|     103|     0|      0.495|    586.676\nRTD|      1.092|      2.481|    184.156|     105|     0|      0.495|    586.676\nRTD|      0.887|      2.470|    156.867|     107|     0|      0.495|    586.676\nRTD|      0.753|      2.384|    160.473|     108|     0|      0.495|    586.676\nRTD|      0.643|      2.447|    111.409|     109|     0|      0.495|    586.676\nRTD|      0.767|      2.520|    209.835|     112|     0|      0.495|    586.676\nRTD|      0.763|      2.394|     46.755|     112|     0|      0.495|    586.676\nRTD|      0.870|      2.372|     41.262|     112|     0|      0.495|    586.676\nRTD|      0.882|      2.743|    215.765|     119|     0|      0.495|    586.676\nRTD|      1.125|      2.433|    453.147|     124|     0|      0.495|    586.676\nRTD|      0.725|      2.405|    170.542|     127|     0|      0.495|    586.676\nRTD|      1.178|      2.435|    172.430|     128|     0|      0.495|    586.676\nRTD|      1.352|      2.471|     30.891|     128|     0|      0.495|    586.676\nRTD|      1.023|      2.345|     94.188|     128|     0|      0.495|    586.676\nRTD|      0.659|      2.282|    241.936|     132|     0|      0.495|    586.676\nRTD|      0.762|      2.156|     28.899|     132|     0|      0.495|    586.676\nRTD|      0.605|      2.460|    162.442|     134|     0|      0.495|    586.676\nRTD|      0.941|      2.327|    210.370|     138|     0|      0.495|    586.676\nRTD|      0.770|      2.187|    151.916|     139|     0|      0.495|    586.676\nRTD|      0.764|      2.296|    148.249|     141|     0|      0.495|    586.676\nRTT|  00:01:04  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      0.951|      2.247|    116.436|     143|     0|      0.495|    586.676\nRTD|      0.618|      2.301|    156.545|     147|     0|      0.495|    586.676\nRTD|      0.939|      2.318|    169.587|     151|     0|      0.495|    586.676\nRTD|      0.992|      2.413|    207.000|     155|     0|      0.495|    586.676\nRTD|      0.747|      2.259|    341.089|     161|     0|      0.495|    586.676\nRTD|      0.685|      2.157|      9.360|     161|     0|      0.495|    586.676\nRTD|      0.983|      2.240|     19.122|     161|     0|      0.495|    586.676\nRTD|      0.561|      2.255|    111.249|     161|     0|      0.495|    586.676\nRTD|      0.576|      2.200|    241.644|     168|     0|      0.495|    586.676\nRTD|      0.998|      2.112|     16.414|     168|     0|      0.495|    586.676\nRTD|      0.615|      2.231|    169.308|     168|     0|      0.495|    586.676\nRTD|      0.796|      2.203|     30.421|     168|     0|      0.495|    586.676\nRTD|      0.711|      2.229|    154.489|     170|     0|      0.495|    586.676\nRTD|      0.950|      2.204|     25.697|     170|     0|      0.495|    586.676\nRTD|      1.311|      2.075|     21.663|     170|     0|      0.495|    586.676\nRTD|      0.604|      2.057|     19.417|     170|     0|      0.495|    586.676\nRTD|      1.185|      2.540|   4064.225|     210|     0|      0.495|   4064.225\nRTD|      0.853|      2.108|     16.816|     210|     0|      0.495|   4064.225\nRTD|      0.882|      2.065|     24.010|     210|     0|      0.495|   4064.225\nRTD|      0.764|      2.094|    144.224|     211|     0|      0.495|   4064.225\nRTD|      0.760|      2.188|    201.855|     212|     0|      0.495|   4064.225\nRTT|  00:01:25  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      0.911|      2.098|    148.832|     213|     0|      0.495|   4064.225\nRTD|      0.577|      2.033|     30.122|     213|     0|      0.495|   4064.225\nRTD|      1.221|      2.287|    156.258|     217|     0|      0.495|   4064.225\nRTD|      0.924|      2.310|    496.579|     221|     0|      0.495|   4064.225\nRTD|      0.871|      2.331|    136.403|     222|     0|      0.495|   4064.225\nRTD|      0.775|      2.094|     19.893|     222|     0|      0.495|   4064.225\nRTD|      0.870|      2.144|     14.042|     222|     0|      0.495|   4064.225\nRTD|      0.882|      2.157|    215.474|     224|     0|      0.495|   4064.225\nRTD|      0.812|      2.231|    211.399|     226|     0|      0.495|   4064.225\nRTD|      0.729|      2.161|     30.932|     226|     0|      0.495|   4064.225\nRTD|      1.110|      2.091|     21.589|     226|     0|      0.495|   4064.225\nRTD|      0.624|      2.135|    182.871|     228|     0|      0.495|   4064.225\nRTD|      1.018|      2.165|    168.529|     230|     0|      0.495|   4064.225\nRTD|      0.956|      2.137|     26.291|     230|     0|      0.495|   4064.225\nRTD|      0.834|      2.071|     23.513|     230|     0|      0.495|   4064.225\nRTD|      0.852|      2.060|     21.540|     230|     0|      0.495|   4064.225\nRTD|      0.862|      2.141|     26.199|     230|     0|      0.495|   4064.225\nRTD|      1.354|      2.070|     15.698|     230|     0|      0.495|   4064.225\nRTD|      0.858|      2.051|     12.213|     230|     0|      0.495|   4064.225\nRTD|      0.776|      2.338|   1213.987|     243|     0|      0.495|   4064.225\nRTD|      0.693|      2.232|     78.669|     243|     0|      0.495|   4064.225\nRTT|  00:01:46  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      1.475|      2.218|    183.154|     245|     0|      0.495|   4064.225\nRTD|      0.643|      2.213|    242.775|     249|     0|      0.495|   4064.225\nRTD|      1.335|      2.310|    175.638|     252|     0|      0.495|   4064.225\nRTD|      1.386|      2.241|     69.769|     252|     0|      0.495|   4064.225\nRTD|      0.797|      2.211|    102.394|     252|     0|      0.495|   4064.225\nRTD|      0.629|      2.221|     83.967|     252|     0|      0.495|   4064.225\nRTD|      0.727|      2.329|     99.656|     252|     0|      0.495|   4064.225\nRTD|      0.854|      2.189|     24.573|     252|     0|      0.495|   4064.225\nRTD|      0.738|      2.343|    218.177|     261|     0|      0.495|   4064.225\nRTD|      1.633|      2.392|    108.713|     263|     0|      0.495|   4064.225\nRTD|      0.859|      2.220|    127.000|     266|     0|      0.495|   4064.225\nRTD|      0.680|      2.174|     13.701|     266|     0|      0.495|   4064.225\nRTD|      1.012|      2.331|    231.670|     271|     0|      0.495|   4064.225\nRTD|      0.952|      2.221|    190.132|     274|     0|      0.495|   4064.225\nRTD|      0.863|      2.212|    235.042|     276|     0|      0.495|   4064.225\nRTD|      0.603|      2.178|     96.299|     276|     0|      0.495|   4064.225\nRTD|      0.674|      2.294|    173.375|     277|     0|      0.495|   4064.225\nRTD|      1.038|      2.218|    175.528|     279|     0|      0.495|   4064.225\nRTD|      0.790|      2.168|    133.886|     280|     0|      0.495|   4064.225\nRTD|      0.909|      2.182|     21.396|     280|     0|      0.495|   4064.225\nRTD|      0.800|      2.215|    129.259|     281|     0|      0.495|   4064.225\nRTT|  00:02:07  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      1.432|      2.160|     12.632|     281|     0|      0.495|   4064.225\nRTD|      0.574|      2.294|    131.769|     282|     0|      0.495|   4064.225\nRTD|      1.135|      2.204|     27.551|     282|     0|      0.495|   4064.225\nRTD|      0.798|      2.171|    175.399|     285|     0|      0.495|   4064.225\nRTD|      1.280|      2.232|    208.523|     287|     0|      0.495|   4064.225\nRTD|      0.862|      2.198|    154.972|     288|     0|      0.495|   4064.225\nRTD|      0.687|      2.310|    221.602|     291|     0|      0.495|   4064.225\nRTD|      0.604|      2.187|    180.908|     292|     0|      0.495|   4064.225\nRTD|      1.635|      2.326|    223.067|     297|     0|      0.495|   4064.225\nRTD|      0.723|      2.214|    111.292|     298|     0|      0.495|   4064.225\nRTD|      0.659|      2.214|    142.352|     299|     0|      0.495|   4064.225\nRTD|      0.857|      2.216|     19.898|     299|     0|      0.495|   4064.225\nRTD|      1.137|      2.278|     74.817|     299|     0|      0.495|   4064.225\nRTD|      0.730|      2.386|    161.187|     300|     0|      0.495|   4064.225\nRTD|      0.553|      2.178|    311.376|     306|     0|      0.495|   4064.225\nRTD|      0.649|      2.171|     17.038|     306|     0|      0.495|   4064.225\nRTD|      0.773|      2.128|     27.474|     306|     0|      0.495|   4064.225\nRTD|      0.612|      2.122|    110.750|     307|     0|      0.495|   4064.225\nRTD|      0.945|      2.471|    167.509|     309|     0|      0.495|   4064.225\nRTD|      0.638|      2.199|     12.404|     309|     0|      0.495|   4064.225\nRTD|      0.955|      2.232|     90.536|     309|     0|      0.495|   4064.225\nRTT|  00:02:28  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      0.767|      2.257|    161.824|     310|     0|      0.495|   4064.225\nRTD|      0.868|      2.295|    136.528|     311|     0|      0.495|   4064.225\nRTD|      1.212|      2.199|     27.410|     311|     0|      0.495|   4064.225\nRTD|      1.158|      2.189|     15.690|     311|     0|      0.495|   4064.225\nRTD|      0.948|      2.237|     58.505|     311|     0|      0.495|   4064.225\nRTD|      0.772|      2.385|    256.667|     321|     0|      0.495|   4064.225\nRTD|      0.693|      2.198|    244.765|     324|     0|      0.495|   4064.225\nRTD|      0.640|      2.218|    140.802|     325|     0|      0.495|   4064.225\nRTD|      0.857|      2.340|    205.465|     329|     0|      0.495|   4064.225\nRTD|      1.349|      2.207|     74.799|     329|     0|      0.495|   4064.225\nRTD|      1.161|      2.062|     26.125|     329|     0|      0.495|   4064.225\nRTD|      1.032|      2.224|    215.514|     332|     0|      0.495|   4064.225\nRTD|      0.751|      2.171|     26.843|     332|     0|      0.495|   4064.225\nRTD|      0.766|      2.056|     19.168|     332|     0|      0.495|   4064.225\nRTD|      0.644|      2.092|     15.723|     332|     0|      0.495|   4064.225\nRTD|      1.462|      2.215|    111.505|     332|     0|      0.495|   4064.225\nRTD|      0.641|      2.318|    185.790|     336|     0|      0.495|   4064.225\nRTD|      0.824|      2.634|    239.944|     343|     0|      0.495|   4064.225\nRTD|      0.729|      2.206|     47.677|     343|     0|      0.495|   4064.225\nRTD|      0.854|      2.323|    418.785|     349|     0|      0.495|   4064.225\nRTD|      1.333|      2.073|     15.690|     349|     0|      0.495|   4064.225\nRTT|  00:02:49  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      0.675|      2.213|    177.398|     351|     0|      0.495|   4064.225\nRTD|      0.602|      2.816|    213.361|     355|     0|      0.495|   4064.225\nRTD|      1.366|      2.219|    162.398|     356|     0|      0.495|   4064.225\nRTD|      1.544|      2.219|     43.181|     356|     0|      0.495|   4064.225\nRTD|      0.736|      2.283|    108.263|     357|     0|      0.495|   4064.225\nRTD|      0.795|      2.247|    128.250|     358|     0|      0.495|   4064.225\nRTD|      0.646|      2.207|     23.710|     358|     0|      0.495|   4064.225\nRTD|      0.875|      2.313|    189.526|     360|     0|      0.495|   4064.225\nRTD|      1.543|      2.321|    182.737|     362|     0|      0.495|   4064.225\nRTD|      0.597|      2.314|    163.860|     366|     0|      0.495|   4064.225\nRTD|      0.714|      2.242|    217.369|     371|     0|      0.495|   4064.225\nRTD|      1.430|      2.251|     97.451|     371|     0|      0.495|   4064.225\nRTD|      0.726|      2.344|    236.625|     375|     0|      0.495|   4064.225\nRTD|      1.537|      2.270|    147.896|     379|     0|      0.495|   4064.225\nRTD|      0.813|      2.247|    138.374|     380|     0|      0.495|   4064.225\nRTD|      1.480|      2.236|    228.625|     382|     0|      0.495|   4064.225\nRTD|      0.720|      2.230|    132.462|     383|     0|      0.495|   4064.225\nRTD|      0.784|      2.442|    176.077|     386|     0|      0.495|   4064.225\nRTD|      0.828|      2.322|    130.587|     388|     0|      0.495|   4064.225\nRTD|      0.771|      2.339|    190.408|     391|     0|      0.495|   4064.225\nRTD|      0.922|      2.583|   1017.088|     406|     0|      0.495|   4064.225\nRTT|  00:03:10  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      1.734|      2.465|    160.770|     410|     0|      0.495|   4064.225\nRTD|      1.029|      2.292|     67.554|     410|     0|      0.495|   4064.225\nRTD|      0.785|      2.160|     27.102|     410|     0|      0.495|   4064.225\nRTD|      0.536|      2.199|    129.908|     411|     0|      0.495|   4064.225\nRTD|      0.703|      2.459|    206.303|     414|     0|      0.495|   4064.225\nRTD|      1.001|      2.238|    270.965|     416|     0|      0.495|   4064.225\nRTD|      1.035|      2.116|    109.238|     417|     0|      0.495|   4064.225\nRTD|      0.778|      3.043|    139.922|     420|     0|      0.495|   4064.225\nRTD|      0.738|      2.279|     34.335|     420|     0|      0.495|   4064.225\nRTD|      0.686|      2.151|     30.190|     420|     0|      0.495|   4064.225\nRTD|      0.804|      2.109|     24.355|     420|     0|      0.495|   4064.225\nRTD|      1.544|      2.206|     23.302|     420|     0|      0.495|   4064.225\nRTD|      1.011|      2.178|     27.776|     420|     0|      0.495|   4064.225\nRTD|      0.647|      2.097|     24.547|     420|     0|      0.495|   4064.225\nRTD|      0.770|      2.330|    188.686|     423|     0|      0.495|   4064.225\nRTD|      1.555|      2.225|    173.485|     424|     0|      0.495|   4064.225\nRTD|      1.558|      2.178|    156.228|     425|     0|      0.495|   4064.225\nRTD|      0.616|      2.174|     16.056|     425|     0|      0.495|   4064.225\nRTD|      1.066|      2.232|    128.566|     426|     0|      0.495|   4064.225\nRTD|      0.703|      2.232|     14.259|     426|     0|      0.495|   4064.225\nRTD|      0.946|      2.244|    265.675|     428|     0|      0.495|   4064.225\nRTT|  00:03:31  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      1.379|      2.207|    269.690|     431|     0|      0.495|   4064.225\nRTD|      0.807|      2.233|    203.610|     433|     0|      0.495|   4064.225\nRTD|      0.735|      2.173|    181.352|     436|     0|      0.495|   4064.225\nRTD|      1.511|      2.117|     25.724|     436|     0|      0.495|   4064.225\nRTD|      0.770|      2.238|     29.783|     436|     0|      0.495|   4064.225\nRTD|      1.431|      2.094|     15.547|     436|     0|      0.495|   4064.225\nRTD|      0.612|      2.142|    150.926|     437|     0|      0.495|   4064.225\nRTD|      0.822|      2.279|    173.356|     438|     0|      0.495|   4064.225\nRTD|      0.761|      2.144|     13.783|     438|     0|      0.495|   4064.225\nRTD|      1.208|      2.159|    178.982|     440|     0|      0.495|   4064.225\nRTD|      0.989|      2.249|     42.498|     440|     0|      0.495|   4064.225\nRTD|      0.900|      2.311|    177.951|     443|     0|      0.495|   4064.225\nRTD|      0.786|      2.214|    132.049|     444|     0|      0.495|   4064.225\nRTD|      1.708|      2.297|    177.935|     447|     0|      0.495|   4064.225\nRTD|      0.849|      2.270|     24.525|     447|     0|      0.495|   4064.225\nRTD|      1.100|      2.265|     32.250|     447|     0|      0.495|   4064.225\nRTD|      0.699|      2.222|    124.116|     448|     0|      0.495|   4064.225\nRTD|      0.431|      2.299|    147.811|     450|     0|      0.431|   4064.225\nRTD|      1.073|      2.355|     99.098|     450|     0|      0.431|   4064.225\nRTD|      1.073|      2.213|     23.038|     450|     0|      0.431|   4064.225\nRTD|      1.136|      2.206|     40.415|     450|     0|      0.431|   4064.225\nRTT|  00:03:53  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      0.786|      2.320|    145.970|     453|     0|      0.431|   4064.225\nRTD|      1.177|      2.299|    220.256|     455|     0|      0.431|   4064.225\nRTD|      1.278|      2.451|    251.117|     463|     0|      0.431|   4064.225\nRTD|      0.883|      2.253|    148.607|     465|     0|      0.431|   4064.225\nRTD|      1.008|      2.213|     33.246|     465|     0|      0.431|   4064.225\nRTD|      0.674|      2.195|     27.089|     465|     0|      0.431|   4064.225\nRTD|      0.655|      2.139|     71.276|     465|     0|      0.431|   4064.225\nRTD|      0.781|      2.262|    123.321|     466|     0|      0.431|   4064.225\nRTD|      0.742|      2.155|     26.517|     466|     0|      0.431|   4064.225\nRTD|      0.723|      2.097|     73.006|     466|     0|      0.431|   4064.225\nRTD|      0.859|      2.426|    194.473|     468|     0|      0.431|   4064.225\nRTD|      0.858|      2.586|    167.213|     470|     0|      0.431|   4064.225\nRTD|      0.702|      2.375|    249.329|     479|     0|      0.431|   4064.225\nRTD|      0.907|      2.409|    570.648|     494|     0|      0.431|   4064.225\nRTD|      1.372|      2.352|    190.634|     495|     0|      0.431|   4064.225\nRTD|      0.799|      2.255|     68.425|     495|     0|      0.431|   4064.225\nRTD|      0.974|      2.249|    180.909|     499|     0|      0.431|   4064.225\nRTD|      0.721|      2.220|    169.027|     501|     0|      0.431|   4064.225\nRTD|      0.716|      2.245|     21.083|     501|     0|      0.431|   4064.225\nRTD|      0.844|      2.192|     13.540|     501|     0|      0.431|   4064.225\nRTD|      0.951|      2.245|    152.768|     503|     0|      0.431|   4064.225\nRTT|  00:04:14  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      1.067|      2.251|     88.968|     503|     0|      0.431|   4064.225\nRTD|      1.172|      2.127|     14.848|     503|     0|      0.431|   4064.225\nRTD|      1.514|      2.071|      6.963|     503|     0|      0.431|   4064.225\nRTD|      0.625|      2.188|     23.632|     503|     0|      0.431|   4064.225\nRTD|      1.321|      2.360|    232.795|     513|     0|      0.431|   4064.225\nRTD|      0.630|      2.254|    174.460|     514|     0|      0.431|   4064.225\nRTD|      1.592|      2.299|    179.210|     516|     0|      0.431|   4064.225\nRTD|      0.753|      2.308|    210.269|     521|     0|      0.431|   4064.225\nRTD|      0.718|      2.219|     26.256|     521|     0|      0.431|   4064.225\nRTD|      0.765|      2.252|    142.122|     522|     0|      0.431|   4064.225\nRTD|      1.072|      2.363|    209.076|     526|     0|      0.431|   4064.225\nRTD|      1.115|      2.164|     17.153|     526|     0|      0.431|   4064.225\nRTD|      0.630|      2.091|     16.916|     526|     0|      0.431|   4064.225\nRTD|      0.991|      2.120|     19.901|     526|     0|      0.431|   4064.225\nRTD|      1.554|      2.191|     24.666|     526|     0|      0.431|   4064.225\nRTD|      0.553|      2.175|    139.287|     527|     0|      0.431|   4064.225\nRTD|      0.857|      2.548|   2746.094|     556|     0|      0.431|   4064.225\nRTD|      1.068|      2.308|    132.688|     557|     0|      0.431|   4064.225\nRTD|      1.666|      2.268|     31.390|     557|     0|      0.431|   4064.225\nRTD|      1.079|      2.214|    140.984|     558|     0|      0.431|   4064.225\nRTD|      1.362|      2.216|    134.557|     559|     0|      0.431|   4064.225\nRTT|  00:04:35  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      0.933|      2.163|     23.748|     559|     0|      0.431|   4064.225\nRTD|      0.651|      2.095|     23.969|     559|     0|      0.431|   4064.225\nRTD|      0.741|      2.095|     18.943|     559|     0|      0.431|   4064.225\nRTD|      0.695|      2.194|     27.021|     559|     0|      0.431|   4064.225\nRTD|      1.165|      2.161|    162.324|     560|     0|      0.431|   4064.225\nRTD|      0.932|      2.246|    276.631|     562|     0|      0.431|   4064.225\nRTD|      0.854|      2.299|    129.021|     563|     0|      0.431|   4064.225\nRTD|      0.790|      2.267|     87.483|     563|     0|      0.431|   4064.225\nRTD|      1.244|      2.181|     27.721|     563|     0|      0.431|   4064.225\nRTD|      1.540|      2.302|    392.561|     568|     0|      0.431|   4064.225\nRTD|      0.800|      2.217|    108.004|     569|     0|      0.431|   4064.225\nRTD|      0.670|      2.220|    140.647|     571|     0|      0.431|   4064.225\nRTD|      0.696|      2.123|     83.870|     571|     0|      0.431|   4064.225\nRTD|      1.108|      2.189|    152.610|     572|     0|      0.431|   4064.225\nRTD|      1.039|      2.285|    144.575|     574|     0|      0.431|   4064.225\nRTD|      0.802|      2.300|    192.138|     576|     0|      0.431|   4064.225\nRTD|      0.806|      2.239|    152.445|     578|     0|      0.431|   4064.225\nRTD|      0.744|      2.257|    221.906|     581|     0|      0.431|   4064.225\nRTD|      0.927|      2.437|     92.230|     581|     0|      0.431|   4064.225\nRTD|      0.977|      2.270|    139.172|     582|     0|      0.431|   4064.225\nRTD|      1.053|      2.294|    164.936|     584|     0|      0.431|   4064.225\nRTT|  00:04:56  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      1.478|      2.327|    145.246|     585|     0|      0.431|   4064.225\nRTD|      0.695|      2.221|    196.138|     586|     0|      0.431|   4064.225\nRTD|      0.734|      2.284|    152.819|     587|     0|      0.431|   4064.225\nRTD|      1.510|      2.277|    153.158|     588|     0|      0.431|   4064.225\nRTD|      1.076|      2.101|     12.769|     588|     0|      0.431|   4064.225\nRTD|      1.040|      2.095|     22.080|     588|     0|      0.431|   4064.225\nRTD|      0.947|      2.234|     92.492|     588|     0|      0.431|   4064.225\nRTD|      0.676|      2.264|    197.199|     590|     0|      0.431|   4064.225\nRTD|      0.886|      2.136|    209.789|     592|     0|      0.431|   4064.225\nRTD|      0.976|      2.233|    168.356|     593|     0|      0.431|   4064.225\nRTD|      1.064|      2.305|    163.938|     594|     0|      0.431|   4064.225\nRTD|      1.467|      2.147|     27.332|     594|     0|      0.431|   4064.225\nRTD|      0.976|      2.199|    188.547|     595|     0|      0.431|   4064.225\nRTD|      0.749|      2.372|    168.949|     597|     0|      0.431|   4064.225\nRTD|      1.560|      2.286|    183.052|     599|     0|      0.431|   4064.225\nRTD|      0.746|      2.248|    154.116|     600|     0|      0.431|   4064.225\nRTD|      1.113|      2.144|     26.958|     600|     0|      0.431|   4064.225\nRTD|      0.767|      2.219|    121.369|     601|     0|      0.431|   4064.225\nRTD|      0.645|      2.192|    211.897|     604|     0|      0.431|   4064.225\nRTD|      0.936|      2.216|    221.899|     608|     0|      0.431|   4064.225\nRTD|      1.289|      2.248|     36.295|     608|     0|      0.431|   4064.225\nRTT|  00:05:17  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      0.599|      2.208|     32.402|     608|     0|      0.431|   4064.225\nRTD|      0.783|      2.182|    166.892|     609|     0|      0.431|   4064.225\nRTD|      1.598|      2.229|     59.867|     609|     0|      0.431|   4064.225\nRTD|      0.650|      2.195|     27.105|     609|     0|      0.431|   4064.225\nRTD|      1.344|      2.116|     14.650|     609|     0|      0.431|   4064.225\nRTD|      0.781|      2.191|    110.097|     610|     0|      0.431|   4064.225\nRTD|      0.809|      2.371|    172.118|     611|     0|      0.431|   4064.225\nRTD|      0.766|      2.198|     29.988|     611|     0|      0.431|   4064.225\nRTD|      1.545|      2.099|     27.658|     611|     0|      0.431|   4064.225\nRTD|      1.277|      2.262|    220.311|     615|     0|      0.431|   4064.225\nRTD|      0.818|      2.291|    183.575|     617|     0|      0.431|   4064.225\nRTD|      0.632|      2.172|    152.368|     619|     0|      0.431|   4064.225\nRTD|      0.637|      2.347|    211.698|     624|     0|      0.431|   4064.225\nRTD|      1.692|      2.315|    134.616|     625|     0|      0.431|   4064.225\nRTD|      0.867|      2.249|     51.270|     625|     0|      0.431|   4064.225\nRTD|      0.662|      2.269|    108.671|     626|     0|      0.431|   4064.225\nRTD|      1.297|      2.274|     13.548|     626|     0|      0.431|   4064.225\nRTD|      0.846|      2.328|    219.511|     631|     0|      0.431|   4064.225\nRTD|      0.599|      2.280|    109.252|     632|     0|      0.431|   4064.225\nRTD|      1.126|      2.243|     64.613|     632|     0|      0.431|   4064.225\nRTD|      1.305|      2.309|    140.805|     633|     0|      0.431|   4064.225\nRTT|  00:05:38  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      1.588|      2.295|    149.700|     635|     0|      0.431|   4064.225\nRTD|      1.028|      2.199|    167.807|     636|     0|      0.431|   4064.225\nRTD|      1.313|      2.333|     25.758|     636|     0|      0.431|   4064.225\nRTD|      1.527|      2.320|     30.765|     636|     0|      0.431|   4064.225\nRTD|      0.892|      2.282|    273.123|     639|     0|      0.431|   4064.225\nRTD|      0.831|      2.645|    164.909|     640|     0|      0.431|   4064.225\nRTD|      1.065|      2.321|    165.589|     642|     0|      0.431|   4064.225\nRTD|      0.870|      2.218|     14.878|     642|     0|      0.431|   4064.225\nRTD|      1.023|      2.327|    112.409|     643|     0|      0.431|   4064.225\nRTD|      0.755|      2.439|    179.138|     643|     0|      0.431|   4064.225\nRTD|      0.873|      2.416|    128.386|     644|     0|      0.431|   4064.225\nRTD|      0.877|      2.532|    341.071|     659|     0|      0.431|   4064.225\nRTD|      1.174|      2.414|     80.479|     659|     0|      0.431|   4064.225\nRTD|      0.988|      2.389|    120.418|     660|     0|      0.431|   4064.225\nRTD|      1.387|      2.502|    151.436|     662|     0|      0.431|   4064.225\nRTD|      1.180|      2.295|    167.232|     664|     0|      0.431|   4064.225\nRTD|      0.733|      2.275|    117.961|     665|     0|      0.431|   4064.225\nRTD|      0.800|      2.263|    151.837|     666|     0|      0.431|   4064.225\nRTD|      1.179|      2.300|    343.459|     671|     0|      0.431|   4064.225\nRTD|      1.632|      2.262|    576.624|     676|     0|      0.431|   4064.225\nRTD|      0.972|      2.256|     83.026|     676|     0|      0.431|   4064.225\nRTT|  00:05:59  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      0.905|      2.217|     14.864|     676|     0|      0.431|   4064.225\nRTD|      1.000|      2.272|    291.525|     679|     0|      0.431|   4064.225\nRTD|      1.577|      2.584|    202.061|     683|     0|      0.431|   4064.225\nRTD|      1.083|      2.361|    214.078|     687|     0|      0.431|   4064.225\nRTD|      1.092|      2.344|    226.545|     691|     0|      0.431|   4064.225\nRTD|      0.687|      2.313|    167.546|     693|     0|      0.431|   4064.225\nRTD|      1.084|      2.444|    226.433|     698|     0|      0.431|   4064.225\nRTD|      0.777|      2.298|    171.912|     699|     0|      0.431|   4064.225\nRTD|      0.731|      2.214|     19.201|     699|     0|      0.431|   4064.225\nRTD|      1.050|      2.327|    146.997|     700|     0|      0.431|   4064.225\nRTD|      0.873|      2.257|    164.363|     701|     0|      0.431|   4064.225\nRTD|      1.147|      2.252|     13.099|     701|     0|      0.431|   4064.225\nRTD|      0.869|      2.319|    124.107|     702|     0|      0.431|   4064.225\nRTD|      0.957|      2.396|    214.734|     710|     0|      0.431|   4064.225\nRTD|      0.713|      2.271|    322.862|     714|     0|      0.431|   4064.225\nRTD|      0.906|      2.305|    173.702|     715|     0|      0.431|   4064.225\nRTD|      0.800|      2.374|    170.163|     716|     0|      0.431|   4064.225\nRTD|      1.008|      2.683|    311.086|     724|     0|      0.431|   4064.225\nRTD|      0.868|      2.226|     91.813|     724|     0|      0.431|   4064.225\nRTD|      0.710|      2.930|    176.570|     726|     0|      0.431|   4064.225\nRTD|      0.889|      2.301|    325.418|     730|     0|      0.431|   4064.225\nRTT|  00:06:20  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      1.583|      2.200|    180.390|     732|     0|      0.431|   4064.225\nRTD|      0.910|      2.181|     26.203|     732|     0|      0.431|   4064.225\nRTD|      0.861|      2.292|    210.092|     734|     0|      0.431|   4064.225\nRTD|      1.386|      2.275|     87.712|     734|     0|      0.431|   4064.225\nRTD|      1.075|      2.249|    206.417|     739|     0|      0.431|   4064.225\nRTD|      0.950|      2.276|    172.590|     740|     0|      0.431|   4064.225\nRTD|      1.578|      2.245|    155.587|     743|     0|      0.431|   4064.225\nRTD|      1.567|      2.096|     24.720|     743|     0|      0.431|   4064.225\nRTD|      1.564|      2.159|    211.070|     745|     0|      0.431|   4064.225\nRTD|      0.837|      2.179|     24.456|     745|     0|      0.431|   4064.225\nRTD|      1.339|      2.252|    141.462|     746|     0|      0.431|   4064.225\nRTD|      1.458|      2.111|     25.085|     746|     0|      0.431|   4064.225\nRTD|      0.728|      2.285|    133.946|     747|     0|      0.431|   4064.225\nRTD|      0.708|      2.555|   4070.018|     787|     0|      0.431|   4070.018\nRTD|      1.437|      2.103|     23.791|     787|     0|      0.431|   4070.018\nRTD|      0.834|      2.262|    196.018|     791|     0|      0.431|   4070.018\nRTD|      0.997|      2.202|    246.103|     793|     0|      0.431|   4070.018\nRTD|      1.272|      2.097|     23.463|     793|     0|      0.431|   4070.018\nRTD|      0.794|      2.169|    159.743|     794|     0|      0.431|   4070.018\nRTD|      1.279|      2.313|    105.678|     795|     0|      0.431|   4070.018\nRTD|      1.154|      2.246|     43.826|     795|     0|      0.431|   4070.018\nRTT|  00:06:41  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      1.024|      2.472|    228.944|     799|     0|      0.431|   4070.018\nRTD|      1.069|      2.300|    127.796|     800|     0|      0.431|   4070.018\nRTD|      0.828|      2.268|    177.334|     802|     0|      0.431|   4070.018\nRTD|      0.805|      2.450|    188.556|     803|     0|      0.431|   4070.018\nRTD|      0.871|      2.250|    198.069|     805|     0|      0.431|   4070.018\nRTD|      0.961|      2.604|    363.375|     811|     0|      0.431|   4070.018\nRTD|      1.579|      2.315|    286.065|     815|     0|      0.431|   4070.018\nRTD|      1.020|      2.294|    213.258|     820|     0|      0.431|   4070.018\nRTD|      1.036|      2.272|    142.917|     821|     0|      0.431|   4070.018\nRTD|      1.033|      2.290|     81.932|     821|     0|      0.431|   4070.018\nRTD|      0.968|      2.385|    387.950|     828|     0|      0.431|   4070.018\nRTD|      1.031|      2.280|    165.773|     830|     0|      0.431|   4070.018\nRTD|      1.532|      2.338|    148.521|     832|     0|      0.431|   4070.018\nRTD|      0.910|      2.407|    110.014|     833|     0|      0.431|   4070.018\nRTD|      1.624|      3.004|    254.838|     841|     0|      0.431|   4070.018\nRTD|      0.782|      2.241|     25.412|     841|     0|      0.431|   4070.018\nRTD|      0.515|      2.250|     19.918|     841|     0|      0.431|   4070.018\nRTD|      0.641|      2.365|    257.054|     848|     0|      0.431|   4070.018\nRTD|      0.713|      2.306|    218.566|     852|     0|      0.431|   4070.018\nRTD|      0.926|      2.269|     45.948|     852|     0|      0.431|   4070.018\nRTD|      0.697|      2.155|     29.893|     852|     0|      0.431|   4070.018\nRTT|  00:07:02  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      1.285|      2.173|     21.854|     852|     0|      0.431|   4070.018\nRTD|      0.806|      2.436|    240.444|     855|     0|      0.431|   4070.018\nRTD|      0.730|      2.218|     18.189|     855|     0|      0.431|   4070.018\nRTD|      0.693|      2.270|    175.604|     856|     0|      0.431|   4070.018\nRTD|      0.904|      2.256|     85.316|     856|     0|      0.431|   4070.018\nRTD|      1.557|      2.262|    140.207|     857|     0|      0.431|   4070.018\nRTD|      0.656|      2.272|    133.251|     858|     0|      0.431|   4070.018\nRTD|      0.790|      2.222|    172.613|     860|     0|      0.431|   4070.018\nRTD|      1.736|      2.335|    171.017|     862|     0|      0.431|   4070.018\nRTD|      0.908|      2.557|    220.708|     867|     0|      0.431|   4070.018\nRTD|      1.170|      2.663|   3939.951|     908|     0|      0.431|   4070.018\nRTD|      1.203|      2.309|    220.420|     910|     0|      0.431|   4070.018\nRTD|      0.862|      2.291|     22.360|     910|     0|      0.431|   4070.018\nRTD|      0.735|      2.239|    140.186|     911|     0|      0.431|   4070.018\nRTD|      1.017|      2.276|     20.653|     911|     0|      0.431|   4070.018\nRTD|      1.417|      2.633|     96.784|     911|     0|      0.431|   4070.018\nRTD|      0.767|      2.197|    164.221|     912|     0|      0.431|   4070.018\nRTD|      0.619|      2.230|    435.337|     918|     0|      0.431|   4070.018\nRTD|      0.866|      2.296|     17.824|     918|     0|      0.431|   4070.018\nRTD|      0.950|      2.261|    157.655|     919|     0|      0.431|   4070.018\nRTD|      0.694|      2.282|    183.606|     920|     0|      0.431|   4070.018\nRTT|  00:07:23  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      1.034|      2.185|    106.997|     921|     0|      0.431|   4070.018\nRTD|      1.275|      2.258|     79.923|     921|     0|      0.431|   4070.018\nRTD|      0.843|      2.204|     98.318|     921|     0|      0.431|   4070.018\nRTD|      0.934|      2.462|    163.483|     922|     0|      0.431|   4070.018\nRTD|      1.638|      2.259|     91.552|     922|     0|      0.431|   4070.018\nRTD|      0.742|      2.452|    180.445|     925|     0|      0.431|   4070.018\nRTD|      0.926|      2.304|    179.750|     929|     0|      0.431|   4070.018\nRTD|      1.066|      2.305|    127.103|     931|     0|      0.431|   4070.018\nRTD|      0.758|      2.259|     23.167|     931|     0|      0.431|   4070.018\nRTD|      0.796|      2.257|     37.710|     931|     0|      0.431|   4070.018\nRTD|      0.802|      2.221|    354.087|     936|     0|      0.431|   4070.018\nRTD|      0.710|      2.647|   2569.037|     972|     0|      0.431|   4070.018\nRTD|      0.791|      2.132|     26.980|     972|     0|      0.431|   4070.018\nRTD|      0.620|      2.115|     22.115|     972|     0|      0.431|   4070.018\nRTD|      0.528|      2.158|     24.996|     972|     0|      0.431|   4070.018\nRTD|      1.045|      2.338|    197.054|     975|     0|      0.431|   4070.018\nRTD|      0.906|      2.251|    216.713|     978|     0|      0.431|   4070.018\nRTD|      1.276|      2.217|    106.452|     979|     0|      0.431|   4070.018\nRTD|      0.870|      2.296|     53.856|     979|     0|      0.431|   4070.018\nRTD|      0.728|      2.328|    696.160|     985|     0|      0.431|   4070.018\nRTD|      0.733|      2.176|    139.231|     986|     0|      0.431|   4070.018\nRTT|  00:07:44  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      0.964|      2.613|    209.923|     994|     0|      0.431|   4070.018\nRTD|      0.756|      2.422|    191.278|    1002|     0|      0.431|   4070.018\nRTD|      1.002|      2.183|    203.296|    1004|     0|      0.431|   4070.018\nRTD|      0.600|      2.348|    168.068|    1010|     0|      0.431|   4070.018\nRTD|      1.191|      2.300|    150.064|    1012|     0|      0.431|   4070.018\nRTD|      0.978|      2.230|    173.022|    1014|     0|      0.431|   4070.018\nRTD|      0.885|      2.138|     76.982|    1014|     0|      0.431|   4070.018\nRTD|      0.746|      2.253|     82.013|    1014|     0|      0.431|   4070.018\nRTD|      0.799|      2.240|     24.446|    1014|     0|      0.431|   4070.018\nRTD|      1.059|      2.476|    544.953|    1029|     0|      0.431|   4070.018\nRTD|      1.072|      2.396|    381.607|    1041|     0|      0.431|   4070.018\nRTD|      0.754|      2.316|    106.719|    1042|     0|      0.431|   4070.018\nRTD|      0.839|      2.263|    247.009|    1045|     0|      0.431|   4070.018\nRTD|      1.129|      2.201|     16.932|    1045|     0|      0.431|   4070.018\nRTD|      1.059|      2.319|    158.153|    1046|     0|      0.431|   4070.018\nRTD|      1.392|      2.301|    175.496|    1048|     0|      0.431|   4070.018\nRTD|      0.840|      2.192|     16.598|    1048|     0|      0.431|   4070.018\nRTD|      0.697|      2.216|    155.504|    1049|     0|      0.431|   4070.018\nRTD|      0.847|      2.349|    137.559|    1050|     0|      0.431|   4070.018\nRTD|      0.806|      2.387|    250.553|    1054|     0|      0.431|   4070.018\nRTD|      0.614|      2.253|     18.037|    1054|     0|      0.431|   4070.018\nRTT|  00:08:05  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      1.067|      2.282|     17.485|    1054|     0|      0.431|   4070.018\nRTD|      1.176|      2.248|     15.028|    1054|     0|      0.431|   4070.018\nRTD|      0.723|      2.271|    189.511|    1056|     0|      0.431|   4070.018\nRTD|      1.235|      2.328|    222.884|    1059|     0|      0.431|   4070.018\nRTD|      0.923|      2.275|    105.779|    1060|     0|      0.431|   4070.018\nRTD|      1.204|      2.249|    176.428|    1062|     0|      0.431|   4070.018\nRTD|      1.593|      2.205|     25.272|    1062|     0|      0.431|   4070.018\nRTD|      1.121|      2.269|     62.036|    1062|     0|      0.431|   4070.018\nRTD|      0.940|      2.170|     27.618|    1062|     0|      0.431|   4070.018\nRTD|      1.452|      3.095|   1364.292|    1075|     0|      0.431|   4070.018\nRTD|      1.698|      2.852|     58.514|    1075|     0|      0.431|   4070.018\nRTD|      0.703|      2.185|     96.686|    1075|     0|      0.431|   4070.018\nRTD|      1.550|      2.092|     12.729|    1075|     0|      0.431|   4070.018\nRTD|      0.757|      2.246|    238.651|    1078|     0|      0.431|   4070.018\nRTD|      0.901|      2.304|    218.703|    1085|     0|      0.431|   4070.018\nRTD|      0.728|      2.108|     23.869|    1085|     0|      0.431|   4070.018\nRTD|      0.676|      2.098|     25.420|    1085|     0|      0.431|   4070.018\nRTD|      1.131|      2.287|    167.466|    1086|     0|      0.431|   4070.018\nRTD|      0.669|      2.272|    134.191|    1087|     0|      0.431|   4070.018\nRTD|      1.640|      2.152|     24.254|    1087|     0|      0.431|   4070.018\nRTD|      0.754|      2.168|     23.277|    1087|     0|      0.431|   4070.018\nRTT|  00:08:26  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      0.885|      2.271|    242.985|    1089|     0|      0.431|   4070.018\nRTD|      0.944|      2.103|    135.149|    1090|     0|      0.431|   4070.018\nRTD|      0.880|      2.121|     20.173|    1090|     0|      0.431|   4070.018\nRTD|      0.853|      2.233|     33.589|    1090|     0|      0.431|   4070.018\nRTD|      1.201|      2.229|    228.909|    1095|     0|      0.431|   4070.018\nRTD|      1.325|      2.093|     18.160|    1095|     0|      0.431|   4070.018\nRTD|      0.619|      2.197|     79.284|    1095|     0|      0.431|   4070.018\nRTD|      0.754|      2.192|     21.651|    1095|     0|      0.431|   4070.018\nRTD|      0.651|      2.155|     28.330|    1095|     0|      0.431|   4070.018\nRTD|      0.954|      2.125|     24.800|    1095|     0|      0.431|   4070.018\nRTD|      1.074|      2.244|     84.395|    1095|     0|      0.431|   4070.018\nRTD|      0.740|      2.440|    210.849|    1098|     0|      0.431|   4070.018\nRTD|      1.233|      2.276|    133.704|    1100|     0|      0.431|   4070.018\nRTD|      1.520|      2.283|     31.291|    1100|     0|      0.431|   4070.018\nRTD|      0.732|      2.239|     74.501|    1100|     0|      0.431|   4070.018\nRTD|      0.694|      2.212|    195.666|    1101|     0|      0.431|   4070.018\nRTD|      0.905|      2.250|    215.479|    1106|     0|      0.431|   4070.018\nRTD|      0.708|      2.392|    972.253|    1116|     0|      0.431|   4070.018\nRTD|      0.613|      2.270|     98.867|    1116|     0|      0.431|   4070.018\nRTD|      0.740|      2.277|    171.062|    1117|     0|      0.431|   4070.018\nRTD|      1.046|      2.528|    165.230|    1118|     0|      0.431|   4070.018\nRTT|  00:08:47  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      1.458|      2.401|    204.254|    1120|     0|      0.431|   4070.018\nRTD|      0.642|      2.098|     21.464|    1120|     0|      0.431|   4070.018\nRTD|      1.174|      2.280|    146.101|    1121|     0|      0.431|   4070.018\nRTD|      1.647|      2.254|     27.601|    1121|     0|      0.431|   4070.018\nRTD|      0.764|      2.272|     16.827|    1121|     0|      0.431|   4070.018\nRTD|      0.844|      2.140|     17.296|    1121|     0|      0.431|   4070.018\nRTD|      0.896|      2.359|    204.706|    1122|     0|      0.431|   4070.018\nRTD|      0.665|      2.213|    202.022|    1123|     0|      0.431|   4070.018\nRTD|      0.946|      2.141|    212.635|    1126|     0|      0.431|   4070.018\nRTD|      1.272|      2.307|    242.466|    1129|     0|      0.431|   4070.018\nRTD|      1.348|      2.269|    107.899|    1130|     0|      0.431|   4070.018\nRTD|      1.410|      2.094|     24.687|    1130|     0|      0.431|   4070.018\nRTD|      1.494|      2.271|    383.024|    1137|     0|      0.431|   4070.018\nRTD|      1.074|      2.253|     43.742|    1137|     0|      0.431|   4070.018\nRTD|      0.867|      2.151|     16.731|    1137|     0|      0.431|   4070.018\nRTD|      0.869|      2.264|    348.275|    1146|     0|      0.431|   4070.018\nRTD|      0.705|      2.336|    373.132|    1154|     0|      0.431|   4070.018\nRTD|      0.896|      2.329|    112.767|    1155|     0|      0.431|   4070.018\nRTD|      0.823|      2.297|    239.302|    1161|     0|      0.431|   4070.018\nRTD|      0.765|      2.357|   1540.068|    1178|     0|      0.431|   4070.018\nRTD|      0.790|      2.245|     23.941|    1178|     0|      0.431|   4070.018\nRTT|  00:09:08  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      0.933|      2.320|    136.041|    1180|     0|      0.431|   4070.018\nRTD|      1.465|      2.264|    140.292|    1181|     0|      0.431|   4070.018\nRTD|      0.726|      2.317|     72.251|    1181|     0|      0.431|   4070.018\nRTD|      0.770|      2.286|     13.551|    1181|     0|      0.431|   4070.018\nRTD|      0.701|      2.204|     74.170|    1181|     0|      0.431|   4070.018\nRTD|      0.667|      2.272|    203.932|    1182|     0|      0.431|   4070.018\nRTD|      1.126|      2.318|    170.396|    1184|     0|      0.431|   4070.018\nRTD|      0.866|      2.215|    178.037|    1186|     0|      0.431|   4070.018\nRTD|      1.016|      2.318|    269.349|    1193|     0|      0.431|   4070.018\nRTD|      0.757|      2.468|    260.202|    1203|     0|      0.431|   4070.018\nRTD|      1.150|      2.362|    243.980|    1207|     0|      0.431|   4070.018\nRTD|      0.720|      2.186|     24.721|    1207|     0|      0.431|   4070.018\nRTD|      0.956|      2.284|    177.769|    1210|     0|      0.431|   4070.018\nRTD|      1.005|      2.260|    124.189|    1211|     0|      0.431|   4070.018\nRTD|      0.919|      2.106|     17.647|    1211|     0|      0.431|   4070.018\nRTD|      1.175|      2.083|     21.445|    1211|     0|      0.431|   4070.018\nRTD|      1.164|      2.185|     24.968|    1211|     0|      0.431|   4070.018\nRTD|      0.753|      2.778|   2961.302|    1240|     0|      0.431|   4070.018\nRTD|      1.031|      2.251|     28.545|    1240|     0|      0.431|   4070.018\nRTD|      0.998|      2.281|     18.846|    1240|     0|      0.431|   4070.018\nRTD|      0.852|      2.231|     71.297|    1240|     0|      0.431|   4070.018\nRTT|  00:09:29  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      1.031|      2.286|     22.175|    1240|     0|      0.431|   4070.018\nRTD|      0.645|      2.212|     24.419|    1240|     0|      0.431|   4070.018\nRTD|      0.933|      2.287|    157.237|    1241|     0|      0.431|   4070.018\nRTD|      0.880|      2.428|    185.063|    1242|     0|      0.431|   4070.018\nRTD|      0.981|      2.153|     96.272|    1242|     0|      0.431|   4070.018\nRTD|      1.257|      2.234|    154.349|    1243|     0|      0.431|   4070.018\nRTD|      1.113|      2.262|     65.727|    1243|     0|      0.431|   4070.018\nRTD|      1.399|      2.699|    112.406|    1244|     0|      0.431|   4070.018\nRTD|      0.455|      2.180|    288.028|    1246|     0|      0.431|   4070.018\nRTD|      0.923|      2.202|     27.610|    1246|     0|      0.431|   4070.018\nRTD|      0.691|      2.142|     34.325|    1246|     0|      0.431|   4070.018\nRTD|      0.642|      2.223|    317.262|    1254|     0|      0.431|   4070.018\nRTD|      0.971|      2.299|    248.806|    1256|     0|      0.431|   4070.018\nRTD|      0.715|      2.227|    111.234|    1257|     0|      0.431|   4070.018\nRTD|      1.060|      2.217|     20.925|    1257|     0|      0.431|   4070.018\nRTD|      1.307|      2.233|    103.927|    1257|     0|      0.431|   4070.018\nRTD|      0.832|      2.250|    136.724|    1258|     0|      0.431|   4070.018\nRTD|      0.860|      2.294|    212.379|    1262|     0|      0.431|   4070.018\nRTD|      0.863|      2.204|     18.648|    1262|     0|      0.431|   4070.018\nRTD|      1.006|      2.211|    186.993|    1263|     0|      0.431|   4070.018\nRTD|      0.691|      2.166|     19.668|    1263|     0|      0.431|   4070.018\nRTT|  00:09:50  (periodic user-mode task, 100 us period, priority 99)\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\nRTD|      1.320|      2.132|     21.342|    1263|     0|      0.431|   4070.018\nRTD|      0.690|      2.158|     22.662|    1263|     0|      0.431|   4070.018\nRTD|      0.725|      2.203|    110.076|    1264|     0|      0.431|   4070.018\nRTD|      1.157|      2.398|    241.796|    1269|     0|      0.431|   4070.018\nRTD|      0.631|      2.235|    170.161|    1272|     0|      0.431|   4070.018\nRTD|      0.770|      2.317|    233.329|    1276|     0|      0.431|   4070.018\nRTD|      0.719|      2.302|    263.563|    1278|     0|      0.431|   4070.018\nRTD|      0.691|      2.139|     26.732|    1278|     0|      0.431|   4070.018\nRTD|      0.877|      2.284|     87.702|    1278|     0|      0.431|   4070.018\nRTD|      0.974|      2.367|    170.590|    1280|     0|      0.431|   4070.018\nRTD|      0.724|      2.295|     26.381|    1280|     0|      0.431|   4070.018\n---|--param|----range-|--samples\nHSD|    min|   0 -  1 |      393\nHSD|    min|   1 -  2 |      206\n---|--param|----range-|--samples\nHSD|    avg|   0 -  1 |      650\nHSD|    avg|   1 -  2 |   626921\nHSD|    avg|   2 -  3 |  5130974\nHSD|    avg|   3 -  4 |   147005\nHSD|    avg|   4 -  5 |    53818\nHSD|    avg|   5 -  6 |    15897\nHSD|    avg|   6 -  7 |     6999\nHSD|    avg|   7 -  8 |     3558\nHSD|    avg|   8 -  9 |     2382\nHSD|    avg|   9 - 10 |     1605\nHSD|    avg|  10 - 11 |     1340\nHSD|    avg|  11 - 12 |     1028\nHSD|    avg|  12 - 13 |      768\nHSD|    avg|  13 - 14 |      698\nHSD|    avg|  14 - 15 |      708\nHSD|    avg|  15 - 16 |      443\nHSD|    avg|  16 - 17 |      365\nHSD|    avg|  17 - 18 |      286\nHSD|    avg|  18 - 19 |      251\nHSD|    avg|  19 - 20 |      253\nHSD|    avg|  20 - 21 |      196\nHSD|    avg|  21 - 22 |      182\nHSD|    avg|  22 - 23 |      191\nHSD|    avg|  23 - 24 |      229\nHSD|    avg|  24 - 25 |      150\nHSD|    avg|  25 - 26 |      117\nHSD|    avg|  26 - 27 |      103\nHSD|    avg|  27 - 28 |       76\nHSD|    avg|  28 - 29 |       53\nHSD|    avg|  29 - 30 |       38\nHSD|    avg|  30 - 31 |       40\nHSD|    avg|  31 - 32 |       28\nHSD|    avg|  32 - 33 |       20\nHSD|    avg|  33 - 34 |       16\nHSD|    avg|  34 - 35 |       10\nHSD|    avg|  35 - 36 |        9\nHSD|    avg|  36 - 37 |       17\nHSD|    avg|  37 - 38 |       13\nHSD|    avg|  38 - 39 |       11\nHSD|    avg|  39 - 40 |        8\nHSD|    avg|  40 - 41 |        9\nHSD|    avg|  41 - 42 |       10\nHSD|    avg|  42 - 43 |       10\nHSD|    avg|  43 - 44 |        9\nHSD|    avg|  44 - 45 |       13\nHSD|    avg|  45 - 46 |       11\nHSD|    avg|  46 - 47 |        8\nHSD|    avg|  47 - 48 |        5\nHSD|    avg|  48 - 49 |       10\nHSD|    avg|  49 - 50 |        9\nHSD|    avg|  50 - 51 |        9\nHSD|    avg|  51 - 52 |        8\nHSD|    avg|  52 - 53 |        4\nHSD|    avg|  53 - 54 |       11\nHSD|    avg|  54 - 55 |        8\nHSD|    avg|  55 - 56 |        4\nHSD|    avg|  56 - 57 |        6\nHSD|    avg|  57 - 58 |        5\nHSD|    avg|  58 - 59 |       11\nHSD|    avg|  59 - 60 |        5\nHSD|    avg|  60 - 61 |       11\nHSD|    avg|  61 - 62 |        7\nHSD|    avg|  62 - 63 |       10\nHSD|    avg|  63 - 64 |        8\nHSD|    avg|  64 - 65 |       10\nHSD|    avg|  65 - 66 |        8\nHSD|    avg|  66 - 67 |        6\nHSD|    avg|  67 - 68 |        6\nHSD|    avg|  68 - 69 |       11\nHSD|    avg|  69 - 70 |        8\nHSD|    avg|  70 - 71 |        2\nHSD|    avg|  71 - 72 |        9\nHSD|    avg|  72 - 73 |       10\nHSD|    avg|  73 - 74 |        8\nHSD|    avg|  74 - 75 |        5\nHSD|    avg|  75 - 76 |        2\nHSD|    avg|  76 - 77 |        1\nHSD|    avg|  77 - 78 |        8\nHSD|    avg|  78 - 79 |        8\nHSD|    avg|  79 - 80 |        5\nHSD|    avg|  80 - 81 |        4\nHSD|    avg|  81 - 82 |        8\nHSD|    avg|  82 - 83 |        4\nHSD|    avg|  83 - 84 |       11\nHSD|    avg|  84 - 85 |        4\nHSD|    avg|  85 - 86 |        8\nHSD|    avg|  86 - 87 |        3\nHSD|    avg|  87 - 88 |        4\nHSD|    avg|  88 - 89 |       11\nHSD|    avg|  89 - 90 |        5\nHSD|    avg|  90 - 91 |        8\nHSD|    avg|  91 - 92 |        6\nHSD|    avg|  92 - 93 |        3\nHSD|    avg|  93 - 94 |        4\nHSD|    avg|  94 - 95 |        3\nHSD|    avg|  95 - 96 |        7\nHSD|    avg|  96 - 97 |       10\nHSD|    avg|  97 - 98 |        4\nHSD|    avg|  98 - 99 |        6\nHSD|    avg|  99 -100 |        2\nHSD|    avg| 102 -103 |        6\nHSD|    avg| 103 -104 |        5\nHSD|    avg| 104 -105 |        4\nHSD|    avg| 105 -106 |        3\nHSD|    avg| 106 -107 |        8\nHSD|    avg| 107 -108 |        6\nHSD|    avg| 108 -109 |       12\nHSD|    avg| 109 -110 |        5\nHSD|    avg| 110 -111 |        8\nHSD|    avg| 111 -112 |       11\nHSD|    avg| 112 -113 |        7\nHSD|    avg| 113 -114 |        3\nHSD|    avg| 114 -115 |        5\nHSD|    avg| 115 -116 |        2\nHSD|    avg| 116 -117 |       10\nHSD|    avg| 117 -118 |        3\nHSD|    avg| 118 -119 |        6\nHSD|    avg| 119 -120 |        6\nHSD|    avg| 120 -121 |        8\nHSD|    avg| 121 -122 |        7\nHSD|    avg| 122 -123 |        5\nHSD|    avg| 123 -124 |        4\nHSD|    avg| 124 -125 |       10\nHSD|    avg| 125 -126 |        7\nHSD|    avg| 126 -127 |        5\nHSD|    avg| 127 -128 |       10\nHSD|    avg| 128 -129 |        7\nHSD|    avg| 129 -130 |       14\nHSD|    avg| 130 -131 |        9\nHSD|    avg| 131 -132 |        5\nHSD|    avg| 132 -133 |        6\nHSD|    avg| 133 -134 |        7\nHSD|    avg| 134 -135 |        6\nHSD|    avg| 135 -136 |        4\nHSD|    avg| 136 -137 |        8\nHSD|    avg| 137 -138 |        2\nHSD|    avg| 138 -139 |        6\nHSD|    avg| 139 -140 |        8\nHSD|    avg| 140 -141 |       10\nHSD|    avg| 141 -142 |        8\nHSD|    avg| 142 -143 |       10\nHSD|    avg| 143 -144 |        3\nHSD|    avg| 144 -145 |        7\nHSD|    avg| 145 -146 |       11\nHSD|    avg| 146 -147 |        8\nHSD|    avg| 147 -148 |        7\nHSD|    avg| 148 -149 |       10\nHSD|    avg| 149 -150 |        9\nHSD|    avg| 150 -151 |        5\nHSD|    avg| 151 -152 |        7\nHSD|    avg| 152 -153 |        7\nHSD|    avg| 153 -154 |        3\nHSD|    avg| 154 -155 |       11\nHSD|    avg| 155 -156 |        6\nHSD|    avg| 156 -157 |        9\nHSD|    avg| 157 -158 |        7\nHSD|    avg| 158 -159 |        7\nHSD|    avg| 159 -160 |        6\nHSD|    avg| 160 -161 |        5\nHSD|    avg| 161 -162 |        5\nHSD|    avg| 162 -163 |        7\nHSD|    avg| 163 -164 |       11\nHSD|    avg| 164 -165 |        8\nHSD|    avg| 165 -166 |        8\nHSD|    avg| 166 -167 |        6\nHSD|    avg| 167 -168 |       12\nHSD|    avg| 168 -169 |        7\nHSD|    avg| 169 -170 |        6\nHSD|    avg| 170 -171 |       11\nHSD|    avg| 171 -172 |        4\nHSD|    avg| 172 -173 |        4\nHSD|    avg| 173 -174 |        7\nHSD|    avg| 174 -175 |        5\nHSD|    avg| 175 -176 |        6\nHSD|    avg| 176 -177 |        8\nHSD|    avg| 177 -178 |        8\nHSD|    avg| 178 -179 |        4\nHSD|    avg| 179 -180 |        5\nHSD|    avg| 180 -181 |        5\nHSD|    avg| 181 -182 |        4\nHSD|    avg| 182 -183 |        4\nHSD|    avg| 183 -184 |        6\nHSD|    avg| 184 -185 |        3\nHSD|    avg| 185 -186 |        3\nHSD|    avg| 186 -187 |        3\nHSD|    avg| 187 -188 |        3\nHSD|    avg| 188 -189 |        6\nHSD|    avg| 189 -190 |        4\nHSD|    avg| 190 -191 |        4\nHSD|    avg| 191 -192 |        3\nHSD|    avg| 192 -193 |        2\nHSD|    avg| 193 -194 |        1\nHSD|    avg| 194 -195 |        4\nHSD|    avg| 195 -196 |        2\nHSD|    avg| 196 -197 |        3\nHSD|    avg| 197 -198 |        4\nHSD|    avg| 198 -199 |        2\nHSD|    avg| 201 -202 |        1\nHSD|    avg| 202 -203 |        5\nHSD|    avg| 203 -204 |        3\nHSD|    avg| 204 -205 |        3\nHSD|    avg| 205 -206 |        6\nHSD|    avg| 206 -207 |        6\nHSD|    avg| 207 -208 |        5\nHSD|    avg| 208 -209 |        4\nHSD|    avg| 209 -210 |        4\nHSD|    avg| 210 -211 |        8\nHSD|    avg| 211 -212 |        8\nHSD|    avg| 212 -213 |        2\nHSD|    avg| 213 -214 |        4\nHSD|    avg| 214 -215 |        5\nHSD|    avg| 215 -216 |        6\nHSD|    avg| 216 -217 |        3\nHSD|    avg| 217 -218 |        4\nHSD|    avg| 218 -219 |        3\nHSD|    avg| 219 -220 |        4\nHSD|    avg| 220 -221 |        5\nHSD|    avg| 221 -222 |        4\nHSD|    avg| 222 -223 |        2\nHSD|    avg| 223 -224 |        3\nHSD|    avg| 224 -225 |        1\nHSD|    avg| 226 -227 |        3\nHSD|    avg| 227 -228 |        2\nHSD|    avg| 228 -229 |        3\nHSD|    avg| 229 -230 |        1\nHSD|    avg| 230 -231 |        3\nHSD|    avg| 231 -232 |        3\nHSD|    avg| 232 -233 |        1\nHSD|    avg| 233 -234 |        2\nHSD|    avg| 235 -236 |        1\nHSD|    avg| 236 -237 |        2\nHSD|    avg| 238 -239 |        1\nHSD|    avg| 239 -240 |        3\nHSD|    avg| 240 -241 |        1\nHSD|    avg| 241 -242 |        3\nHSD|    avg| 242 -243 |        4\nHSD|    avg| 243 -244 |        2\nHSD|    avg| 244 -245 |        1\nHSD|    avg| 246 -247 |        2\nHSD|    avg| 247 -248 |        1\nHSD|    avg| 248 -249 |        1\nHSD|    avg| 249 -250 |        1\nHSD|    avg| 250 -251 |        1\nHSD|    avg| 251 -252 |        1\nHSD|    avg| 252 -253 |        1\nHSD|    avg| 253 -254 |        1\nHSD|    avg| 254 -255 |        1\nHSD|    avg| 255 -256 |        1\nHSD|    avg| 256 -257 |        1\nHSD|    avg| 257 -258 |        1\nHSD|    avg| 260 -261 |        1\nHSD|    avg| 262 -263 |        1\nHSD|    avg| 263 -264 |        1\nHSD|    avg| 265 -266 |        1\nHSD|    avg| 269 -270 |        2\nHSD|    avg| 270 -271 |        1\nHSD|    avg| 273 -274 |        1\nHSD|    avg| 276 -277 |        1\nHSD|    avg| 286 -287 |        1\nHSD|    avg| 287 -288 |        1\nHSD|    avg| 288 -289 |        1\nHSD|    avg| 291 -292 |        1\nHSD|    avg| 293 -294 |        1\nHSD|    avg| 298 -299 |        1\nHSD|    avg| 299 -300 |       59\n---|--param|----range-|--samples\nHSD|    max|   6 -  7 |        1\nHSD|    max|   9 - 10 |        1\nHSD|    max|  12 - 13 |        5\nHSD|    max|  13 - 14 |        6\nHSD|    max|  14 - 15 |        7\nHSD|    max|  15 - 16 |        6\nHSD|    max|  16 - 17 |        9\nHSD|    max|  17 - 18 |        6\nHSD|    max|  18 - 19 |        6\nHSD|    max|  19 - 20 |        9\nHSD|    max|  20 - 21 |        3\nHSD|    max|  21 - 22 |       10\nHSD|    max|  22 - 23 |        7\nHSD|    max|  23 - 24 |       13\nHSD|    max|  24 - 25 |       18\nHSD|    max|  25 - 26 |        8\nHSD|    max|  26 - 27 |       11\nHSD|    max|  27 - 28 |       15\nHSD|    max|  28 - 29 |        3\nHSD|    max|  29 - 30 |        3\nHSD|    max|  30 - 31 |        6\nHSD|    max|  31 - 32 |        2\nHSD|    max|  32 - 33 |        2\nHSD|    max|  33 - 34 |        3\nHSD|    max|  34 - 35 |        2\nHSD|    max|  36 - 37 |        2\nHSD|    max|  37 - 38 |        1\nHSD|    max|  38 - 39 |        1\nHSD|    max|  40 - 41 |        1\nHSD|    max|  41 - 42 |        1\nHSD|    max|  42 - 43 |        1\nHSD|    max|  43 - 44 |        3\nHSD|    max|  44 - 45 |        2\nHSD|    max|  45 - 46 |        2\nHSD|    max|  46 - 47 |        2\nHSD|    max|  47 - 48 |        1\nHSD|    max|  48 - 49 |        1\nHSD|    max|  51 - 52 |        1\nHSD|    max|  53 - 54 |        1\nHSD|    max|  58 - 59 |        2\nHSD|    max|  59 - 60 |        1\nHSD|    max|  62 - 63 |        1\nHSD|    max|  64 - 65 |        2\nHSD|    max|  65 - 66 |        1\nHSD|    max|  67 - 68 |        2\nHSD|    max|  68 - 69 |        1\nHSD|    max|  69 - 70 |        1\nHSD|    max|  71 - 72 |        2\nHSD|    max|  72 - 73 |        1\nHSD|    max|  73 - 74 |        1\nHSD|    max|  74 - 75 |        4\nHSD|    max|  76 - 77 |        1\nHSD|    max|  78 - 79 |        2\nHSD|    max|  79 - 80 |        2\nHSD|    max|  80 - 81 |        1\nHSD|    max|  81 - 82 |        1\nHSD|    max|  82 - 83 |        1\nHSD|    max|  83 - 84 |        3\nHSD|    max|  84 - 85 |        1\nHSD|    max|  85 - 86 |        1\nHSD|    max|  87 - 88 |        3\nHSD|    max|  88 - 89 |        1\nHSD|    max|  90 - 91 |        1\nHSD|    max|  91 - 92 |        3\nHSD|    max|  92 - 93 |        2\nHSD|    max|  94 - 95 |        1\nHSD|    max|  96 - 97 |        4\nHSD|    max|  97 - 98 |        2\nHSD|    max|  98 - 99 |        2\nHSD|    max|  99 -100 |        2\nHSD|    max| 102 -103 |        1\nHSD|    max| 103 -104 |        1\nHSD|    max| 105 -106 |        2\nHSD|    max| 106 -107 |        3\nHSD|    max| 107 -108 |        1\nHSD|    max| 108 -109 |        4\nHSD|    max| 109 -110 |        2\nHSD|    max| 110 -111 |        4\nHSD|    max| 111 -112 |        5\nHSD|    max| 112 -113 |        3\nHSD|    max| 116 -117 |        1\nHSD|    max| 117 -118 |        1\nHSD|    max| 120 -121 |        1\nHSD|    max| 121 -122 |        1\nHSD|    max| 123 -124 |        1\nHSD|    max| 124 -125 |        4\nHSD|    max| 127 -128 |        3\nHSD|    max| 128 -129 |        3\nHSD|    max| 129 -130 |        3\nHSD|    max| 130 -131 |        2\nHSD|    max| 131 -132 |        1\nHSD|    max| 132 -133 |        3\nHSD|    max| 133 -134 |        4\nHSD|    max| 134 -135 |        3\nHSD|    max| 135 -136 |        1\nHSD|    max| 136 -137 |        4\nHSD|    max| 137 -138 |        1\nHSD|    max| 138 -139 |        1\nHSD|    max| 139 -140 |        4\nHSD|    max| 140 -141 |        7\nHSD|    max| 141 -142 |        1\nHSD|    max| 142 -143 |        3\nHSD|    max| 144 -145 |        2\nHSD|    max| 145 -146 |        2\nHSD|    max| 146 -147 |        2\nHSD|    max| 147 -148 |        2\nHSD|    max| 148 -149 |        5\nHSD|    max| 149 -150 |        1\nHSD|    max| 150 -151 |        2\nHSD|    max| 151 -152 |        4\nHSD|    max| 152 -153 |        5\nHSD|    max| 153 -154 |        1\nHSD|    max| 154 -155 |        5\nHSD|    max| 155 -156 |        2\nHSD|    max| 156 -157 |        4\nHSD|    max| 157 -158 |        2\nHSD|    max| 158 -159 |        1\nHSD|    max| 159 -160 |        1\nHSD|    max| 160 -161 |        3\nHSD|    max| 161 -162 |        2\nHSD|    max| 162 -163 |        3\nHSD|    max| 163 -164 |        3\nHSD|    max| 164 -165 |        4\nHSD|    max| 165 -166 |        3\nHSD|    max| 166 -167 |        1\nHSD|    max| 167 -168 |        6\nHSD|    max| 168 -169 |        4\nHSD|    max| 169 -170 |        4\nHSD|    max| 170 -171 |        5\nHSD|    max| 171 -172 |        3\nHSD|    max| 172 -173 |        4\nHSD|    max| 173 -174 |        6\nHSD|    max| 174 -175 |        1\nHSD|    max| 175 -176 |        5\nHSD|    max| 176 -177 |        3\nHSD|    max| 177 -178 |        6\nHSD|    max| 178 -179 |        2\nHSD|    max| 179 -180 |        3\nHSD|    max| 180 -181 |        4\nHSD|    max| 181 -182 |        1\nHSD|    max| 182 -183 |        2\nHSD|    max| 183 -184 |        4\nHSD|    max| 184 -185 |        1\nHSD|    max| 185 -186 |        3\nHSD|    max| 186 -187 |        1\nHSD|    max| 188 -189 |        3\nHSD|    max| 189 -190 |        2\nHSD|    max| 190 -191 |        3\nHSD|    max| 191 -192 |        1\nHSD|    max| 192 -193 |        1\nHSD|    max| 194 -195 |        1\nHSD|    max| 195 -196 |        1\nHSD|    max| 196 -197 |        2\nHSD|    max| 197 -198 |        2\nHSD|    max| 198 -199 |        1\nHSD|    max| 201 -202 |        1\nHSD|    max| 202 -203 |        2\nHSD|    max| 203 -204 |        3\nHSD|    max| 204 -205 |        2\nHSD|    max| 205 -206 |        1\nHSD|    max| 206 -207 |        2\nHSD|    max| 207 -208 |        1\nHSD|    max| 208 -209 |        1\nHSD|    max| 209 -210 |        4\nHSD|    max| 210 -211 |        4\nHSD|    max| 211 -212 |        4\nHSD|    max| 212 -213 |        2\nHSD|    max| 213 -214 |        2\nHSD|    max| 214 -215 |        2\nHSD|    max| 215 -216 |        4\nHSD|    max| 216 -217 |        1\nHSD|    max| 217 -218 |        1\nHSD|    max| 218 -219 |        3\nHSD|    max| 219 -220 |        2\nHSD|    max| 220 -221 |        4\nHSD|    max| 221 -222 |        3\nHSD|    max| 222 -223 |        2\nHSD|    max| 223 -224 |        1\nHSD|    max| 226 -227 |        2\nHSD|    max| 228 -229 |        3\nHSD|    max| 230 -231 |        3\nHSD|    max| 231 -232 |        2\nHSD|    max| 232 -233 |        1\nHSD|    max| 233 -234 |        1\nHSD|    max| 235 -236 |        1\nHSD|    max| 236 -237 |        1\nHSD|    max| 238 -239 |        1\nHSD|    max| 239 -240 |        2\nHSD|    max| 240 -241 |        1\nHSD|    max| 241 -242 |        3\nHSD|    max| 242 -243 |        3\nHSD|    max| 243 -244 |        1\nHSD|    max| 244 -245 |        1\nHSD|    max| 246 -247 |        2\nHSD|    max| 247 -248 |        1\nHSD|    max| 248 -249 |        1\nHSD|    max| 249 -250 |        1\nHSD|    max| 250 -251 |        1\nHSD|    max| 251 -252 |        1\nHSD|    max| 252 -253 |        1\nHSD|    max| 254 -255 |        1\nHSD|    max| 256 -257 |        1\nHSD|    max| 257 -258 |        1\nHSD|    max| 260 -261 |        1\nHSD|    max| 263 -264 |        1\nHSD|    max| 265 -266 |        1\nHSD|    max| 269 -270 |        2\nHSD|    max| 270 -271 |        1\nHSD|    max| 273 -274 |        1\nHSD|    max| 276 -277 |        1\nHSD|    max| 286 -287 |        1\nHSD|    max| 288 -289 |        1\nHSD|    max| 291 -292 |        1\nHSD|    max| 298 -299 |        1\nHSD|    max| 299 -300 |       39\nHSH|--param|--samples-|--average--|---stddev--\nHSS|    min|       599|      0.344|      0.475\nHSS|    avg|   5998703|      2.002|      2.285\nHSS|    max|       599|    130.072|     87.856\n---|-----------|-----------|-----------|--------|------|-------------------------\nRTS|      0.431|      2.272|   4070.018|    1280|     0|    00:10:01/00:10:00\n</code></pre>"},{"location":"sigmatek/xenomai/with_taskset/latency_with_taskset_10min_gnoplot/","title":"gnuplot with taskset","text":"<pre><code># Calculate statistics\nstats 'latency_with_taskset_10min.txt' using 2 nooutput\n\n# Define labels for the statistics\nset label 1 sprintf(\"Minimum: %.2f\", STATS_min) at graph 0.02, graph 0.9\nset label 2 sprintf(\"Maximum: %.2f\", STATS_max) at graph 0.02, graph 0.85\nset label 3 sprintf(\"Average: %.2f\", STATS_mean) at graph 0.02, graph 0.8\nset label 4 sprintf(\"Standard Deviation: %.2f\", STATS_stddev) at graph 0.02, graph 0.75\n\n# Plot the data\nplot 'latency_with_taskset_10min.txt' using 1:2 with linespoints title 'Latency Histogram'\n</code></pre>"},{"location":"sigmatek/xenomai/with_taskset/latency_with_taskset_10min_log/","title":"Latency with taskset","text":"<p>``` root@sigmatek-core2:~# latency -h -s -T 600 -g latency_with_taskset_10min.txt == Sampling period: 100 us == Test mode: periodic user-mode task == All results in microseconds warming up... RTT|  00:00:01  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      1.584|      3.572|     62.942|       0|     0|      1.584|     62.942 RTD|      1.812|      3.629|     74.276|       0|     0|      1.584|     74.276 RTD|      1.707|      3.753|     75.975|       0|     0|      1.584|     75.975 RTD|      1.457|      3.656|     90.342|       0|     0|      1.457|     90.342 RTD|      1.171|      3.549|     46.809|       0|     0|      1.171|     90.342 RTD|      1.424|      3.721|     97.125|       0|     0|      1.171|     97.125 RTD|      1.923|      3.760|     63.376|       0|     0|      1.171|     97.125 RTD|      2.055|      3.541|     71.999|       0|     0|      1.171|     97.125 RTD|      1.526|      3.655|     57.090|       0|     0|      1.171|     97.125 RTD|      1.584|      3.749|     68.047|       0|     0|      1.171|     97.125 RTD|      1.886|      3.558|    138.986|       1|     0|      1.171|    138.986 RTD|      2.031|      3.577|     43.312|       1|     0|      1.171|    138.986 RTD|      1.985|      3.785|     78.594|       1|     0|      1.171|    138.986 RTD|      1.477|      3.631|     36.142|       1|     0|      1.171|    138.986 RTD|      1.493|      3.555|     70.235|       1|     0|      1.171|    138.986 RTD|      1.491|      3.666|     36.112|       1|     0|      1.171|    138.986 RTD|      1.940|      3.608|     77.012|       1|     0|      1.171|    138.986 RTD|      1.570|      3.514|     74.237|       1|     0|      1.171|    138.986 RTD|      1.474|      3.548|     80.386|       1|     0|      1.171|    138.986 RTD|      2.352|      3.626|     97.918|       1|     0|      1.171|    138.986 RTD|      1.378|      3.511|     58.768|       1|     0|      1.171|    138.986 RTT|  00:00:22  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      1.830|      3.415|     60.101|       1|     0|      1.171|    138.986 RTD|      2.059|      3.633|     61.785|       1|     0|      1.171|    138.986 RTD|      1.776|      3.609|     19.745|       1|     0|      1.171|    138.986 RTD|      1.404|      3.369|     80.105|       1|     0|      1.171|    138.986 RTD|      1.693|      3.434|     72.658|       1|     0|      1.171|    138.986 RTD|      1.697|      3.667|     35.530|       1|     0|      1.171|    138.986 RTD|      1.679|      3.516|     39.531|       1|     0|      1.171|    138.986 RTD|      1.834|      3.387|     37.041|       1|     0|      1.171|    138.986 RTD|      1.625|      3.643|     59.871|       1|     0|      1.171|    138.986 RTD|      1.877|      3.605|     96.801|       1|     0|      1.171|    138.986 RTD|      1.352|      3.411|     56.187|       1|     0|      1.171|    138.986 RTD|      1.979|      3.541|     81.195|       1|     0|      1.171|    138.986 RTD|      1.867|      3.704|     27.019|       1|     0|      1.171|    138.986 RTD|      1.227|      3.471|     49.315|       1|     0|      1.171|    138.986 RTD|      1.612|      3.392|     44.042|       1|     0|      1.171|    138.986 RTD|      2.038|      3.716|     56.813|       1|     0|      1.171|    138.986 RTD|      1.415|      3.661|     79.088|       1|     0|      1.171|    138.986 RTD|      1.563|      3.511|     63.556|       1|     0|      1.171|    138.986 RTD|      2.277|      3.578|     46.272|       1|     0|      1.171|    138.986 RTD|      1.706|      3.688|     65.568|       1|     0|      1.171|    138.986 RTD|      1.531|      3.673|     91.485|       1|     0|      1.171|    138.986 RTT|  00:00:43  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      1.807|      3.490|     73.137|       1|     0|      1.171|    138.986 RTD|      1.733|      3.804|     80.338|       1|     0|      1.171|    138.986 RTD|      1.756|      3.684|     75.887|       1|     0|      1.171|    138.986 RTD|      0.997|      3.488|     72.556|       1|     0|      0.997|    138.986 RTD|      2.022|      3.644|     31.676|       1|     0|      0.997|    138.986 RTD|      1.781|      3.800|     83.351|       1|     0|      0.997|    138.986 RTD|      2.290|      3.575|     88.568|       1|     0|      0.997|    138.986 RTD|      1.506|      3.700|     63.402|       1|     0|      0.997|    138.986 RTD|      2.537|      3.919|     92.590|       1|     0|      0.997|    138.986 RTD|      1.960|      3.845|     30.480|       1|     0|      0.997|    138.986 RTD|      1.967|      3.963|     71.572|       1|     0|      0.997|    138.986 RTD|      1.743|      4.054|     52.249|       1|     0|      0.997|    138.986 RTD|      2.141|      4.119|     64.162|       1|     0|      0.997|    138.986 RTD|      1.520|      3.767|     68.496|       1|     0|      0.997|    138.986 RTD|      1.845|      3.642|     65.325|       1|     0|      0.997|    138.986 RTD|      1.507|      3.966|     58.504|       1|     0|      0.997|    138.986 RTD|      2.139|      4.037|     66.847|       1|     0|      0.997|    138.986 RTD|      1.686|      3.773|     43.411|       1|     0|      0.997|    138.986 RTD|      1.395|      3.588|     61.832|       1|     0|      0.997|    138.986 RTD|      1.503|      3.675|     28.243|       1|     0|      0.997|    138.986 RTD|      1.667|      3.823|     70.355|       1|     0|      0.997|    138.986 RTT|  00:01:04  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      1.720|      3.619|     46.282|       1|     0|      0.997|    138.986 RTD|      1.675|      3.783|     69.171|       1|     0|      0.997|    138.986 RTD|      1.555|      4.141|     80.252|       1|     0|      0.997|    138.986 RTD|      1.851|      4.099|    107.356|       2|     0|      0.997|    138.986 RTD|      2.584|      4.054|     71.816|       2|     0|      0.997|    138.986 RTD|      2.300|      4.030|     55.046|       2|     0|      0.997|    138.986 RTD|      1.835|      4.071|    115.873|       3|     0|      0.997|    138.986 RTD|      1.714|      3.791|    105.572|       4|     0|      0.997|    138.986 RTD|      1.833|      3.659|     94.466|       4|     0|      0.997|    138.986 RTD|      1.581|      4.027|     52.278|       4|     0|      0.997|    138.986 RTD|      1.365|      4.029|     47.561|       4|     0|      0.997|    138.986 RTD|      1.928|      3.745|    107.645|       5|     0|      0.997|    138.986 RTD|      1.775|      3.579|     65.304|       5|     0|      0.997|    138.986 RTD|      2.462|      4.006|     69.019|       5|     0|      0.997|    138.986 RTD|      2.373|      4.108|     22.943|       5|     0|      0.997|    138.986 RTD|      2.094|      4.131|     65.587|       5|     0|      0.997|    138.986 RTD|      1.970|      3.948|     83.922|       5|     0|      0.997|    138.986 RTD|      2.011|      4.190|    107.884|       6|     0|      0.997|    138.986 RTD|      2.127|      4.176|    139.085|       7|     0|      0.997|    139.085 RTD|      1.595|      3.620|    116.211|       8|     0|      0.997|    139.085 RTD|      1.701|      3.618|     96.753|       8|     0|      0.997|    139.085 RTT|  00:01:25  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      2.558|      4.087|     43.914|       8|     0|      0.997|    139.085 RTD|      1.868|      4.051|     96.986|       8|     0|      0.997|    139.085 RTD|      1.122|      3.715|     92.931|       8|     0|      0.997|    139.085 RTD|      2.045|      3.652|     79.712|       8|     0|      0.997|    139.085 RTD|      2.770|      4.187|     73.857|       8|     0|      0.997|    139.085 RTD|      2.322|      4.195|     65.789|       8|     0|      0.997|    139.085 RTD|      1.922|      4.074|     73.394|       8|     0|      0.997|    139.085 RTD|      2.140|      4.086|     80.850|       8|     0|      0.997|    139.085 RTD|      2.699|      4.229|     84.033|       8|     0|      0.997|    139.085 RTD|      1.637|      4.160|    107.515|       9|     0|      0.997|    139.085 RTD|      1.644|      3.669|    110.322|      10|     0|      0.997|    139.085 RTD|      1.839|      3.709|     72.584|      10|     0|      0.997|    139.085 RTD|      1.941|      4.184|    108.086|      11|     0|      0.997|    139.085 RTD|      2.360|      3.906|     74.402|      11|     0|      0.997|    139.085 RTD|      1.545|      3.627|     41.230|      11|     0|      0.997|    139.085 RTD|      2.084|      3.814|    103.597|      11|     0|      0.997|    139.085 RTD|      1.876|      4.056|     94.054|      11|     0|      0.997|    139.085 RTD|      2.171|      4.093|     73.015|      11|     0|      0.997|    139.085 RTD|      1.863|      4.122|     55.157|      11|     0|      0.997|    139.085 RTD|      2.052|      4.160|     92.607|      11|     0|      0.997|    139.085 RTD|      1.811|      4.100|    124.045|      12|     0|      0.997|    139.085 RTT|  00:01:46  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      1.887|      3.922|    117.810|      13|     0|      0.997|    139.085 RTD|      1.649|      3.669|     72.953|      13|     0|      0.997|    139.085 RTD|      2.204|      3.900|    112.867|      14|     0|      0.997|    139.085 RTD|      2.694|      4.115|    107.655|      15|     0|      0.997|    139.085 RTD|      1.535|      3.790|     69.600|      15|     0|      0.997|    139.085 RTD|      1.829|      3.601|     36.640|      15|     0|      0.997|    139.085 RTD|      1.672|      3.830|     65.168|      15|     0|      0.997|    139.085 RTD|      2.429|      3.976|     69.796|      15|     0|      0.997|    139.085 RTD|      1.610|      3.606|    121.884|      16|     0|      0.997|    139.085 RTD|      1.546|      3.823|     79.027|      16|     0|      0.997|    139.085 RTD|      1.987|      4.202|    120.508|      17|     0|      0.997|    139.085 RTD|      1.744|      4.036|     75.124|      17|     0|      0.997|    139.085 RTD|      2.159|      4.221|    116.281|      19|     0|      0.997|    139.085 RTD|      2.075|      4.073|     86.184|      19|     0|      0.997|    139.085 RTD|      2.064|      4.118|     82.612|      19|     0|      0.997|    139.085 RTD|      2.206|      3.963|    107.228|      20|     0|      0.997|    139.085 RTD|      2.158|      3.583|     60.312|      20|     0|      0.997|    139.085 RTD|      1.544|      3.903|     44.773|      20|     0|      0.997|    139.085 RTD|      2.567|      4.067|    103.022|      20|     0|      0.997|    139.085 RTD|      2.136|      3.856|     71.492|      20|     0|      0.997|    139.085 RTD|      2.057|      3.678|     83.980|      20|     0|      0.997|    139.085 RTT|  00:02:07  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      2.057|      4.186|     65.803|      20|     0|      0.997|    139.085 RTD|      2.129|      4.226|     80.783|      20|     0|      0.997|    139.085 RTD|      1.881|      4.242|    108.076|      21|     0|      0.997|    139.085 RTD|      1.712|      4.247|     79.293|      21|     0|      0.997|    139.085 RTD|      2.031|      4.200|     54.549|      21|     0|      0.997|    139.085 RTD|      2.362|      4.155|     65.363|      21|     0|      0.997|    139.085 RTD|      1.900|      3.788|     69.927|      21|     0|      0.997|    139.085 RTD|      1.627|      3.782|     78.100|      21|     0|      0.997|    139.085 RTD|      1.617|      4.202|    103.951|      21|     0|      0.997|    139.085 RTD|      1.787|      4.222|     70.796|      21|     0|      0.997|    139.085 RTD|      2.126|      3.858|     40.048|      21|     0|      0.997|    139.085 RTD|      2.147|      3.853|     51.541|      21|     0|      0.997|    139.085 RTD|      2.252|      4.253|     67.298|      21|     0|      0.997|    139.085 RTD|      1.962|      4.176|     69.931|      21|     0|      0.997|    139.085 RTD|      1.919|      4.232|     92.041|      21|     0|      0.997|    139.085 RTD|      1.863|      4.036|     59.554|      21|     0|      0.997|    139.085 RTD|      1.327|      4.120|     90.923|      21|     0|      0.997|    139.085 RTD|      2.065|      3.966|     81.292|      21|     0|      0.997|    139.085 RTD|      1.533|      3.605|    115.366|      22|     0|      0.997|    139.085 RTD|      0.986|      3.639|     56.683|      22|     0|      0.986|    139.085 RTD|      2.245|      4.137|     95.664|      22|     0|      0.986|    139.085 RTT|  00:02:28  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      1.934|      3.995|     42.632|      22|     0|      0.986|    139.085 RTD|      1.335|      3.660|     93.935|      22|     0|      0.986|    139.085 RTD|      1.955|      3.711|     39.268|      22|     0|      0.986|    139.085 RTD|      1.986|      3.895|     79.564|      22|     0|      0.986|    139.085 RTD|      1.933|      3.742|     75.566|      22|     0|      0.986|    139.085 RTD|      1.748|      3.599|     77.625|      22|     0|      0.986|    139.085 RTD|      1.870|      3.761|     61.264|      22|     0|      0.986|    139.085 RTD|      2.062|      3.822|     83.628|      22|     0|      0.986|    139.085 RTD|      1.903|      3.615|     53.376|      22|     0|      0.986|    139.085 RTD|      2.622|      3.696|     84.418|      22|     0|      0.986|    139.085 RTD|      1.872|      3.831|     50.551|      22|     0|      0.986|    139.085 RTD|      1.702|      3.609|     53.579|      22|     0|      0.986|    139.085 RTD|      2.648|      3.627|     78.891|      22|     0|      0.986|    139.085 RTD|      2.569|      3.804|    107.525|      23|     0|      0.986|    139.085 RTD|      1.596|      3.754|     77.042|      23|     0|      0.986|    139.085 RTD|      2.137|      3.582|     36.965|      23|     0|      0.986|    139.085 RTD|      1.427|      3.715|     59.496|      23|     0|      0.986|    139.085 RTD|      1.799|      3.837|     88.233|      23|     0|      0.986|    139.085 RTD|      1.521|      3.623|     93.407|      23|     0|      0.986|    139.085 RTD|      1.484|      3.571|     82.967|      23|     0|      0.986|    139.085 RTD|      1.953|      3.803|     44.784|      23|     0|      0.986|    139.085 RTT|  00:02:49  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      1.771|      3.671|     81.999|      23|     0|      0.986|    139.085 RTD|      1.745|      3.580|     37.722|      23|     0|      0.986|    139.085 RTD|      1.631|      3.722|     69.117|      23|     0|      0.986|    139.085 RTD|      1.737|      3.838|     74.339|      23|     0|      0.986|    139.085 RTD|      1.742|      3.627|     95.120|      23|     0|      0.986|    139.085 RTD|      1.938|      3.645|     84.724|      23|     0|      0.986|    139.085 RTD|      1.970|      3.860|     54.360|      23|     0|      0.986|    139.085 RTD|      2.278|      3.669|     41.230|      23|     0|      0.986|    139.085 RTD|      1.609|      3.620|     78.454|      23|     0|      0.986|    139.085 RTD|      1.875|      3.879|     95.814|      23|     0|      0.986|    139.085 RTD|      1.608|      3.847|     50.589|      23|     0|      0.986|    139.085 RTD|      1.889|      3.632|     65.333|      23|     0|      0.986|    139.085 RTD|      2.183|      3.729|     54.568|      23|     0|      0.986|    139.085 RTD|      1.783|      3.877|     71.401|      23|     0|      0.986|    139.085 RTD|      2.302|      3.660|    102.382|      23|     0|      0.986|    139.085 RTD|      2.090|      3.591|     73.882|      23|     0|      0.986|    139.085 RTD|      1.693|      3.950|     57.023|      23|     0|      0.986|    139.085 RTD|      2.143|      3.818|    112.567|      24|     0|      0.986|    139.085 RTD|      1.733|      3.746|     53.964|      24|     0|      0.986|    139.085 RTD|      1.429|      3.841|     85.228|      24|     0|      0.986|    139.085 RTD|      2.257|      4.032|     77.551|      24|     0|      0.986|    139.085 RTT|  00:03:11  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      1.693|      3.826|    102.205|      24|     0|      0.986|    139.085 RTD|      1.792|      3.866|    113.502|      25|     0|      0.986|    139.085 RTD|      2.044|      4.064|     62.447|      25|     0|      0.986|    139.085 RTD|      1.658|      3.887|     49.835|      25|     0|      0.986|    139.085 RTD|      1.385|      3.836|     32.601|      25|     0|      0.986|    139.085 RTD|      1.940|      4.142|    112.196|      25|     0|      0.986|    139.085 RTD|      1.625|      4.081|     55.992|      25|     0|      0.986|    139.085 RTD|      1.651|      3.828|     66.112|      25|     0|      0.986|    139.085 RTD|      1.727|      3.739|     34.572|      25|     0|      0.986|    139.085 RTD|      1.937|      3.999|     73.709|      25|     0|      0.986|    139.085 RTD|      1.806|      3.851|    103.299|      25|     0|      0.986|    139.085 RTD|      2.444|      3.711|     63.219|      25|     0|      0.986|    139.085 RTD|      2.331|      4.010|     69.966|      25|     0|      0.986|    139.085 RTD|      2.025|      4.024|     90.632|      25|     0|      0.986|    139.085 RTD|      2.104|      3.751|     83.672|      25|     0|      0.986|    139.085 RTD|      1.658|      3.771|     48.105|      25|     0|      0.986|    139.085 RTD|      2.473|      3.969|     44.489|      25|     0|      0.986|    139.085 RTD|      1.801|      3.846|    113.299|      26|     0|      0.986|    139.085 RTD|      1.650|      3.714|     67.891|      26|     0|      0.986|    139.085 RTD|      2.029|      3.904|     37.389|      26|     0|      0.986|    139.085 RTD|      1.916|      3.909|     50.117|      26|     0|      0.986|    139.085 RTT|  00:03:32  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      1.811|      3.696|     28.656|      26|     0|      0.986|    139.085 RTD|      2.164|      3.813|     71.951|      26|     0|      0.986|    139.085 RTD|      2.099|      3.975|     72.831|      26|     0|      0.986|    139.085 RTD|      1.942|      3.815|     66.750|      26|     0|      0.986|    139.085 RTD|      2.068|      3.732|     72.465|      26|     0|      0.986|    139.085 RTD|      2.516|      3.913|    112.564|      27|     0|      0.986|    139.085 RTD|      1.420|      3.910|     73.132|      27|     0|      0.986|    139.085 RTD|      1.916|      3.841|     44.150|      27|     0|      0.986|    139.085 RTD|      1.599|      3.965|     73.339|      27|     0|      0.986|    139.085 RTD|      2.370|      4.092|     52.574|      27|     0|      0.986|    139.085 RTD|      2.309|      3.813|    113.058|      28|     0|      0.986|    139.085 RTD|      2.849|      4.005|     66.888|      28|     0|      0.986|    139.085 RTD|      2.090|      4.400|     83.834|      28|     0|      0.986|    139.085 RTD|      2.160|      4.378|     73.343|      28|     0|      0.986|    139.085 RTD|      1.995|      4.293|     56.018|      28|     0|      0.986|    139.085 RTD|      1.909|      4.249|     51.786|      28|     0|      0.986|    139.085 RTD|      2.556|      4.396|     59.459|      28|     0|      0.986|    139.085 RTD|      2.252|      4.297|     66.766|      28|     0|      0.986|    139.085 RTD|      2.223|      3.881|     50.157|      28|     0|      0.986|    139.085 RTD|      2.308|      4.059|     49.137|      28|     0|      0.986|    139.085 RTD|      1.964|      4.354|     71.488|      28|     0|      0.986|    139.085 RTT|  00:03:53  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      2.390|      4.064|    118.901|      29|     0|      0.986|    139.085 RTD|      1.731|      3.802|     50.922|      29|     0|      0.986|    139.085 RTD|      2.172|      4.302|     74.656|      29|     0|      0.986|    139.085 RTD|      2.319|      4.334|     42.687|      29|     0|      0.986|    139.085 RTD|      2.120|      4.379|     44.727|      29|     0|      0.986|    139.085 RTD|      2.273|      4.266|     48.961|      29|     0|      0.986|    139.085 RTD|      1.798|      4.385|     64.507|      29|     0|      0.986|    139.085 RTD|      2.042|      4.316|     83.082|      29|     0|      0.986|    139.085 RTD|      2.282|      4.117|     78.758|      29|     0|      0.986|    139.085 RTD|      1.820|      4.104|    133.091|      30|     0|      0.986|    139.085 RTD|      2.308|      4.417|     91.012|      30|     0|      0.986|    139.085 RTD|      2.297|      4.464|    104.816|      30|     0|      0.986|    139.085 RTD|      2.099|      4.203|     93.079|      30|     0|      0.986|    139.085 RTD|      2.704|      4.115|     90.066|      30|     0|      0.986|    139.085 RTD|      2.860|      4.297|     64.115|      30|     0|      0.986|    139.085 RTD|      1.639|      4.187|     75.462|      30|     0|      0.986|    139.085 RTD|      1.930|      3.956|    106.746|      31|     0|      0.986|    139.085 RTD|      1.605|      3.859|     75.862|      31|     0|      0.986|    139.085 RTD|      2.002|      4.028|     55.909|      31|     0|      0.986|    139.085 RTD|      1.229|      3.815|    125.732|      32|     0|      0.986|    139.085 RTD|      1.524|      3.965|     78.228|      32|     0|      0.986|    139.085 RTT|  00:04:14  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      1.833|      4.023|     89.221|      32|     0|      0.986|    139.085 RTD|      2.407|      4.018|    110.222|      33|     0|      0.986|    139.085 RTD|      2.120|      3.758|     34.947|      33|     0|      0.986|    139.085 RTD|      2.178|      3.776|     51.598|      33|     0|      0.986|    139.085 RTD|      1.767|      3.975|     34.423|      33|     0|      0.986|    139.085 RTD|      2.017|      3.886|     53.090|      33|     0|      0.986|    139.085 RTD|      1.994|      3.781|     32.739|      33|     0|      0.986|    139.085 RTD|      2.032|      3.913|     61.965|      33|     0|      0.986|    139.085 RTD|      1.980|      3.908|     38.992|      33|     0|      0.986|    139.085 RTD|      2.072|      3.801|     27.869|      33|     0|      0.986|    139.085 RTD|      2.694|      3.792|     88.243|      33|     0|      0.986|    139.085 RTD|      2.007|      4.065|     60.940|      33|     0|      0.986|    139.085 RTD|      2.110|      3.843|     62.583|      33|     0|      0.986|    139.085 RTD|      1.853|      3.750|     56.414|      33|     0|      0.986|    139.085 RTD|      1.968|      4.011|     63.943|      33|     0|      0.986|    139.085 RTD|      1.697|      3.918|     87.388|      33|     0|      0.986|    139.085 RTD|      2.123|      3.881|     85.457|      33|     0|      0.986|    139.085 RTD|      2.112|      3.841|     78.799|      33|     0|      0.986|    139.085 RTD|      1.961|      4.030|     60.798|      33|     0|      0.986|    139.085 RTD|      1.950|      3.780|     71.344|      33|     0|      0.986|    139.085 RTD|      1.803|      3.770|    127.534|      33|     0|      0.986|    139.085 RTT|  00:04:35  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      1.972|      3.838|     49.512|      33|     0|      0.986|    139.085 RTD|      1.591|      3.843|     41.394|      33|     0|      0.986|    139.085 RTD|      2.244|      3.710|     60.882|      33|     0|      0.986|    139.085 RTD|      1.798|      3.799|     88.947|      33|     0|      0.986|    139.085 RTD|      1.625|      3.924|     73.649|      33|     0|      0.986|    139.085 RTD|      1.889|      3.762|     72.696|      33|     0|      0.986|    139.085 RTD|      1.732|      3.698|     70.232|      33|     0|      0.986|    139.085 RTD|      2.126|      3.931|     68.270|      33|     0|      0.986|    139.085 RTD|      2.167|      4.052|     69.155|      33|     0|      0.986|    139.085 RTD|      1.782|      3.785|    109.467|      34|     0|      0.986|    139.085 RTD|      2.117|      3.962|     49.442|      34|     0|      0.986|    139.085 RTD|      2.859|      4.289|     78.265|      34|     0|      0.986|    139.085 RTD|      2.137|      4.254|    109.854|      35|     0|      0.986|    139.085 RTD|      2.095|      4.280|     77.532|      35|     0|      0.986|    139.085 RTD|      2.535|      4.191|     81.208|      35|     0|      0.986|    139.085 RTD|      2.200|      4.303|    108.002|      36|     0|      0.986|    139.085 RTD|      1.764|      3.843|     82.056|      36|     0|      0.986|    139.085 RTD|      2.104|      3.909|    105.026|      36|     0|      0.986|    139.085 RTD|      1.789|      4.266|     40.568|      36|     0|      0.986|    139.085 RTD|      1.948|      4.239|     87.974|      36|     0|      0.986|    139.085 RTD|      2.124|      3.868|    119.987|      37|     0|      0.986|    139.085 RTT|  00:04:56  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      1.914|      3.797|    107.726|      38|     0|      0.986|    139.085 RTD|      2.563|      4.241|     70.664|      38|     0|      0.986|    139.085 RTD|      2.262|      4.212|     55.680|      38|     0|      0.986|    139.085 RTD|      1.914|      4.292|     89.370|      38|     0|      0.986|    139.085 RTD|      2.093|      4.379|    120.914|      39|     0|      0.986|    139.085 RTD|      1.900|      4.407|    107.998|      40|     0|      0.986|    139.085 RTD|      2.138|      4.299|     59.182|      40|     0|      0.986|    139.085 RTD|      1.926|      3.851|     75.602|      40|     0|      0.986|    139.085 RTD|      1.550|      3.998|     68.980|      40|     0|      0.986|    139.085 RTD|      2.094|      4.503|     93.803|      40|     0|      0.986|    139.085 RTD|      2.025|      4.087|     67.133|      40|     0|      0.986|    139.085 RTD|      1.739|      3.864|     96.815|      40|     0|      0.986|    139.085 RTD|      2.290|      4.108|     64.566|      40|     0|      0.986|    139.085 RTD|      2.066|      4.398|    106.514|      41|     0|      0.986|    139.085 RTD|      2.849|      4.325|    122.601|      42|     0|      0.986|    139.085 RTD|      1.869|      4.331|     54.321|      42|     0|      0.986|    139.085 RTD|      1.999|      4.315|     70.367|      42|     0|      0.986|    139.085 RTD|      2.196|      4.328|     38.206|      42|     0|      0.986|    139.085 RTD|      2.139|      4.064|    115.066|      43|     0|      0.986|    139.085 RTD|      1.706|      3.869|    119.502|      44|     0|      0.986|    139.085 RTD|      1.802|      4.201|     58.335|      44|     0|      0.986|    139.085 RTT|  00:05:17  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      2.623|      4.348|     86.427|      44|     0|      0.986|    139.085 RTD|      1.781|      4.018|     77.217|      44|     0|      0.986|    139.085 RTD|      1.869|      3.847|     97.443|      44|     0|      0.986|    139.085 RTD|      2.271|      3.960|     35.021|      44|     0|      0.986|    139.085 RTD|      1.949|      4.097|     87.624|      44|     0|      0.986|    139.085 RTD|      1.704|      3.874|    144.279|      45|     0|      0.986|    144.279 RTD|      2.003|      3.909|     66.337|      45|     0|      0.986|    144.279 RTD|      2.167|      4.146|    128.497|      46|     0|      0.986|    144.279 RTD|      1.690|      3.868|    106.757|      47|     0|      0.986|    144.279 RTD|      2.310|      3.863|     68.459|      47|     0|      0.986|    144.279 RTD|      2.142|      4.190|     72.702|      47|     0|      0.986|    144.279 RTD|      1.680|      4.044|     68.320|      47|     0|      0.986|    144.279 RTD|      1.755|      3.883|    106.878|      48|     0|      0.986|    144.279 RTD|      2.276|      3.975|     67.147|      48|     0|      0.986|    144.279 RTD|      2.114|      4.131|     75.685|      48|     0|      0.986|    144.279 RTD|      1.949|      3.916|     71.395|      48|     0|      0.986|    144.279 RTD|      2.057|      3.871|     67.530|      48|     0|      0.986|    144.279 RTD|      2.088|      4.258|    110.855|      49|     0|      0.986|    144.279 RTD|      2.072|      4.036|     76.260|      49|     0|      0.986|    144.279 RTD|      1.816|      3.869|     40.756|      49|     0|      0.986|    144.279 RTD|      2.292|      4.356|     86.247|      49|     0|      0.986|    144.279 RTT|  00:05:38  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      1.709|      4.327|     42.504|      49|     0|      0.986|    144.279 RTD|      2.533|      4.316|    116.979|      50|     0|      0.986|    144.279 RTD|      2.222|      4.295|     84.071|      50|     0|      0.986|    144.279 RTD|      2.052|      4.442|    108.231|      51|     0|      0.986|    144.279 RTD|      2.211|      4.493|    131.669|      52|     0|      0.986|    144.279 RTD|      2.075|      3.988|    137.535|      53|     0|      0.986|    144.279 RTD|      2.278|      3.906|    125.534|      54|     0|      0.986|    144.279 RTD|      2.132|      4.417|    120.662|      55|     0|      0.986|    144.279 RTD|      1.899|      4.296|     72.849|      55|     0|      0.986|    144.279 RTD|      2.294|      3.975|     64.361|      55|     0|      0.986|    144.279 RTD|      1.740|      3.988|     61.881|      55|     0|      0.986|    144.279 RTD|      2.351|      4.442|     51.795|      55|     0|      0.986|    144.279 RTD|      2.317|      4.365|    110.368|      56|     0|      0.986|    144.279 RTD|      2.066|      4.380|     78.513|      56|     0|      0.986|    144.279 RTD|      2.027|      4.278|     79.085|      56|     0|      0.986|    144.279 RTD|      2.188|      4.281|     69.640|      56|     0|      0.986|    144.279 RTD|      1.918|      4.195|     27.554|      56|     0|      0.986|    144.279 RTD|      1.743|      3.809|     86.064|      56|     0|      0.986|    144.279 RTD|      2.031|      3.793|     49.936|      56|     0|      0.986|    144.279 RTD|      2.691|      4.435|     83.218|      56|     0|      0.986|    144.279 RTD|      1.726|      4.203|     83.529|      56|     0|      0.986|    144.279 RTT|  00:05:59  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      2.586|      3.893|     49.001|      56|     0|      0.986|    144.279 RTD|      1.960|      4.179|    122.786|      57|     0|      0.986|    144.279 RTD|      1.998|      4.324|     78.426|      57|     0|      0.986|    144.279 RTD|      1.719|      4.380|     89.385|      57|     0|      0.986|    144.279 RTD|      2.048|      4.344|    110.746|      58|     0|      0.986|    144.279 RTD|      1.617|      4.314|     77.675|      58|     0|      0.986|    144.279 RTD|      2.413|      4.290|     71.079|      58|     0|      0.986|    144.279 RTD|      1.687|      4.189|     68.631|      58|     0|      0.986|    144.279 RTD|      2.212|      3.887|    116.577|      59|     0|      0.986|    144.279 RTD|      2.451|      4.268|    116.836|      60|     0|      0.986|    144.279 RTD|      1.769|      4.383|     38.566|      60|     0|      0.986|    144.279 RTD|      1.774|      4.073|     37.941|      60|     0|      0.986|    144.279 RTD|      2.066|      3.887|     80.056|      60|     0|      0.986|    144.279 RTD|      1.944|      4.015|    122.207|      61|     0|      0.986|    144.279 RTD|      2.359|      4.175|     97.476|      61|     0|      0.986|    144.279 RTD|      1.788|      3.880|     62.260|      61|     0|      0.986|    144.279 RTD|      1.889|      3.904|    109.469|      62|     0|      0.986|    144.279 RTD|      2.106|      4.119|     30.967|      62|     0|      0.986|    144.279 RTD|      1.723|      3.938|     67.326|      62|     0|      0.986|    144.279 RTD|      2.214|      3.855|     49.161|      62|     0|      0.986|    144.279 RTD|      1.884|      3.996|    126.178|      63|     0|      0.986|    144.279 RTT|  00:06:20  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      2.421|      3.938|    107.526|      64|     0|      0.986|    144.279 RTD|      1.703|      3.714|     94.398|      64|     0|      0.986|    144.279 RTD|      1.731|      3.789|     77.348|      64|     0|      0.986|    144.279 RTD|      1.930|      3.958|     51.531|      64|     0|      0.986|    144.279 RTD|      2.105|      3.790|     66.454|      64|     0|      0.986|    144.279 RTD|      1.720|      3.758|     75.452|      64|     0|      0.986|    144.279 RTD|      1.792|      4.051|     92.793|      64|     0|      0.986|    144.279 RTD|      1.789|      4.014|     72.642|      64|     0|      0.986|    144.279 RTD|      2.271|      3.898|     56.109|      64|     0|      0.986|    144.279 RTD|      2.591|      3.939|     50.475|      64|     0|      0.986|    144.279 RTD|      1.770|      4.001|     61.755|      64|     0|      0.986|    144.279 RTD|      1.730|      3.872|     89.404|      64|     0|      0.986|    144.279 RTD|      1.922|      3.858|     86.205|      64|     0|      0.986|    144.279 RTD|      2.004|      4.063|     76.689|      64|     0|      0.986|    144.279 RTD|      1.427|      3.960|     80.881|      64|     0|      0.986|    144.279 RTD|      1.937|      3.794|     23.367|      64|     0|      0.986|    144.279 RTD|      1.683|      3.944|     25.409|      64|     0|      0.986|    144.279 RTD|      1.943|      4.096|     72.118|      64|     0|      0.986|    144.279 RTD|      1.788|      3.858|     81.148|      64|     0|      0.986|    144.279 RTD|      2.159|      3.852|     48.194|      64|     0|      0.986|    144.279 RTD|      2.581|      4.028|     60.470|      64|     0|      0.986|    144.279 RTT|  00:06:41  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      2.542|      3.921|     90.750|      64|     0|      0.986|    144.279 RTD|      1.823|      3.732|     72.400|      64|     0|      0.986|    144.279 RTD|      1.801|      3.893|     68.365|      64|     0|      0.986|    144.279 RTD|      1.989|      3.962|    108.737|      65|     0|      0.986|    144.279 RTD|      1.633|      3.835|     97.448|      65|     0|      0.986|    144.279 RTD|      1.716|      3.923|     96.642|      65|     0|      0.986|    144.279 RTD|      2.157|      4.036|     21.597|      65|     0|      0.986|    144.279 RTD|      1.935|      3.844|     36.244|      65|     0|      0.986|    144.279 RTD|      1.792|      3.794|    127.259|      66|     0|      0.986|    144.279 RTD|      2.475|      4.040|     52.785|      66|     0|      0.986|    144.279 RTD|      1.695|      4.004|     67.909|      66|     0|      0.986|    144.279 RTD|      1.750|      3.871|     52.962|      66|     0|      0.986|    144.279 RTD|      1.789|      3.996|     43.586|      66|     0|      0.986|    144.279 RTD|      2.375|      4.078|     72.293|      66|     0|      0.986|    144.279 RTD|      1.972|      3.833|     86.200|      66|     0|      0.986|    144.279 RTD|      2.068|      3.855|     47.856|      66|     0|      0.986|    144.279 RTD|      2.251|      4.128|     67.092|      66|     0|      0.986|    144.279 RTD|      2.194|      3.969|     74.570|      66|     0|      0.986|    144.279 RTD|      2.286|      3.872|     86.809|      66|     0|      0.986|    144.279 RTD|      1.903|      3.960|     92.632|      66|     0|      0.986|    144.279 RTD|      2.106|      4.069|    113.773|      67|     0|      0.986|    144.279 RTT|  00:07:02  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      2.748|      3.829|     14.113|      67|     0|      0.986|    144.279 RTD|      2.103|      3.927|    104.443|      67|     0|      0.986|    144.279 RTD|      1.691|      4.103|     60.368|      67|     0|      0.986|    144.279 RTD|      1.743|      3.892|     64.620|      67|     0|      0.986|    144.279 RTD|      1.914|      3.854|     48.559|      67|     0|      0.986|    144.279 RTD|      2.074|      4.105|    106.648|      68|     0|      0.986|    144.279 RTD|      1.246|      4.098|     60.477|      68|     0|      0.986|    144.279 RTD|      1.710|      3.872|     81.091|      68|     0|      0.986|    144.279 RTD|      2.380|      3.959|     64.328|      68|     0|      0.986|    144.279 RTD|      1.926|      4.073|     58.408|      68|     0|      0.986|    144.279 RTD|      2.008|      3.874|     56.288|      68|     0|      0.986|    144.279 RTD|      1.812|      3.892|     71.590|      68|     0|      0.986|    144.279 RTD|      1.929|      4.013|     42.021|      68|     0|      0.986|    144.279 RTD|      2.084|      3.844|    110.858|      69|     0|      0.986|    144.279 RTD|      1.742|      3.717|     52.670|      69|     0|      0.986|    144.279 RTD|      2.221|      3.913|     73.617|      69|     0|      0.986|    144.279 RTD|      1.760|      3.931|     88.698|      69|     0|      0.986|    144.279 RTD|      1.975|      3.739|     69.742|      69|     0|      0.986|    144.279 RTD|      1.650|      3.800|     68.626|      69|     0|      0.986|    144.279 RTD|      1.763|      3.931|     80.696|      69|     0|      0.986|    144.279 RTD|      2.221|      3.795|     76.229|      69|     0|      0.986|    144.279 RTT|  00:07:23  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      2.342|      3.704|     31.625|      69|     0|      0.986|    144.279 RTD|      2.390|      3.956|     66.070|      69|     0|      0.986|    144.279 RTD|      1.883|      3.903|     66.826|      69|     0|      0.986|    144.279 RTD|      2.372|      3.734|     61.946|      69|     0|      0.986|    144.279 RTD|      1.840|      3.843|     31.406|      69|     0|      0.986|    144.279 RTD|      1.674|      3.934|     78.915|      69|     0|      0.986|    144.279 RTD|      1.765|      3.698|     66.766|      69|     0|      0.986|    144.279 RTD|      2.184|      3.684|     51.015|      69|     0|      0.986|    144.279 RTD|      1.977|      3.985|     43.751|      69|     0|      0.986|    144.279 RTD|      1.839|      3.869|     57.179|      69|     0|      0.986|    144.279 RTD|      1.700|      3.685|     48.322|      69|     0|      0.986|    144.279 RTD|      2.110|      3.844|     91.386|      69|     0|      0.986|    144.279 RTD|      1.938|      3.898|    106.618|      70|     0|      0.986|    144.279 RTD|      2.694|      3.719|     34.268|      70|     0|      0.986|    144.279 RTD|      1.825|      3.758|    103.711|      70|     0|      0.986|    144.279 RTD|      1.939|      4.111|    107.222|      71|     0|      0.986|    144.279 RTD|      1.988|      3.880|     57.605|      71|     0|      0.986|    144.279 RTD|      1.575|      3.766|     65.857|      71|     0|      0.986|    144.279 RTD|      0.969|      4.025|     56.525|      71|     0|      0.969|    144.279 RTD|      2.032|      4.221|     42.657|      71|     0|      0.969|    144.279 RTD|      1.705|      3.890|    123.268|      72|     0|      0.969|    144.279 RTT|  00:07:44  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      1.679|      3.893|     53.832|      72|     0|      0.969|    144.279 RTD|      1.944|      4.232|     68.979|      72|     0|      0.969|    144.279 RTD|      1.881|      3.961|    136.126|      73|     0|      0.969|    144.279 RTD|      1.861|      3.925|     78.728|      73|     0|      0.969|    144.279 RTD|      1.833|      4.022|     91.287|      73|     0|      0.969|    144.279 RTD|      2.150|      4.138|     67.807|      73|     0|      0.969|    144.279 RTD|      2.044|      3.907|    134.131|      74|     0|      0.969|    144.279 RTD|      1.895|      3.862|     47.609|      74|     0|      0.969|    144.279 RTD|      2.306|      4.104|     48.022|      74|     0|      0.969|    144.279 RTD|      1.845|      3.999|     48.768|      74|     0|      0.969|    144.279 RTD|      2.314|      3.877|     57.981|      74|     0|      0.969|    144.279 RTD|      2.194|      4.102|     85.707|      74|     0|      0.969|    144.279 RTD|      2.261|      4.120|     55.220|      74|     0|      0.969|    144.279 RTD|      1.924|      3.860|     45.734|      74|     0|      0.969|    144.279 RTD|      1.878|      3.961|    103.454|      74|     0|      0.969|    144.279 RTD|      1.880|      4.108|     46.288|      74|     0|      0.969|    144.279 RTD|      2.003|      3.909|     58.076|      74|     0|      0.969|    144.279 RTD|      1.260|      3.792|     49.953|      74|     0|      0.969|    144.279 RTD|      1.953|      3.924|     84.225|      74|     0|      0.969|    144.279 RTD|      1.699|      3.909|     29.681|      74|     0|      0.969|    144.279 RTD|      1.738|      3.853|     18.574|      74|     0|      0.969|    144.279 RTT|  00:08:05  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      2.541|      3.985|     40.238|      74|     0|      0.969|    144.279 RTD|      1.880|      4.132|    103.693|      74|     0|      0.969|    144.279 RTD|      1.751|      3.892|     79.001|      74|     0|      0.969|    144.279 RTD|      2.098|      3.910|     92.354|      74|     0|      0.969|    144.279 RTD|      2.115|      4.182|     57.814|      74|     0|      0.969|    144.279 RTD|      1.648|      4.039|    107.111|      75|     0|      0.969|    144.279 RTD|      2.023|      3.879|     73.250|      75|     0|      0.969|    144.279 RTD|      2.104|      3.972|     63.864|      75|     0|      0.969|    144.279 RTD|      2.247|      4.093|    457.545|      83|     0|      0.969|    457.545 RTD|      2.479|      3.741|    110.422|      84|     0|      0.969|    457.545 RTD|      1.787|      3.734|     98.523|      84|     0|      0.969|    457.545 RTD|      2.016|      4.171|     52.179|      84|     0|      0.969|    457.545 RTD|      1.943|      3.958|     89.806|      84|     0|      0.969|    457.545 RTD|      2.524|      3.833|     44.743|      84|     0|      0.969|    457.545 RTD|      2.478|      4.018|     90.029|      84|     0|      0.969|    457.545 RTD|      1.857|      3.997|     37.661|      84|     0|      0.969|    457.545 RTD|      1.661|      3.753|     30.156|      84|     0|      0.969|    457.545 RTD|      1.739|      3.819|     85.182|      84|     0|      0.969|    457.545 RTD|      2.196|      4.079|    166.223|      85|     0|      0.969|    457.545 RTD|      1.846|      3.804|     57.706|      85|     0|      0.969|    457.545 RTD|      1.859|      3.722|    104.344|      86|     0|      0.969|    457.545 RTT|  00:08:26  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      2.488|      3.960|     39.167|      86|     0|      0.969|    457.545 RTD|      2.034|      3.884|     49.276|      86|     0|      0.969|    457.545 RTD|      2.009|      3.873|     46.343|      86|     0|      0.969|    457.545 RTD|      2.084|      4.006|     58.438|      86|     0|      0.969|    457.545 RTD|      2.526|      4.124|     67.866|      86|     0|      0.969|    457.545 RTD|      2.157|      3.891|    106.923|      87|     0|      0.969|    457.545 RTD|      1.712|      3.850|     43.884|      87|     0|      0.969|    457.545 RTD|      1.961|      4.096|     59.617|      87|     0|      0.969|    457.545 RTD|      2.143|      3.887|    106.285|      88|     0|      0.969|    457.545 RTD|      1.630|      3.783|     70.462|      88|     0|      0.969|    457.545 RTD|      1.812|      4.068|    123.701|      89|     0|      0.969|    457.545 RTD|      1.973|      4.160|    119.541|      90|     0|      0.969|    457.545 RTD|      1.855|      3.938|     72.979|      90|     0|      0.969|    457.545 RTD|      2.074|      3.923|     82.920|      90|     0|      0.969|    457.545 RTD|      1.794|      4.121|     43.991|      90|     0|      0.969|    457.545 RTD|      2.130|      4.064|     93.965|      90|     0|      0.969|    457.545 RTD|      1.853|      3.840|     40.478|      90|     0|      0.969|    457.545 RTD|      1.844|      4.079|     83.905|      90|     0|      0.969|    457.545 RTD|      1.890|      4.130|     57.914|      90|     0|      0.969|    457.545 RTD|      1.925|      3.882|     67.751|      90|     0|      0.969|    457.545 RTD|      1.692|      3.859|     83.199|      90|     0|      0.969|    457.545 RTT|  00:08:47  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      1.826|      4.227|     85.347|      90|     0|      0.969|    457.545 RTD|      0.969|      4.030|     92.876|      90|     0|      0.969|    457.545 RTD|      1.932|      3.875|     82.210|      90|     0|      0.969|    457.545 RTD|      1.694|      4.025|     50.786|      90|     0|      0.969|    457.545 RTD|      1.972|      4.068|     69.795|      90|     0|      0.969|    457.545 RTD|      2.257|      3.875|     76.092|      90|     0|      0.969|    457.545 RTD|      2.349|      3.942|     71.850|      90|     0|      0.969|    457.545 RTD|      2.395|      4.153|     88.652|      90|     0|      0.969|    457.545 RTD|      1.979|      3.930|     41.314|      90|     0|      0.969|    457.545 RTD|      2.106|      3.868|     78.764|      90|     0|      0.969|    457.545 RTD|      2.240|      4.095|     54.940|      90|     0|      0.969|    457.545 RTD|      2.105|      4.101|     91.558|      90|     0|      0.969|    457.545 RTD|      2.013|      3.831|     78.710|      90|     0|      0.969|    457.545 RTD|      2.168|      4.088|     59.173|      90|     0|      0.969|    457.545 RTD|      1.944|      4.273|     90.462|      90|     0|      0.969|    457.545 RTD|      1.246|      4.293|     75.604|      90|     0|      0.969|    457.545 RTD|      2.036|      4.269|     75.900|      90|     0|      0.969|    457.545 RTD|      2.474|      4.260|     73.295|      90|     0|      0.969|    457.545 RTD|      2.411|      4.358|     83.576|      90|     0|      0.969|    457.545 RTD|      2.590|      4.279|    116.833|      91|     0|      0.969|    457.545 RTD|      1.882|      4.325|     32.506|      91|     0|      0.969|    457.545 RTT|  00:09:08  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      2.322|      4.576|     74.130|      91|     0|      0.969|    457.545 RTD|      2.877|      4.492|    108.902|      92|     0|      0.969|    457.545 RTD|      1.776|      4.483|     83.557|      92|     0|      0.969|    457.545 RTD|      2.456|      4.416|     80.981|      92|     0|      0.969|    457.545 RTD|      2.084|      4.477|     65.893|      92|     0|      0.969|    457.545 RTD|      2.172|      4.240|     84.083|      92|     0|      0.969|    457.545 RTD|      1.943|      3.865|     80.148|      92|     0|      0.969|    457.545 RTD|      1.968|      4.186|     88.848|      92|     0|      0.969|    457.545 RTD|      2.691|      4.475|     61.080|      92|     0|      0.969|    457.545 RTD|      2.182|      4.149|     91.944|      92|     0|      0.969|    457.545 RTD|      1.946|      3.873|     61.030|      92|     0|      0.969|    457.545 RTD|      2.678|      3.999|     95.015|      92|     0|      0.969|    457.545 RTD|      2.161|      4.149|     71.116|      92|     0|      0.969|    457.545 RTD|      2.343|      3.968|     65.975|      92|     0|      0.969|    457.545 RTD|      2.064|      3.882|     84.773|      92|     0|      0.969|    457.545 RTD|      1.968|      4.074|     93.957|      92|     0|      0.969|    457.545 RTD|      1.971|      4.050|    106.928|      93|     0|      0.969|    457.545 RTD|      1.695|      3.851|     59.076|      93|     0|      0.969|    457.545 RTD|      2.475|      3.967|     52.081|      93|     0|      0.969|    457.545 RTD|      2.051|      4.089|     63.749|      93|     0|      0.969|    457.545 RTD|      1.648|      3.884|     36.807|      93|     0|      0.969|    457.545 RTT|  00:09:29  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      2.129|      3.866|     24.182|      93|     0|      0.969|    457.545 RTD|      2.161|      4.090|     54.097|      93|     0|      0.969|    457.545 RTD|      2.132|      3.992|     72.997|      93|     0|      0.969|    457.545 RTD|      1.882|      3.865|     76.399|      93|     0|      0.969|    457.545 RTD|      1.900|      3.873|     47.241|      93|     0|      0.969|    457.545 RTD|      1.712|      3.954|     62.631|      93|     0|      0.969|    457.545 RTD|      1.906|      3.873|     74.643|      93|     0|      0.969|    457.545 RTD|      1.851|      3.905|     50.340|      93|     0|      0.969|    457.545 RTD|      1.722|      4.079|     30.887|      93|     0|      0.969|    457.545 RTD|      1.820|      3.946|     93.059|      93|     0|      0.969|    457.545 RTD|      1.722|      3.874|    105.172|      94|     0|      0.969|    457.545 RTD|      2.043|      4.028|     29.913|      94|     0|      0.969|    457.545 RTD|      1.990|      4.031|     69.146|      94|     0|      0.969|    457.545 RTD|      1.714|      3.883|     84.525|      94|     0|      0.969|    457.545 RTD|      2.238|      3.942|     35.011|      94|     0|      0.969|    457.545 RTD|      2.523|      4.146|     59.502|      94|     0|      0.969|    457.545 RTD|      1.891|      3.972|     76.837|      94|     0|      0.969|    457.545 RTD|      2.494|      3.921|     96.620|      94|     0|      0.969|    457.545 RTD|      1.737|      4.146|     91.794|      94|     0|      0.969|    457.545 RTD|      2.462|      4.053|     82.425|      94|     0|      0.969|    457.545 RTD|      2.014|      3.911|     80.435|      94|     0|      0.969|    457.545 RTT|  00:09:50  (periodic user-mode task, 100 us period, priority 99) RTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst RTD|      1.726|      3.973|     61.099|      94|     0|      0.969|    457.545 RTD|      1.842|      4.161|     93.228|      94|     0|      0.969|    457.545 RTD|      1.697|      3.988|     75.653|      94|     0|      0.969|    457.545 RTD|      1.817|      3.899|     81.362|      94|     0|      0.969|    457.545 RTD|      2.286|      4.104|     87.391|      94|     0|      0.969|    457.545 RTD|      1.764|      4.025|     49.934|      94|     0|      0.969|    457.545 RTD|      2.004|      3.858|     55.627|      94|     0|      0.969|    457.545 RTD|      1.806|      3.929|     84.398|      94|     0|      0.969|    457.545 RTD|      1.646|      4.136|     87.006|      94|     0|      0.969|    457.545 RTD|      1.664|      4.030|     80.194|      94|     0|      0.969|    457.545 RTD|      1.908|      3.939|     73.888|      94|     0|      0.969|    457.545 ---|--param|----range-|--samples HSD|    min|   0 -  1 |        4 HSD|    min|   1 -  2 |      340 HSD|    min|   2 -  3 |      255 ---|--param|----range-|--samples HSD|    avg|   0 -  1 |        4 HSD|    avg|   1 -  2 |      546 HSD|    avg|   2 -  3 |    84067 HSD|    avg|   3 -  4 |  3771289 HSD|    avg|   4 -  5 |  2048762 HSD|    avg|   5 -  6 |    53217 HSD|    avg|   6 -  7 |    15375 HSD|    avg|   7 -  8 |     8594 HSD|    avg|   8 -  9 |     5174 HSD|    avg|   9 - 10 |     2708 HSD|    avg|  10 - 11 |     1707 HSD|    avg|  11 - 12 |     1253 HSD|    avg|  12 - 13 |      897 HSD|    avg|  13 - 14 |      745 HSD|    avg|  14 - 15 |      647 HSD|    avg|  15 - 16 |      579 HSD|    avg|  16 - 17 |      498 HSD|    avg|  17 - 18 |      302 HSD|    avg|  18 - 19 |      221 HSD|    avg|  19 - 20 |      182 HSD|    avg|  20 - 21 |      165 HSD|    avg|  21 - 22 |      145 HSD|    avg|  22 - 23 |      133 HSD|    avg|  23 - 24 |      133 HSD|    avg|  24 - 25 |      126 HSD|    avg|  25 - 26 |      108 HSD|    avg|  26 - 27 |      106 HSD|    avg|  27 - 28 |      111 HSD|    avg|  28 - 29 |       80 HSD|    avg|  29 - 30 |       94 HSD|    avg|  30 - 31 |       68 HSD|    avg|  31 - 32 |       60 HSD|    avg|  32 - 33 |       74 HSD|    avg|  33 - 34 |       80 HSD|    avg|  34 - 35 |       63 HSD|    avg|  35 - 36 |       52 HSD|    avg|  36 - 37 |       55 HSD|    avg|  37 - 38 |       51 HSD|    avg|  38 - 39 |       53 HSD|    avg|  39 - 40 |       62 HSD|    avg|  40 - 41 |       48 HSD|    avg|  41 - 42 |       39 HSD|    avg|  42 - 43 |       50 HSD|    avg|  43 - 44 |       41 HSD|    avg|  44 - 45 |       32 HSD|    avg|  45 - 46 |       28 HSD|    avg|  46 - 47 |       42 HSD|    avg|  47 - 48 |       31 HSD|    avg|  48 - 49 |       34 HSD|    avg|  49 - 50 |       34 HSD|    avg|  50 - 51 |       27 HSD|    avg|  51 - 52 |       21 HSD|    avg|  52 - 53 |       25 HSD|    avg|  53 - 54 |       34 HSD|    avg|  54 - 55 |       24 HSD|    avg|  55 - 56 |       23 HSD|    avg|  56 - 57 |       30 HSD|    avg|  57 - 58 |       34 HSD|    avg|  58 - 59 |       30 HSD|    avg|  59 - 60 |       29 HSD|    avg|  60 - 61 |       23 HSD|    avg|  61 - 62 |       21 HSD|    avg|  62 - 63 |       15 HSD|    avg|  63 - 64 |       19 HSD|    avg|  64 - 65 |       16 HSD|    avg|  65 - 66 |       27 HSD|    avg|  66 - 67 |       21 HSD|    avg|  67 - 68 |       18 HSD|    avg|  68 - 69 |       20 HSD|    avg|  69 - 70 |       21 HSD|    avg|  70 - 71 |       19 HSD|    avg|  71 - 72 |       23 HSD|    avg|  72 - 73 |       23 HSD|    avg|  73 - 74 |       22 HSD|    avg|  74 - 75 |       16 HSD|    avg|  75 - 76 |       22 HSD|    avg|  76 - 77 |       14 HSD|    avg|  77 - 78 |       14 HSD|    avg|  78 - 79 |       21 HSD|    avg|  79 - 80 |        8 HSD|    avg|  80 - 81 |       18 HSD|    avg|  81 - 82 |       12 HSD|    avg|  82 - 83 |       11 HSD|    avg|  83 - 84 |       13 HSD|    avg|  84 - 85 |       12 HSD|    avg|  85 - 86 |        6 HSD|    avg|  86 - 87 |        7 HSD|    avg|  87 - 88 |        6 HSD|    avg|  88 - 89 |        8 HSD|    avg|  89 - 90 |        9 HSD|    avg|  90 - 91 |        9 HSD|    avg|  91 - 92 |        7 HSD|    avg|  92 - 93 |        8 HSD|    avg|  93 - 94 |        8 HSD|    avg|  94 - 95 |        4 HSD|    avg|  95 - 96 |        4 HSD|    avg|  96 - 97 |        8 HSD|    avg|  97 - 98 |        5 HSD|    avg|  98 - 99 |        1 HSD|    avg|  99 -100 |        1 HSD|    avg| 102 -103 |        2 HSD|    avg| 103 -104 |        7 HSD|    avg| 104 -105 |        3 HSD|    avg| 105 -106 |        4 HSD|    avg| 106 -107 |        9 HSD|    avg| 107 -108 |       12 HSD|    avg| 108 -109 |        6 HSD|    avg| 109 -110 |        3 HSD|    avg| 110 -111 |        7 HSD|    avg| 112 -113 |        4 HSD|    avg| 113 -114 |        4 HSD|    avg| 115 -116 |        3 HSD|    avg| 116 -117 |        6 HSD|    avg| 117 -118 |        1 HSD|    avg| 118 -119 |        1 HSD|    avg| 119 -120 |        3 HSD|    avg| 120 -121 |        3 HSD|    avg| 121 -122 |        1 HSD|    avg| 122 -123 |        3 HSD|    avg| 123 -124 |        2 HSD|    avg| 124 -125 |        1 HSD|    avg| 125 -126 |        2 HSD|    avg| 126 -127 |        1 HSD|    avg| 127 -128 |        2 HSD|    avg| 128 -129 |        1 HSD|    avg| 131 -132 |        1 HSD|    avg| 133 -134 |        1 HSD|    avg| 134 -135 |        1 HSD|    avg| 136 -137 |        1 HSD|    avg| 137 -138 |        1 HSD|    avg| 138 -139 |        1 HSD|    avg| 139 -140 |        1 HSD|    avg| 144 -145 |        1 HSD|    avg| 166 -167 |        1 HSD|    avg| 208 -209 |        1 HSD|    avg| 263 -264 |        1 HSD|    avg| 299 -300 |        1 ---|--param|----range-|--samples HSD|    max|  14 - 15 |        1 HSD|    max|  18 - 19 |        1 HSD|    max|  19 - 20 |        1 HSD|    max|  21 - 22 |        1 HSD|    max|  22 - 23 |        1 HSD|    max|  23 - 24 |        1 HSD|    max|  24 - 25 |        1 HSD|    max|  25 - 26 |        1 HSD|    max|  27 - 28 |        3 HSD|    max|  28 - 29 |        2 HSD|    max|  29 - 30 |        2 HSD|    max|  30 - 31 |        4 HSD|    max|  31 - 32 |        3 HSD|    max|  32 - 33 |        3 HSD|    max|  34 - 35 |        4 HSD|    max|  35 - 36 |        3 HSD|    max|  36 - 37 |        6 HSD|    max|  37 - 38 |        5 HSD|    max|  38 - 39 |        3 HSD|    max|  39 - 40 |        3 HSD|    max|  40 - 41 |        5 HSD|    max|  41 - 42 |        4 HSD|    max|  42 - 43 |        5 HSD|    max|  43 - 44 |        7 HSD|    max|  44 - 45 |        7 HSD|    max|  45 - 46 |        1 HSD|    max|  46 - 47 |        5 HSD|    max|  47 - 48 |        4 HSD|    max|  48 - 49 |        7 HSD|    max|  49 - 50 |       11 HSD|    max|  50 - 51 |        8 HSD|    max|  51 - 52 |        6 HSD|    max|  52 - 53 |        8 HSD|    max|  53 - 54 |        5 HSD|    max|  54 - 55 |        6 HSD|    max|  55 - 56 |        7 HSD|    max|  56 - 57 |        8 HSD|    max|  57 - 58 |        8 HSD|    max|  58 - 59 |        6 HSD|    max|  59 - 60 |        9 HSD|    max|  60 - 61 |        8 HSD|    max|  61 - 62 |       10 HSD|    max|  62 - 63 |        5 HSD|    max|  63 - 64 |        7 HSD|    max|  64 - 65 |        7 HSD|    max|  65 - 66 |       12 HSD|    max|  66 - 67 |       10 HSD|    max|  67 - 68 |       11 HSD|    max|  68 - 69 |       10 HSD|    max|  69 - 70 |       13 HSD|    max|  70 - 71 |        7 HSD|    max|  71 - 72 |       13 HSD|    max|  72 - 73 |       15 HSD|    max|  73 - 74 |       14 HSD|    max|  74 - 75 |        8 HSD|    max|  75 - 76 |       12 HSD|    max|  76 - 77 |        6 HSD|    max|  77 - 78 |        8 HSD|    max|  78 - 79 |       14 HSD|    max|  79 - 80 |        7 HSD|    max|  80 - 81 |       13 HSD|    max|  81 - 82 |        7 HSD|    max|  82 - 83 |        6 HSD|    max|  83 - 84 |       13 HSD|    max|  84 - 85 |        9 HSD|    max|  85 - 86 |        5 HSD|    max|  86 - 87 |        7 HSD|    max|  87 - 88 |        5 HSD|    max|  88 - 89 |        7 HSD|    max|  89 - 90 |        5 HSD|    max|  90 - 91 |        7 HSD|    max|  91 - 92 |        7 HSD|    max|  92 - 93 |        8 HSD|    max|  93 - 94 |        8 HSD|    max|  94 - 95 |        3 HSD|    max|  95 - 96 |        4 HSD|    max|  96 - 97 |        6 HSD|    max|  97 - 98 |        5 HSD|    max|  98 - 99 |        1 HSD|    max| 102 -103 |        2 HSD|    max| 103 -104 |        7 HSD|    max| 104 -105 |        3 HSD|    max| 105 -106 |        3 HSD|    max| 106 -107 |        9 HSD|    max| 107 -108 |       12 HSD|    max| 108 -109 |        6 HSD|    max| 109 -110 |        3 HSD|    max| 110 -111 |        7 HSD|    max| 112 -113 |        4 HSD|    max| 113 -114 |        4 HSD|    max| 115 -116 |        3 HSD|    max| 116 -117 |        6 HSD|    max| 117 -118 |        1 HSD|    max| 118 -119 |        1 HSD|    max| 119 -120 |        3 HSD|    max| 120 -121 |        3 HSD|    max| 121 -122 |        1 HSD|    max| 122 -123 |        3 HSD|    max| 123 -124 |        2 HSD|    max| 124 -125 |        1 HSD|    max| 125 -126 |        2 HSD|    max| 126 -127 |        1 HSD|    max| 127 -128 |        2 HSD|    max| 128 -129 |        1 HSD|    max| 131 -132 |        1 HSD|    max| 133 -134 |        1 HSD|    max| 134 -135 |        1 HSD|    max| 136 -137 |        1 HSD|    max| 137 -138 |        1 HSD|    max| 138 -139 |        1 HSD|    max| 139 -140 |        1 HSD|    max| 144 -145 |        1 HSD|    max| 166 -167 |        1 HSD|    max| 299 -300 |        1 HSH|--param|--samples-|--average--|---stddev-- HSS|    min|       599|      1.419|      0.507 HSS|    avg|   5999885|      3.398|      1.251 HSS|    max|       599|     74.015|     26.590 ---|-----------|-----------|-----------|--------|------|------------------------- RTS|      0.969|      3.948|    457.545|      94|     0|    00:10:01/00:10:00</p>"},{"location":"sigmatek/yocto/after_bitbake/","title":"After bitbake","text":""},{"location":"sigmatek/yocto/after_bitbake/#enable-kernel-modules","title":"Enable kernel modules","text":"<p>Host-Guest Tutorial To have trace-cmd trace guests from the host, it is required that the guest is set up with vsocks. These are a virtual socket that lets the guest connect directly with the host. To do this, make sure that your guest kernel has the following configurations:</p> <p>CONFIG_VSOCKETS=m CONFIG_VHOST_VSOCK=m CONFIG_VIRTIO_VSOCKETS=m CONFIG_VIRTIO_VSOCKETS_COMMON=m CONFIG_VSOCKETS_DIAG=m CONFIG_VSOCKETS_LOOPBACK=m And obviously have tracing enabled as well:</p> <p>CONFIG_TRACING=y CONFIG_FTRACE=y CONFIG_FUNCTION_TRACER=y CONFIG_FUNCTION_GRAPH_TRACER=y CONFIG_DYNAMIC_FTRACE=y CONFIG_DYNAMIC_FTRACE_WITH_REGS=y CONFIG_DYNAMIC_FTRACE_WITH_DIRECT_CALLS=y CONFIG_DYNAMIC_FTRACE_WITH_ARGS=y CONFIG_SCHED_TRACER=y CONFIG_FTRACE_SYSCALLS=y CONFIG_TRACER_SNAPSHOT=y CONFIG_KPROBE_EVENTS=y CONFIG_UPROBE_EVENTS=y CONFIG_BPF_EVENTS=y CONFIG_DYNAMIC_EVENTS=y CONFIG_PROBE_EVENTS=y CONFIG_SYNTH_EVENTS=y CONFIG_HIST_TRIGGERS=y  </p> <p>VirtioVsock</p>"},{"location":"sigmatek/yocto/after_bitbake/#bitbake","title":"bitbake","text":"<pre><code>../init.sh -b build -m sigmatek-core2 -d salamander\nbitbake salamander-image -k\n</code></pre>"},{"location":"sigmatek/yocto/after_bitbake/#qemu","title":"QEMU","text":"<p>Add <code>-append \"console=ttyS0 console=tty1 root=/dev/sda rw panic=1 sigmatek_lrt.QEMU=1 ip=dhcp rootfstype=ext4 schedstats=enable\" \\</code> <code>-net nic,model=e1000,netdev=e1000 -netdev bridge,id=e1000,br=nm-bridge \\</code> <code>-device vhost-vsock-pci,guest-cid=3,id=vsock0 \\</code></p> <pre><code>#!/bin/sh\n\nif  [ ! -d drive-c/ ]; then\n        echo \"Filling drive-c/\"\n        mkdir drive-c/\n        tar -C drive-c/ -xf stek-drive-c-image-sigmatek-core2.tar.gz\nfi\n\nexec qemu-system-x86_64 -M pc,accel=kvm -kernel ./bzImage \\\n-m 2048 -drive file=salamander-image-sigmatek-core2.ext4,format=raw,media=disk \\\n-append \"console=ttyS0 console=tty1 root=/dev/sda rw panic=1 sigmatek_lrt.QEMU=1 ip=dhcp rootfstype=ext4 schedstats=enable\" \\\n-net nic,model=e1000,netdev=e1000 -netdev bridge,id=e1000,br=nm-bridge \\\n-fsdev local,security_model=none,id=fsdev0,path=drive-c -device virtio-9p-pci,id=fs0,fsdev=fsdev0,mount_tag=/mnt/drive-C \\\n-device vhost-vsock-pci,guest-cid=3,id=vsock0 \\\n-drive if=pflash,format=qcow2,file=ovmf.code.qcow2 \\\n-no-reboot -nographic\n</code></pre>"},{"location":"sigmatek/yocto/after_bitbake/#scp-ipk-to-salamander4-and-install","title":"scp .ipk to Salamander4 and install","text":"<p>When you run bitbake xxx, the output of the build process, including any generated .ipk files, is typically stored in the tmp/deploy/ipk/ directory within your build directory1. The exact location can depend on your configuration and the specific recipe you\u2019re building.</p> <p>The .ipk files are package files used by opkg, a lightweight package management system. These files are created when you build a recipe that includes packaging steps. <pre><code>cd ~/Develop/Yocto_local/salamander/salamander-core2/build/tmp/deploy/ipk/core2-64$ scp trace-cmd_2.9.1-r0_core2-64.ipk root@10.30.248.137:/home/root/bb\nopkg install trace-cmd_2.9.1-r0_core2-64.ipk\n</code></pre></p>"},{"location":"sigmatek/yocto/after_bitbake/#warning-remote-host-identification-has-changed","title":"WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!","text":"<p><pre><code>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nIT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\nSomeone could be eavesdropping on you right now (man-in-the-middle attack)!\nIt is also possible that a host key has just been changed.\nThe fingerprint for the ED25519 key sent by the remote host is\nSHA256:R1FIDyOY4bzLdNIJ3CUgwFRRzZPiq4dHL/DA5YY3Bw8.\nPlease contact your system administrator.\nAdd correct host key in /home/sigma_ibo/.ssh/known_hosts to get rid of this message.\nOffending ED25519 key in /home/sigma_ibo/.ssh/known_hosts:12\n  remove with:\n  ssh-keygen -f \"/home/sigma_ibo/.ssh/known_hosts\" -R \"10.30.248.137\"\nHost key for 10.30.248.137 has changed and you have requested strict checking.\nHost key verification failed.\n</code></pre> It seems like the SSH host key for the server at 10.30.248.137 has changed, which is causing the connection to fail due to strict checking. This could happen for a few reasons, such as the server being reinstalled or the SSH service being reconfigured.</p> <p>You can resolve this issue by removing the old host key from your known_hosts file. The offending key is on line 12 of the file. You can remove it with the following command:</p> <p><pre><code>ssh-keygen -f \"/home/sigma_ibo/.ssh/known_hosts\" -R \"10.30.248.137\" # Salzburg\nssh-keygen -f \"/home/sigma_ibo/.ssh/known_hosts\" -R \"192.168.1.78\" # Wien\"\n</code></pre> This will remove the old key for 10.30.248.137 from your known_hosts file. The next time you connect, you should be prompted to accept the new host key.</p>"},{"location":"sigmatek/yocto/fix/","title":"Fix","text":""},{"location":"sigmatek/yocto/fix/#file0001patch-error","title":"File://0001.patch error","text":"<p>Unable to find file file://0001-Fix.patch</p> <pre><code>cd meta-sigmatek/\ngit branch\ncode ../meta-sigmatek/\ngitk\ngit rebase origin/master\ngit checkout master\ngit reset --hard\ngit checkout master\ngit pull\ngit fetch\ngit branch\ngit branch -D pamhal/virtualization\ngit branch\ngit pull\ngit fetch\ngit branch pamhal/virtual_master\ngit checkout pamhal/virtual_master\ngit branch\ngit status\ngit add recipes-kernel/stek-common/files/x86-64/defconfig\ngit commit\ngit push\ngit push --set-upstream origin pamhal/virtual_master\ngit branch\ngit pull\ncode .\ncd salamander/salamander-core2\n../init.sh -b build -m sigmatek-core2 -d salamander\nbitbake salamander-image -k\n</code></pre>"},{"location":"workflow/gitlfs/","title":"Git LFS","text":""},{"location":"workflow/gitlfs/#step-1-install-git-lfs","title":"Step 1: Install Git LFS","text":"<p>For Debian/Ubuntu systems, use the following commands:</p> <pre><code>curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash\nsudo apt-get install git-lfs\n</code></pre>"},{"location":"workflow/gitlfs/#step-2-initialize-git-lfs","title":"Step 2: Initialize Git LFS","text":"<p>After installation, set up Git LFS for your user account by running: <pre><code>git lfs install\n</code></pre></p>"},{"location":"workflow/gitlfs/#step-optional-untrack-the-file-from-git","title":"Step optional: Untrack the file from Git:","text":"<p>Use the git rm --cached command to untrack the file1. For example, if your file is named largefile.zip, you would use: <pre><code>git rm --cached largefile.zip\n</code></pre></p>"},{"location":"workflow/gitlfs/#step-3-track-the-large-file-with-git-lfs","title":"Step 3: Track the Large File with Git LFS","text":"<p>Before adding and committing the file, you need to tell Git LFS to track it. You can do this with the git lfs track command. For example, if your large file is a .zip file, you would use: <pre><code>git lfs track \"*.zip\"\n</code></pre></p> <p>Replace *.zip with the type of your large file. If you want to track a specific file, you can replace *.zip with the path to your file.</p>"},{"location":"workflow/gitlfs/#step-4-add-and-commit-the-file","title":"Step 4: Add and Commit the File","text":"<p>After tracking the file with Git LFS, you can add it to your Git repository and commit it as usual: <pre><code>git add your_large_file.zip\ngit commit -m \"Add large file\"\n</code></pre></p> <p>Replace your_large_file.zip with the path to your large file.</p>"},{"location":"workflow/gitlfs/#step-5-push-the-file-to-your-remote-repository","title":"Step 5: Push the File to Your Remote Repository","text":"<p>Finally, you can push your changes to your remote repository: <pre><code>git push origin main\n</code></pre> Replace main with the name of your branch if it\u2019s not main.</p> <p>By following these steps, Git LFS will handle your large files, and you should be able to push them to your remote repository without any issues.</p> <p>Please replace <code>your_large_file.zip</code> and <code>main</code> with your actual file name and branch name respectively.</p>"},{"location":"workflow/gittutorial/","title":"Git Tutorial","text":""},{"location":"workflow/gittutorial/#name","title":"NAME","text":"<p>gittutorial - A tutorial introduction to Git</p>"},{"location":"workflow/gittutorial/#synopsis","title":"SYNOPSIS","text":"<p>git *</p>"},{"location":"workflow/gittutorial/#description","title":"DESCRIPTION","text":"<p>This tutorial explains how to import a new project into Git, make changes to it, and share changes with other developers.</p> <p>If you are instead primarily interested in using Git to fetch a project, for example, to test the latest version, you may prefer to start with the first two chapters of The Git User\u2019s Manual.</p> <p>First, note that you can get documentation for a command such as <code>git log --graph</code> with:</p> <p>or:</p> <p>With the latter, you can use the manual viewer of your choice; see git-help(1) for more information.</p> <p>It is a good idea to introduce yourself to Git with your name and public email address before doing any operation. The easiest way to do so is:</p> <pre><code>$ git config --global user.name \"Your Name Comes Here\"\n$ git config --global user.email you@yourdomain.example.com\n</code></pre>"},{"location":"workflow/gittutorial/#importing-a-new-project","title":"Importing a new project","text":"<p>Assume you have a tarball <code>project.tar.gz</code> with your initial work. You can place it under Git revision control as follows.</p> <pre><code>$ tar xzf project.tar.gz\n$ cd project\n$ git init\n</code></pre> <p>Git will reply</p> <pre><code>Initialized empty Git repository in .git/\n</code></pre> <p>You\u2019ve now initialized the working directory\u2014you may notice a new directory created, named <code>.git</code>.</p> <p>Next, tell Git to take a snapshot of the contents of all files under the current directory (note the <code>.</code>), with <code>git add</code>:</p> <p>This snapshot is now stored in a temporary staging area which Git calls the \"index\". You can permanently store the contents of the index in the repository with <code>git commit</code>:</p> <p>This will prompt you for a commit message. You\u2019ve now stored the first version of your project in Git.</p>"},{"location":"workflow/gittutorial/#making-changes","title":"Making changes","text":"<p>Modify some files, then add their updated contents to the index:</p> <pre><code>$ git add file1 file2 file3\n</code></pre> <p>You are now ready to commit. You can see what is about to be committed using <code>git diff</code> with the <code>--cached</code> option:</p> <p>(Without <code>--cached</code>, <code>git diff</code> will show you any changes that you\u2019ve made but not yet added to the index.) You can also get a brief summary of the situation with <code>git status</code>:</p> <pre><code>$ git status\nOn branch master\nChanges to be committed:\n  (use \"git restore --staged &amp;lt;file&amp;gt;...\" to unstage)\n\n        modified:   file1\n        modified:   file2\n        modified:   file3\n</code></pre> <p>If you need to make any further adjustments, do so now, and then add any newly modified content to the index. Finally, commit your changes with:</p> <p>This will again prompt you for a message describing the change, and then record a new version of the project.</p> <p>Alternatively, instead of running <code>git add</code> beforehand, you can use</p> <p>which will automatically notice any modified (but not new) files, add them to the index, and commit, all in one step.</p> <p>A note on commit messages: Though not required, it\u2019s a good idea to begin the commit message with a single short (no more than 50 characters) line summarizing the change, followed by a blank line and then a more thorough description. The text up to the first blank line in a commit message is treated as the commit title, and that title is used throughout Git. For example, git-format-patch(1) turns a commit into email, and it uses the title on the Subject line and the rest of the commit in the body.</p>"},{"location":"workflow/gittutorial/#git-tracks-content-not-files","title":"Git tracks content not files","text":"<p>Many revision control systems provide an <code>add</code> command that tells the system to start tracking changes to a new file. Git\u2019s <code>add</code> command does something simpler and more powerful: <code>git add</code> is used both for new and newly modified files, and in both cases it takes a snapshot of the given files and stages that content in the index, ready for inclusion in the next commit.</p>"},{"location":"workflow/gittutorial/#viewing-project-history","title":"Viewing project history","text":"<p>At any point you can view the history of your changes using</p> <p>If you also want to see complete diffs at each step, use</p> <p>Often the overview of the change is useful to get a feel of each step</p> <pre><code>$ git log --stat --summary\n</code></pre>"},{"location":"workflow/gittutorial/#managing-branches","title":"Managing branches","text":"<p>A single Git repository can maintain multiple branches of development. To create a new branch named <code>experimental</code>, use</p> <pre><code>$ git branch experimental\n</code></pre> <p>If you now run</p> <p>you\u2019ll get a list of all existing branches:</p> <p>The <code>experimental</code> branch is the one you just created, and the <code>master</code> branch is a default branch that was created for you automatically. The asterisk marks the branch you are currently on; type</p> <pre><code>$ git switch experimental\n</code></pre> <p>to switch to the <code>experimental</code> branch. Now edit a file, commit the change, and switch back to the <code>master</code> branch:</p> <pre><code>(edit file)\n$ git commit -a\n$ git switch master\n</code></pre> <p>Check that the change you made is no longer visible, since it was made on the <code>experimental</code> branch and you\u2019re back on the <code>master</code> branch.</p> <p>You can make a different change on the <code>master</code> branch:</p> <pre><code>(edit file)\n$ git commit -a\n</code></pre> <p>at this point the two branches have diverged, with different changes made in each. To merge the changes made in <code>experimental</code> into <code>master</code>, run</p> <p>If the changes don\u2019t conflict, you\u2019re done. If there are conflicts, markers will be left in the problematic files showing the conflict;</p> <p>will show this. Once you\u2019ve edited the files to resolve the conflicts,</p> <p>will commit the result of the merge. Finally,</p> <p>will show a nice graphical representation of the resulting history.</p> <p>At this point you could delete the <code>experimental</code> branch with</p> <pre><code>$ git branch -d experimental\n</code></pre> <p>This command ensures that the changes in the <code>experimental</code> branch are already in the current branch.</p> <p>If you develop on a branch <code>crazy-idea</code>, then regret it, you can always delete the branch with</p> <pre><code>$ git branch -D crazy-idea\n</code></pre> <p>Branches are cheap and easy, so this is a good way to try something out.</p>"},{"location":"workflow/gittutorial/#using-git-for-collaboration","title":"Using Git for collaboration","text":"<p>Suppose that Alice has started a new project with a Git repository in <code>/home/alice/project</code>, and that Bob, who has a home directory on the same machine, wants to contribute.</p> <p>Bob begins with:</p> <pre><code>bob$ git clone /home/alice/project myrepo\n</code></pre> <p>This creates a new directory <code>myrepo</code> containing a clone of Alice\u2019s repository. The clone is on an equal footing with the original project, possessing its own copy of the original project\u2019s history.</p> <p>Bob then makes some changes and commits them:</p> <pre><code>(edit files)\nbob$ git commit -a\n(repeat as necessary)\n</code></pre> <p>When he\u2019s ready, he tells Alice to pull changes from the repository at <code>/home/bob/myrepo</code>. She does this with:</p> <pre><code>alice$ cd /home/alice/project\nalice$ git pull /home/bob/myrepo master\n</code></pre> <p>This merges the changes from Bob\u2019s <code>master</code> branch into Alice\u2019s current branch. If Alice has made her own changes in the meantime, then she may need to manually fix any conflicts.</p> <p>The <code>pull</code> command thus performs two operations: it fetches changes from a remote branch, then merges them into the current branch.</p> <p>Note that in general, Alice would want her local changes committed before initiating this <code>pull</code>. If Bob\u2019s work conflicts with what Alice did since their histories forked, Alice will use her working tree and the index to resolve conflicts, and existing local changes will interfere with the conflict resolution process (Git will still perform the fetch but will refuse to merge\u2009\u2014\u2009Alice will have to get rid of her local changes in some way and pull again when this happens).</p> <p>Alice can peek at what Bob did without merging first, using the <code>fetch</code> command; this allows Alice to inspect what Bob did, using a special symbol <code>FETCH_HEAD</code>, in order to determine if he has anything worth pulling, like this:</p> <pre><code>alice$ git fetch /home/bob/myrepo master\nalice$ git log -p HEAD..FETCH_HEAD\n</code></pre> <p>This operation is safe even if Alice has uncommitted local changes. The range notation <code>HEAD..FETCH_HEAD</code> means \"show everything that is reachable from the <code>FETCH_HEAD</code> but exclude anything that is reachable from <code>HEAD</code>\". Alice already knows everything that leads to her current state (<code>HEAD</code>), and reviews what Bob has in his state (<code>FETCH_HEAD</code>) that she has not seen with this command.</p> <p>If Alice wants to visualize what Bob did since their histories forked she can issue the following command:</p> <p>This uses the same two-dot range notation we saw earlier with <code>git log</code>.</p> <p>Alice may want to view what both of them did since they forked. She can use three-dot form instead of the two-dot form:</p> <p>This means \"show everything that is reachable from either one, but exclude anything that is reachable from both of them\".</p> <p>Please note that these range notation can be used with both <code>gitk</code> and <code>git log</code>.</p> <p>After inspecting what Bob did, if there is nothing urgent, Alice may decide to continue working without pulling from Bob. If Bob\u2019s history does have something Alice would immediately need, Alice may choose to stash her work-in-progress first, do a <code>pull</code>, and then finally unstash her work-in-progress on top of the resulting history.</p> <p>When you are working in a small closely knit group, it is not unusual to interact with the same repository over and over again. By defining remote repository shorthand, you can make it easier:</p> <pre><code>alice$ git remote add bob /home/bob/myrepo\n</code></pre> <p>With this, Alice can perform the first part of the <code>pull</code> operation alone using the <code>git fetch</code> command without merging them with her own branch, using:</p> <p>Unlike the longhand form, when Alice fetches from Bob using a remote repository shorthand set up with <code>git remote</code>, what was fetched is stored in a remote-tracking branch, in this case <code>bob/master</code>. So after this:</p> <pre><code>alice$ git log -p master..bob/master\n</code></pre> <p>shows a list of all the changes that Bob made since he branched from Alice\u2019s <code>master</code> branch.</p> <p>After examining those changes, Alice could merge the changes into her <code>master</code> branch:</p> <pre><code>alice$ git merge bob/master\n</code></pre> <p>This <code>merge</code> can also be done by pulling from her own remote-tracking branch, like this:</p> <pre><code>alice$ git pull . remotes/bob/master\n</code></pre> <p>Note that git pull always merges into the current branch, regardless of what else is given on the command line.</p> <p>Later, Bob can update his repo with Alice\u2019s latest changes using</p> <p>Note that he doesn\u2019t need to give the path to Alice\u2019s repository; when Bob cloned Alice\u2019s repository, Git stored the location of her repository in the repository configuration, and that location is used for pulls:</p> <pre><code>bob$ git config --get remote.origin.url\n/home/alice/project\n</code></pre> <p>(The complete configuration created by <code>git clone</code> is visible using <code>git config -l</code>, and the git-config(1) man page explains the meaning of each option.)</p> <p>Git also keeps a pristine copy of Alice\u2019s <code>master</code> branch under the name <code>origin/master</code>:</p> <pre><code>bob$ git branch -r\n  origin/master\n</code></pre> <p>If Bob later decides to work from a different host, he can still perform clones and pulls using the ssh protocol:</p> <pre><code>bob$ git clone alice.org:/home/alice/project myrepo\n</code></pre> <p>Alternatively, Git has a native protocol, or can use http; see git-pull(1) for details.</p> <p>Git can also be used in a CVS-like mode, with a central repository that various users push changes to; see git-push(1) and gitcvs-migration(7).</p>"},{"location":"workflow/gittutorial/#exploring-history","title":"Exploring history","text":"<p>Git history is represented as a series of interrelated commits. We have already seen that the <code>git log</code> command can list those commits. Note that first line of each <code>git log</code> entry also gives a name for the commit:</p> <pre><code>$ git log\ncommit c82a22c39cbc32576f64f5c6b3f24b99ea8149c7\nAuthor: Junio C Hamano &amp;lt;junkio@cox.net&amp;gt;\nDate:   Tue May 16 17:18:22 2006 -0700\n\n    merge-base: Clarify the comments on post processing.\n</code></pre> <p>We can give this name to <code>git show</code> to see the details about this commit.</p> <pre><code>$ git show c82a22c39cbc32576f64f5c6b3f24b99ea8149c7\n</code></pre> <p>But there are other ways to refer to commits. You can use any initial part of the name that is long enough to uniquely identify the commit:</p> <pre><code>$ git show c82a22c39c   # the first few characters of the name are\n                        # usually enough\n$ git show HEAD         # the tip of the current branch\n$ git show experimental # the tip of the \"experimental\" branch\n</code></pre> <p>Every commit usually has one \"parent\" commit which points to the previous state of the project:</p> <pre><code>$ git show HEAD^  # to see the parent of HEAD\n$ git show HEAD^^ # to see the grandparent of HEAD\n$ git show HEAD~4 # to see the great-great grandparent of HEAD\n</code></pre> <p>Note that merge commits may have more than one parent:</p> <pre><code>$ git show HEAD^1 # show the first parent of HEAD (same as HEAD^)\n$ git show HEAD^2 # show the second parent of HEAD\n</code></pre> <p>You can also give commits names of your own; after running</p> <pre><code>$ git tag v2.5 1b2e1d63ff\n</code></pre> <p>you can refer to <code>1b2e1d63ff</code> by the name <code>v2.5</code>. If you intend to share this name with other people (for example, to identify a release version), you should create a \"tag\" object, and perhaps sign it; see git-tag(1) for details.</p> <p>Any Git command that needs to know a commit can take any of these names. For example:</p> <pre><code>$ git diff v2.5 HEAD     # compare the current HEAD to v2.5\n$ git branch stable v2.5 # start a new branch named \"stable\" based\n                         # at v2.5\n$ git reset --hard HEAD^ # reset your current branch and working\n                         # directory to its state at HEAD^\n</code></pre> <p>Be careful with that last command: in addition to losing any changes in the working directory, it will also remove all later commits from this branch. If this branch is the only branch containing those commits, they will be lost. Also, don\u2019t use <code>git reset</code> on a publicly-visible branch that other developers pull from, as it will force needless merges on other developers to clean up the history. If you need to undo changes that you have pushed, use <code>git revert</code> instead.</p> <p>The <code>git grep</code> command can search for strings in any version of your project, so</p> <p>searches for all occurrences of \"hello\" in <code>v2.5</code>.</p> <p>If you leave out the commit name, <code>git grep</code> will search any of the files it manages in your current directory. So</p> <p>is a quick way to search just the files that are tracked by Git.</p> <p>Many Git commands also take sets of commits, which can be specified in a number of ways. Here are some examples with <code>git log</code>:</p> <pre><code>$ git log v2.5..v2.6            # commits between v2.5 and v2.6\n$ git log v2.5..                # commits since v2.5\n$ git log --since=\"2 weeks ago\" # commits from the last 2 weeks\n$ git log v2.5.. Makefile       # commits since v2.5 which modify\n                                # Makefile\n</code></pre> <p>You can also give <code>git log</code> a \"range\" of commits where the first is not necessarily an ancestor of the second; for example, if the tips of the branches <code>stable</code> and <code>master</code> diverged from a common commit some time ago, then</p> <p>will list commits made in the <code>master</code> branch but not in the stable branch, while</p> <p>will show the list of commits made on the stable branch but not the <code>master</code> branch.</p> <p>The <code>git log</code> command has a weakness: it must present commits in a list. When the history has lines of development that diverged and then merged back together, the order in which <code>git log</code> presents those commits is meaningless.</p> <p>Most projects with multiple contributors (such as the Linux kernel, or Git itself) have frequent merges, and <code>gitk</code> does a better job of visualizing their history. For example,</p> <pre><code>$ gitk --since=\"2 weeks ago\" drivers/\n</code></pre> <p>allows you to browse any commits from the last 2 weeks of commits that modified files under the <code>drivers</code> directory. (Note: you can adjust gitk\u2019s fonts by holding down the control key while pressing \"-\" or \"+\".)</p> <p>Finally, most commands that take filenames will optionally allow you to precede any filename by a commit, to specify a particular version of the file:</p> <pre><code>$ git diff v2.5:Makefile HEAD:Makefile.in\n</code></pre> <p>You can also use <code>git show</code> to see any such file:</p>"},{"location":"workflow/gittutorial/#next-steps","title":"Next Steps","text":"<p>This tutorial should be enough to perform basic distributed revision control for your projects. However, to fully understand the depth and power of Git you need to understand two simple ideas on which it is based:</p> <ul> <li> <p>The object database is the rather elegant system used to store the history of your project\u2014files, directories, and commits.</p> </li> <li> <p>The index file is a cache of the state of a directory tree, used to create commits, check out working directories, and hold the various trees involved in a merge.</p> </li> </ul> <p>Part two of this tutorial explains the object database, the index file, and a few other odds and ends that you\u2019ll need to make the most of Git. You can find it at gittutorial-2(7).</p> <p>If you don\u2019t want to continue with that right away, a few other digressions that may be interesting at this point are:</p> <ul> <li> <p>git-format-patch(1), git-am(1): These convert series of git commits into emailed patches, and vice versa, useful for projects such as the Linux kernel which rely heavily on emailed patches.</p> </li> <li> <p>git-bisect(1): When there is a regression in your project, one way to track down the bug is by searching through the history to find the exact commit that\u2019s to blame. <code>git bisect</code> can help you perform a binary search for that commit. It is smart enough to perform a close-to-optimal search even in the case of complex non-linear history with lots of merged branches.</p> </li> <li> <p>gitworkflows(7): Gives an overview of recommended workflows.</p> </li> <li> <p>giteveryday(7): Everyday Git with 20 Commands Or So.</p> </li> <li> <p>gitcvs-migration(7): Git for CVS users.</p> </li> </ul>"},{"location":"workflow/gittutorial/#see-also","title":"SEE ALSO","text":""},{"location":"workflow/gittutorial/#git","title":"GIT","text":""},{"location":"workflow/most_popular_paths/","title":"Most popular paths","text":""},{"location":"workflow/most_popular_paths/#qemu_defsh","title":"qemu_def.sh","text":"<pre><code>cd /home/sigma_ibo/Develop/Yocto_local/salamander/salamander-core2/build/tmp/deploy/qemu/sigmatek-core2/salamander-image\n</code></pre>"},{"location":"workflow/most_popular_paths/#bitbake","title":"bitbake","text":"<pre><code>cd /home/sigma_ibo/Develop/Yocto_local/salamander/salamander-core2\n../init.sh -b build -m sigmatek-core2 -d salamander\nbitbake salamander-image -k\n</code></pre>"},{"location":"workflow/most_popular_paths/#trace-cmd-analysis","title":"trace-cmd analysis","text":"<pre><code>cd /home/sigma_ibo/Desktop/Masterarbeit/documentation/trace-cmd/analysis/\n</code></pre>"},{"location":"workflow/useful/","title":"Useful","text":""},{"location":"workflow/useful/#symbolic-link-to-windows-folder","title":"Symbolic Link to Windows Folder","text":"<p><code>ln -s /media/sigma_ibo/Windows/Dokumente\\ und\\ Einstellungen/Pamibr/Desktop/Masterarbeit/ /home/sigma_ibo/Desktop/</code> Symbolic Link to Windows Folder</p>"},{"location":"workflow/useful/#mount-windows-partition-desktop","title":"Mount Windows partition Desktop","text":"<ul> <li><code>sudo nano /etc/fstab</code> </li> <li>At the end of the file, add: UUID=0E58A36658A34B73 /home/sigma_ibo/Desktop ntfs defaults 0 0, it looks like  this </li> <li>reboot</li> </ul>"},{"location":"workflow/useful/#how-to-extract-unzip-tarxz-file","title":"How to Extract (Unzip) tar.xz File","text":"<p>How to Extract (Unzip) tar.xz File</p>"},{"location":"workflow/useful/#launch-programs-after-startup","title":"Launch programs after startup","text":"<ul> <li><code>nano /home/sigma_ibo/startup.sh</code></li> <li><code>chmod +x /home/sigma_ibo/startup.sh</code></li> <li>File: startup.sh </li> <li>Configure Startup Apps</li> </ul>"},{"location":"workflow/useful/#install-gnome","title":"Install gnome","text":"<p><code>sudo apt install gnome-shell-extension-ubuntu-dock</code></p>"},{"location":"workflow/useful/#desktop-folders-not-visible","title":"Desktop folders not visible","text":"<p><code>sudo apt install ubuntu-desktop</code></p>"},{"location":"workflow/useful/#windows-11-on-qemu-and-display-settings","title":"Windows 11 on QEMU and display settings","text":"<p>Install Windows 11 in KVM on Ubuntu 22.04 Execute virtio-win-guest-tools in VM Windows 10 VM shows 100% CPU QEMU settings: QEMU, XML win11 Windows 10 VM Settings</p>"},{"location":"workflow/useful/#remove-keyring-from-edge","title":"Remove keyring from Edge","text":"<p>To stop being prompted to unlock the \u2018default\u2019 keyring on boot, set a blank password for the keyring. - Open the utility \u201cPasswords &amp; Keys\u201d. If not installed: <code>sudo apt-get install seahorse</code> - Right-click the \u201cLogin\u201d folder and select \u201cChange Password\u201d. - Enter your old password and leave the new password blank.</p>"},{"location":"workflow/useful/#see-how-many-cores-you-have","title":"See how many cores you have","text":"<p><code>nproc</code> or <code>cat /proc/cpuinfo | grep processor | wc -l</code> or <code>cat /proc/cpuinfo | grep 'core id'</code> or <code>lscpu</code></p>"},{"location":"workflow/useful/#untrack-files-to-be-ignored-named-documentationtest-in-git","title":"Untrack files to be ignored named \u201cdocumentation/test\u201d in git:","text":"<p><code>git rm --cached documentation/test</code> How To Fix Gitignore Not Working</p>"},{"location":"workflow/useful/#remove-a-commit-but-keep-the-changes-in-your-working-directory","title":"Remove a commit but keep the changes in your working directory","text":"<p>git reset --soft HEAD~1</p>"},{"location":"workflow/useful/#start_qemush-from-everytwhere","title":"start_qemu.sh from everytwhere","text":"<p>Script start_qemu.sh needs to be in <code>/home/sigma_ibo/Desktop/Masterarbeit/masterthesis-documentation/QEMU/</code>.  <pre><code>sudo nano ~/.bashrc\nexport PATH=$PATH:/home/sigma_ibo/Desktop/Masterarbeit/documentation/resources/QEMU/\n</code></pre></p>"},{"location":"workflow/useful/#add-konsole-to-replace-console","title":"Add konsole to replace console","text":"<p>nautilus-open-any-terminal</p>"},{"location":"workflow/useful/#ssh-ohne-passwort","title":"ssh ohne Passwort","text":"<p>Um eine SSH-Verbindung von Ihrem Host-Computer zu Ihrem Gast-Computer (oder Server) herzustellen, k\u00f6nnen Sie die folgenden Schritte ausf\u00fchren:</p> <ol> <li>Generieren Sie ein SSH-Schl\u00fcsselpaar auf Ihrem Host-Computer. Sie k\u00f6nnen dies mit dem Befehl <code>ssh-keygen</code> tun. Sie werden aufgefordert, ein Passwort einzugeben, aber Sie k\u00f6nnen einfach Enter dr\u00fccken, um kein Passwort zu setzen (obwohl dies aus Sicherheitsgr\u00fcnden nicht empfohlen wird).</li> </ol> <pre><code>ssh-keygen\n</code></pre> <ol> <li>Kopieren Sie Ihren \u00f6ffentlichen Schl\u00fcssel auf den Gast-Computer. Sie k\u00f6nnen dies mit dem Befehl <code>ssh-copy-id</code> tun. Ersetzen Sie <code>benutzername</code> durch Ihren Benutzernamen auf dem Gast-Computer und <code>ip_address</code> durch die IP-Adresse des Gast-Computers.</li> </ol> <pre><code>ssh-copy-id root@192.168.1.51\n</code></pre> <ol> <li>Stellen Sie eine SSH-Verbindung zum Gast-Computer her. Sie k\u00f6nnen dies mit dem Befehl <code>ssh</code> tun. Ersetzen Sie wieder <code>benutzername</code> und <code>ip_address</code> durch Ihren Benutzernamen und die IP-Adresse des Gast-Computers.</li> </ol> <pre><code>ssh root@192.168.1.51\n</code></pre> <p>Nachdem Sie diese Schritte ausgef\u00fchrt haben, sollten Sie in der Lage sein, sich ohne Passwort bei Ihrem Gast-Computer anzumelden. </p> <p>Wenn Sie den ssh-copy-id Befehl verwenden, wird Ihr \u00f6ffentlicher SSH-Schl\u00fcssel in der Datei <code>~/.ssh/authorized_keys</code> auf dem Gast-Computer (dem Computer, zu dem Sie eine SSH-Verbindung herstellen) gespeichert.</p> <p>Jede Zeile in dieser Datei repr\u00e4sentiert einen \u00f6ffentlichen Schl\u00fcssel, der f\u00fcr die Authentifizierung zugelassen ist. Wenn Sie also mehrere Schl\u00fcssel haben, die Sie verwenden, um sich bei diesem Computer anzumelden, wird jeder Schl\u00fcssel als separate Zeile in dieser Datei angezeigt</p>"},{"location":"workflow/useful/#check-on-which-cpu-a-task-is-running","title":"Check on which CPU a task is running","text":"<p><code>ps -eo pid,psr,comm | grep &lt;name&gt;</code></p>"},{"location":"workflow/useful/#limit-wsl2-resources","title":"Limit WSL2 resources","text":"<p>Edit the WSL config to limit the memory usage as mentioned here. <pre><code>#turn off all wsl instances such as docker-desktop\nwsl --shutdown\nnotepad \"$env:USERPROFILE/.wslconfig\"\n</code></pre> Set the values you want for CPU core and Memory:</p> <pre><code>[wsl2]\nmemory=3GB   # Limits VM memory in WSL 2 up to 3GB\nprocessors=2 # Makes the WSL 2 VM use two virtual processors\n</code></pre>"},{"location":"workflow/useful_links/","title":"Useful links","text":""},{"location":"workflow/useful_links/#ftrace","title":"ftrace","text":"<p>Analyze the Linux kernel with ftrace ftrace - Function Tracer ftrace: trace your kernel functions! </p>"},{"location":"workflow/useful_links/#trace-cmd","title":"trace-cmd","text":"<p>Youtube: Tracing VMs Seeing How Host and Guest Interact - Steven Rostedt, Google trace-cmd Tutorial trace-cmd Presentation trace-cmd Documentation trace-cmd: A front-end for Ftrace Kernel tracing with trace-cmd Git repo trace-cmd </p>"},{"location":"workflow/useful_links/#yocto","title":"Yocto","text":"<p>Yocto Project Documentation</p>"},{"location":"workflow/useful_links/#sigmatek","title":"Sigmatek","text":"<p>Sigmatek Documentation Sigmatek Git</p>"},{"location":"workflow/useful_links/#qemu","title":"QEMU","text":"<p>QEMU Documentation</p>"},{"location":"workflow/useful_links/#kernel-config","title":"Kernel config","text":"<p>kernelconfig Documentation</p>"},{"location":"workflow/useful_links/#ai","title":"AI","text":"<p>Copilot ChatGPT ChatGPT prompt splitter</p>"},{"location":"workflow/useful_notneeded/","title":"Useful notneeded","text":""},{"location":"workflow/useful_notneeded/#add-more-cpus-to-qemu-virtual-machine-with-smp-option","title":"Add more CPUs to QEMU virtual machine with -smp option","text":"<p>The -smp option specifies the number of CPUs</p> <p>Replace n with the number of CPUs you want to add. For example, if you want to add 4 CPUs, you would use -smp cpus=4.</p> <p>After making these changes, the specified number of CPUs will be available when you boot your Yocto image with this script.  <pre><code>exec qemu-system-x86_64 -M pc,accel=kvm -kernel ./bzImage \\\n-m 2048 -drive file=salamander-image-sigmatek-core2.ext4,format=raw,media=disk \\\n-append \"console=ttyS0 console=tty1 root=/dev/sda rw panic=1 sigmatek_lrt.QEMU=1 ip=dhcp rootfstype=ext4 \\\n-net nic,model=e1000,netdev=e1000 -netdev bridge,id=e1000,br=nm-bridge \\\n-fsdev local,security_model=none,id=fsdev0,path=drive-c -device virtio-9p-pci,id=fs0,fsdev=fsdev0,mount_&gt;\n-drive if=pflash,format=qcow2,file=ovmf.code.qcow2 \\\n-smp cpus=n \\\n-no-reboot -nographic\n</code></pre> Check with: <code>cat /sys/devices/system/cpu/online</code> <pre><code>root@sigmatek-core2:~# cat /sys/devices/system/cpu/online\n0-9\n</code></pre></p>"},{"location":"workflow/useful_notneeded/#isolate-cpus-with-isolcpus","title":"Isolate CPUs with isolcpus","text":"<p>To use isolcpus in a Yocto image, you need to add it to the kernel command line parameters. In your case, these parameters are specified in the -append option in your QEMU command. Add isolcpus=x,y,z. Replace x,y,z with the CPU cores you want to isolate. For example, if you want to isolate cores 0, 1 and 2, you would use isolcpus=0,1,2. <pre><code>exec qemu-system-x86_64 -M pc,accel=kvm -kernel ./bzImage \\\n-m 2048 -drive file=salamander-image-sigmatek-core2.ext4,format=raw,media=disk \\\n-append \"console=ttyS0 console=tty1 root=/dev/sda rw panic=1 sigmatek_lrt.QEMU=1 ip=dhcp rootfstype=ext4 isolcpus=0,1,2\" \\\n-net nic,model=e1000,netdev=e1000 -netdev bridge,id=e1000,br=nm-bridge \\\n-fsdev local,security_model=none,id=fsdev0,path=drive-c -device virtio-9p-pci,id=fs0,fsdev=fsdev0,mount_&gt;\n-drive if=pflash,format=qcow2,file=ovmf.code.qcow2 \\\n-smp cpus=n \\\n-no-reboot -nographic\n</code></pre> Check with: <code>cat /sys/devices/system/cpu/isolated</code> <pre><code>root@sigmatek-core2:~# cat /sys/devices/system/cpu/isolated\n0-2\n</code></pre></p>"},{"location":"workflow/useful_notneeded/#gid-pid-of-processes","title":"Gid PID Of processes","text":"<p>Start latency and write output to latency_output.txt: <code>latency -T 60 &gt; latency_output.txt 2&gt;&amp;1 &amp;</code> Get ID of xenomai task: <code>ps aux | grep latency</code> <pre><code>root@sigmatek-core2:~# latency -T 60 &gt; latency_output.txt 2&gt;&amp;1 &amp;\n[1] 557\nroot@sigmatek-core2:~# ps aux | grep latency\nroot       557  0.0  0.6  14040 12852 ttyS0    SLl  11:34   0:00 latency -T 60\nroot       563  0.0  0.0   3256  1148 ttyS0    S+   11:34   0:00 grep latency\n</code></pre></p>"},{"location":"workflow/useful_notneeded/#assign-tasks-to-the-isolated-cpus","title":"Assign tasks to the isolated CPUs","text":"<p>To assign these latency tasks to the isolated CPUs, you can use the taskset command with the process ID (PID) of each latency task. For example, if you want to assign the latency task with PID 536 to CPU 1, you would use:</p> <p><code>taskset -pc x abc</code></p> <p>Remember to replace abc with the actual PID of the latency task. You can repeat this process for each latency task and each isolated CPU.</p>"},{"location":"workflow/useful_notneeded/#kill-processes","title":"Kill processes","text":"<p>Kill processes with <code>kill x</code></p>"},{"location":"workflow/useful_notneeded/#m-error-message","title":"^M error message","text":"<p>The error message you're seeing is typically caused by a mismatch in line endings. Scripts that have been edited or created on Windows use a different line ending (<code>\\r\\n</code>) than Unix/Linux (<code>\\n</code>). The <code>^M</code> in the error message is a visual representation of <code>\\r</code> (carriage return), which is not expected or understood by the Linux shell.</p> <p>You can convert the line endings of your script to the Unix format using a tool like <code>dos2unix</code>. Here's how you can do it:</p> <pre><code>sudo apt-get install dos2unix  # Install dos2unix tool\ndos2unix &lt;file&gt;\n</code></pre>"},{"location":"workflow/useful_notneeded/#split-too-long-prompt","title":"Split too long Prompt","text":"<p>ChatGPT PROMPTs Splitter</p>"},{"location":"workflow/useful_notneeded/#configure-ip-addresses","title":"Configure ip addresses","text":"<p>Configure PC to <code>10.10.1.1</code>.  Salamander Gateway set to <code>10.10.1.229</code></p>"},{"location":"workflow/useful_notneeded/#stress-the-cpus","title":"Stress the CPUs","text":"<p>stress -c $(nproc)</p>"},{"location":"workflow/vscode/","title":"Useful VSCode stuff","text":"command Description ^.word.$ Delete lines containing word ^(\\s)*$\\n Delete blank lines"}]}